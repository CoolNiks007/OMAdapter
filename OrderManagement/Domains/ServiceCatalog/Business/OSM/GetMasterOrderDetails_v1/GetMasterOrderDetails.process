<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://vodafone.com.tr/EAI/Common/Header" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns1="http://xmlns.oracle.com/communications/ordermanagement" xmlns:ns4="http://vodafone.com.tr/OrderManagement/Technical/Shared/GetMasterOrder/v1" xmlns:ns="http://vodafone.com.tr/ServiceCatalog/Business/OSM/GetMasterOrderDetails/v1" xmlns:ns3="http://www.tibco.com/pe/DeployedVarsType" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx2="http://vodafone.com.tr/EAI/Common/ResponseEAI" xmlns:ns6="http://com.telco.ba.services/" xmlns:pfx="http://vodafone.com.tr/EAI/Common/RequestEAI">
    <xsd:import namespace="http://vodafone.com.tr/EAI/Common/RequestEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/RequestEAI.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/EAI/Common/ResponseEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/ResponseEAI.xsd"/>
    <xsd:import namespace="http://xmlns.oracle.com/communications/ordermanagement" schemaLocation="/Domains/OrderManagement/TechnicalResources/Schemas/OSM/OrderManagementWS.xsd"/>
    <xsd:import namespace="http://com.telco.ba.services/" schemaLocation="/Domains/OrderManagement/TechnicalResources/WSDL/Splitter/SplitterWS.wsdl"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/OSM/GetMasterOrderDetails/v1" schemaLocation="/Domains/ServiceCatalog/Business/OSM/GetMasterOrderDetails_v1/Schemas/GetMasterOrderDetails.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/OrderManagement/Technical/Shared/GetMasterOrder/v1" schemaLocation="/Domains/OrderManagement/TechnicalResources/Schemas/Shared/GetMasterOrder.xsd"/>
    <pd:name>Domains/ServiceCatalog/Business/OSM/GetMasterOrderDetails_v1/GetMasterOrderDetails.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="Input">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:RequestEAI"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>27</pd:startX>
    <pd:startY>65</pd:startY>
    <pd:returnCoercions>
        <pd:coercion xpath="$Get-Order-Details/Output/pfx2:ResponseEAI/pfx2:Body/*" element="ns4:GetMasterOrderResponse"/>
    </pd:returnCoercions>
    <pd:returnBindings>
        <Output>
            <pfx2:ResponseEAI>
                <xsl:copy-of select="$Get-Order-Details/Output/pfx2:ResponseEAI/pfx2:Header"/>
                <xsl:copy-of select="$Get-Order-Details/Output/pfx2:ResponseEAI/pfx2:ResponseCodes"/>
                <pfx2:Body>
                    <ns:Response>
                        <ns:OrderId>
                            <xsl:value-of select="$Get-Order-Details/Output/pfx2:ResponseEAI/pfx2:Body/ns4:GetMasterOrderResponse/ns4:Response/ns4:OrderId"/>
                        </ns:OrderId>
                        <ns:Status>
                            <xsl:value-of select="$Get-Order-Details/Output/pfx2:ResponseEAI/pfx2:Body/ns4:GetMasterOrderResponse/ns4:Response/ns4:Status"/>
                        </ns:Status>
                        <ns:ChildOrderList>
                            <xsl:variable name="StatusRequested" select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ChildOrderStatus "/>
                            <xsl:for-each select="if(string-length($Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ChildOrderStatus) >0 )&#xA;&#x9;then if(string-length($Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ChildOrderServiceID) = 0 )&#xA;&#x9;&#x9;then ($Get-Order-Details/Output/pfx2:ResponseEAI/pfx2:Body/ns4:GetMasterOrderResponse/ns4:Response/ns4:ChildOrderList/ns4:ChildOrder[ns4:Status = $StatusRequested ])&#xA;&#x9; else if ($Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ChildOrderServiceID = 0 )&#xA;&#x9;&#x9;then ($Get-Order-Details/Output/pfx2:ResponseEAI/pfx2:Body/ns4:GetMasterOrderResponse/ns4:Response/ns4:ChildOrderList/ns4:ChildOrder[ns4:Status = $StatusRequested and string-length(ns4:ServiceId) = 0])&#xA;&#x9;else ($Get-Order-Details/Output/pfx2:ResponseEAI/pfx2:Body/ns4:GetMasterOrderResponse/ns4:Response/ns4:ChildOrderList/ns4:ChildOrder[ns4:Status = $StatusRequested and ns4:ServiceId  = $Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ChildOrderServiceID])&#xA;&#xA;else&#xA;&#xA; if (string-length($Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ChildOrderServiceID) = 0 )&#xA;&#x9;&#x9;then ($Get-Order-Details/Output/pfx2:ResponseEAI/pfx2:Body/ns4:GetMasterOrderResponse/ns4:Response/ns4:ChildOrderList/ns4:ChildOrder)&#xA;&#x9; else if ($Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ChildOrderServiceID = 0 )&#xA;&#x9;&#x9;then ($Get-Order-Details/Output/pfx2:ResponseEAI/pfx2:Body/ns4:GetMasterOrderResponse/ns4:Response/ns4:ChildOrderList/ns4:ChildOrder[string-length(ns4:ServiceId) = 0])&#xA;else ($Get-Order-Details/Output/pfx2:ResponseEAI/pfx2:Body/ns4:GetMasterOrderResponse/ns4:Response/ns4:ChildOrderList/ns4:ChildOrder[ns4:ServiceId  = $Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ChildOrderServiceID])">
                                <ns:ChildOrder>
                                    <ns:OrderId>
                                        <xsl:value-of select="ns4:OrderId"/>
                                    </ns:OrderId>
                                    <ns:Status>
                                        <xsl:value-of select="ns4:Status"/>
                                    </ns:Status>
                                    <ns:ErrorMessage>
                                        <xsl:value-of select="ns4:ErrorMessage"/>
                                    </ns:ErrorMessage>
                                    <ns:CreationDate>
                                        <xsl:value-of select="ns4:CreationDate"/>
                                    </ns:CreationDate>
                                    <ns:RootId>
                                        <xsl:value-of select="ns4:RootId"/>
                                    </ns:RootId>
                                    <ns:ServiceId>
                                        <xsl:value-of select="ns4:ServiceId"/>
                                    </ns:ServiceId>
                                    <ns:IsCancellableAlone>
                                        <xsl:value-of select="ns4:IsCancellableAlone"/>
                                    </ns:IsCancellableAlone>
                                </ns:ChildOrder>
                            </xsl:for-each>
                        </ns:ChildOrderList>
                    </ns:Response>
                </pfx2:Body>
            </pfx2:ResponseEAI>
        </Output>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="Output">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx2:ResponseEAI"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>473</pd:endX>
    <pd:endY>72</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://vodafone.com.tr/1399384871715</pd:targetNamespace>
    <pd:activity name="Get Order Details">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>214</pd:x>
        <pd:y>68</pd:y>
        <config>
            <processName>/GlobalCommonResources/Processes/Common/ProcessDispatcher.process</processName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Start/Input/pfx:RequestEAI/pfx:Body/*" element="ns:Request"/>
        </pd:coercions>
        <pd:inputBindings>
            <Input>
                <pfx:RequestEAI>
                    <pfx:Header>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:RequestId">
                            <ns2:RequestId>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:RequestId"/>
                            </ns2:RequestId>
                        </xsl:if>
                        <ns2:SourceSystem>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:SourceSystem"/>
                        </ns2:SourceSystem>
                        <ns2:ReplyExpected>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:ReplyExpected"/>
                        </ns2:ReplyExpected>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:QoS">
                            <ns2:QoS>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:QoS"/>
                            </ns2:QoS>
                        </xsl:if>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Schedule">
                            <ns2:Schedule>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Schedule"/>
                            </ns2:Schedule>
                        </xsl:if>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:CorrelationId">
                            <ns2:CorrelationId>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:CorrelationId"/>
                            </ns2:CorrelationId>
                        </xsl:if>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Priority">
                            <ns2:Priority>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Priority"/>
                            </ns2:Priority>
                        </xsl:if>
                        <ns2:Credentials>
                            <ns2:ApplicationId>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Credentials[1]/ns2:ApplicationId"/>
                            </ns2:ApplicationId>
                            <ns2:User>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Credentials[1]/ns2:User"/>
                            </ns2:User>
                        </ns2:Credentials>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:ProxySystem">
                            <ns2:ProxySystem>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:ProxySystem"/>
                            </ns2:ProxySystem>
                        </xsl:if>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:ForceSimulate">
                            <ns2:ForceSimulate>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:ForceSimulate"/>
                            </ns2:ForceSimulate>
                        </xsl:if>
                        <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Attributes"/>
                        <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:BusinessInterface"/>
                        <ns2:TechnicalInterface>
                            <ns2:Domain>
                                <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/Domains/OrderManagement/Name"/>
                            </ns2:Domain>
                            <ns2:Interface>
                                <xsl:value-of select="'GetMasterOrder'"/>
                            </ns2:Interface>
                            <ns2:Version>
                                <xsl:value-of select="1"/>
                            </ns2:Version>
                            <ns2:MethodCall>
                                <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/Constants/Channel/Inline"/>
                            </ns2:MethodCall>
                        </ns2:TechnicalInterface>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:TargetSystem">
                            <ns2:TargetSystem>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:TargetSystem"/>
                            </ns2:TargetSystem>
                        </xsl:if>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:CreationTimestamp">
                            <ns2:CreationTimestamp>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:CreationTimestamp"/>
                            </ns2:CreationTimestamp>
                        </xsl:if>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:TimeOut">
                            <ns2:TimeOut>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:TimeOut"/>
                            </ns2:TimeOut>
                        </xsl:if>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Tries">
                            <ns2:Tries>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Tries"/>
                            </ns2:Tries>
                        </xsl:if>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:MaxTries">
                            <ns2:MaxTries>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:MaxTries"/>
                            </ns2:MaxTries>
                        </xsl:if>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Repub">
                            <ns2:Repub>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Repub"/>
                            </ns2:Repub>
                        </xsl:if>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:RepubTime">
                            <ns2:RepubTime>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:RepubTime"/>
                            </ns2:RepubTime>
                        </xsl:if>
                        <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:History"/>
                        <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Transport"/>
                    </pfx:Header>
                    <pfx:Body>
                        <ns4:GetMasterOrderRequest>
                            <ns4:Request>
                                <ns4:OrderId>
                                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:MasterOrderID"/>
                                </ns4:OrderId>
                            </ns4:Request>
                        </ns4:GetMasterOrderRequest>
                    </pfx:Body>
                </pfx:RequestEAI>
            </Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Get Order Details</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get Order Details</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>