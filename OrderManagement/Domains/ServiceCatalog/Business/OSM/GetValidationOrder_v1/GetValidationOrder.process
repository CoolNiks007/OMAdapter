<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://vodafone.com.tr/EAI/Common/Header" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://vodafone.com.tr/EAI/Common/ResponseEAI" xmlns:ns3="http://xmlns.oracle.com/communications/ordermanagement" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns5="http://vodafone.com.tr/EAI/Common/ResponseCodes" xmlns:pfx="http://vodafone.com.tr/EAI/Common/RequestEAI" xmlns:ns8="http://vodafone.com.tr/ServiceCatalog/Business/OSM/GetValidationOrder/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://vodafone.com.tr/EAI/Common/RequestEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/RequestEAI.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/EAI/Common/ResponseEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/ResponseEAI.xsd"/>
    <xsd:import namespace="http://xmlns.oracle.com/communications/ordermanagement" schemaLocation="/Domains/OrderManagement/TechnicalResources/Schemas/OSM/OrderManagementWS.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/OSM/GetValidationOrder/v1" schemaLocation="/Domains/ServiceCatalog/Business/OSM/GetValidationOrder_v1/Schemas/GetValidationOrder.xsd"/>
    <pd:name>Domains/ServiceCatalog/Business/OSM/GetValidationOrder_v1/GetValidationOrder.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="Input">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:RequestEAI"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>53</pd:startX>
    <pd:startY>160</pd:startY>
    <pd:returnCoercions>
        <pd:coercion xpath="$Get-Order/Output/ns4:ResponseEAI/ns4:Body/*" type="ns3:GetOrderResponseType"/>
    </pd:returnCoercions>
    <pd:returnBindings>
        <Output>
            <ns4:ResponseEAI>
                <xsl:copy-of select="$Response/ResponseEAI/ancestor-or-self::*/namespace::node()"/>
                <xsl:copy-of select="$Response/ResponseEAI/@*"/>
                <xsl:copy-of select="$Response/ResponseEAI/node()"/>
            </ns4:ResponseEAI>
        </Output>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="Output">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="ns4:ResponseEAI"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>924</pd:endX>
    <pd:endY>160</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <Response>
            <xsd:element name="ResponseEAI" type="ns4:ResponseEAI"/>
        </Response>
    </pd:processVariables>
    <pd:targetNamespace>http://vodafone.com.tr/1398766272841</pd:targetNamespace>
    <pd:activity name="Assign">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>493</pd:x>
        <pd:y>51</pd:y>
        <config>
            <variableName>Response</variableName>
        </config>
        <pd:inputBindings>
            <ResponseEAI>
                <xsl:copy-of select="$Get-Order/Output/ns4:ResponseEAI/ns4:Header"/>
                <xsl:copy-of select="$Get-Order/Output/ns4:ResponseEAI/ns4:ResponseCodes"/>
            </ResponseEAI>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Assign-1">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>623</pd:x>
        <pd:y>160</pd:y>
        <config>
            <variableName>Response</variableName>
        </config>
        <pd:inputBindings>
            <ResponseEAI>
                <xsl:copy-of select="$Get-Order/Output/ns4:ResponseEAI/ns4:Header"/>
                <xsl:copy-of select="$Get-Order/Output/ns4:ResponseEAI/ns4:ResponseCodes"/>
                <ns4:Body>
                    <ns8:Response>
                        <ns8:ListOfOperationsType>
                            <xsl:for-each select="$Parse-XML-1/Data/_root/ControlData/Functions/*">
                                <ns8:Operation>
                                    <ns8:Id>
                                        <xsl:value-of select="current()/componentKey/@index"/>
                                    </ns8:Id>
                                    <ns8:Name>
                                        <xsl:value-of select="tib:tokenize(current()/componentKey, '.')[3]"/>
                                    </ns8:Name>
                                    <ns8:Root_Id>
                                        <xsl:value-of select="current()/orderItem/orderItemRef/Root_Id"/>
                                    </ns8:Root_Id>
                                    <ns8:Scenario>
                                        <xsl:value-of select="tib:tokenize(current()/componentKey, '.')[2]"/>
                                    </ns8:Scenario>
                                </ns8:Operation>
                            </xsl:for-each>
                        </ns8:ListOfOperationsType>
                    </ns8:Response>
                </ns4:Body>
            </ResponseEAI>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Get-Order">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>157</pd:x>
        <pd:y>159</pd:y>
        <config>
            <processName>/GlobalCommonResources/Processes/Common/ProcessDispatcher.process</processName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Start/Input/pfx:RequestEAI/pfx:Body/*" element="ns8:Request"/>
        </pd:coercions>
        <pd:inputBindings>
            <Input>
                <pfx:RequestEAI>
                    <pfx:Header>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:RequestId">
                            <ns2:RequestId>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:RequestId"/>
                            </ns2:RequestId>
                        </xsl:if>
                        <ns2:SourceSystem>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:SourceSystem"/>
                        </ns2:SourceSystem>
                        <ns2:ReplyExpected>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:ReplyExpected"/>
                        </ns2:ReplyExpected>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:QoS">
                            <ns2:QoS>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:QoS"/>
                            </ns2:QoS>
                        </xsl:if>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Schedule">
                            <ns2:Schedule>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Schedule"/>
                            </ns2:Schedule>
                        </xsl:if>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:CorrelationId">
                            <ns2:CorrelationId>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:CorrelationId"/>
                            </ns2:CorrelationId>
                        </xsl:if>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Priority">
                            <ns2:Priority>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Priority"/>
                            </ns2:Priority>
                        </xsl:if>
                        <ns2:Credentials>
                            <ns2:ApplicationId>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Credentials[1]/ns2:ApplicationId"/>
                            </ns2:ApplicationId>
                            <ns2:User>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Credentials[1]/ns2:User"/>
                            </ns2:User>
                        </ns2:Credentials>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:ProxySystem">
                            <ns2:ProxySystem>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:ProxySystem"/>
                            </ns2:ProxySystem>
                        </xsl:if>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:ForceSimulate">
                            <ns2:ForceSimulate>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:ForceSimulate"/>
                            </ns2:ForceSimulate>
                        </xsl:if>
                        <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Attributes"/>
                        <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:BusinessInterface"/>
                        <ns2:TechnicalInterface>
                            <ns2:Domain>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/Name"/>
                            </ns2:Domain>
                            <ns2:Interface>
                                <xsl:value-of select="'GetValidationOrder'"/>
                            </ns2:Interface>
                            <ns2:Version>
                                <xsl:value-of select="1"/>
                            </ns2:Version>
                            <ns2:MethodCall>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Constants/Channel/Inline"/>
                            </ns2:MethodCall>
                        </ns2:TechnicalInterface>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:TargetSystem">
                            <ns2:TargetSystem>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:TargetSystem"/>
                            </ns2:TargetSystem>
                        </xsl:if>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:CreationTimestamp">
                            <ns2:CreationTimestamp>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:CreationTimestamp"/>
                            </ns2:CreationTimestamp>
                        </xsl:if>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:TimeOut">
                            <ns2:TimeOut>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:TimeOut"/>
                            </ns2:TimeOut>
                        </xsl:if>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Tries">
                            <ns2:Tries>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Tries"/>
                            </ns2:Tries>
                        </xsl:if>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:MaxTries">
                            <ns2:MaxTries>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:MaxTries"/>
                            </ns2:MaxTries>
                        </xsl:if>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Repub">
                            <ns2:Repub>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Repub"/>
                            </ns2:Repub>
                        </xsl:if>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:RepubTime">
                            <ns2:RepubTime>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:RepubTime"/>
                            </ns2:RepubTime>
                        </xsl:if>
                        <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:History"/>
                        <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Transport"/>
                    </pfx:Header>
                    <pfx:Body>
                        <ns3:GetOrder>
                            <ns3:OrderId>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns8:Request/ns8:OrderId"/>
                            </ns3:OrderId>
                            <ns3:View>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/OSM/OSMDecomposeView"/>
                            </ns3:View>
                        </ns3:GetOrder>
                    </pfx:Body>
                </pfx:RequestEAI>
            </Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse-XML-1">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>502</pd:x>
        <pd:y>160</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term>
                <xs:any xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
            </term>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$Remove-Namespaces/xmlString"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Remove Namespaces">
        <pd:type>com.tibco.plugin.xml.XMLTransformActivity</pd:type>
        <pd:resourceType>ae.activities.XMLTransformActivity</pd:resourceType>
        <pd:x>378</pd:x>
        <pd:y>160</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <engine>TibcoXML</engine>
            <stylesheet>/Domains/OrderManagement/CommonResources/Transformations/Remove Namespaces.xslt</stylesheet>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Get-Order/Output/ns4:ResponseEAI/ns4:Body/*" type="ns3:GetOrderResponseType"/>
        </pd:coercions>
        <pd:inputBindings>
            <textInput>
                <xmlString>
                    <xsl:value-of select="tib:render-xml($Get-Order/Output/ns4:ResponseEAI/ns4:Body/*/ns3:Data[1])"/>
                </xmlString>
            </textInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Get-Order</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get-Order</pd:from>
        <pd:to>Remove Namespaces</pd:to>
        <pd:xpathDescription>Success</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Get-Order/Output/ns4:ResponseEAI/ns4:ResponseCodes/ns5:ResponseCode = $_globalVariables/ns1:GlobalVariables/ErrorCodes/Success</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Remove Namespaces</pd:from>
        <pd:to>Parse-XML-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse-XML-1</pd:from>
        <pd:to>Assign-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get-Order</pd:from>
        <pd:to>Assign</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign-1</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>