<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns14="http://vodafone.com.tr/ServiceCatalog/Business/OrderManagement/UpdateOrderStatus/v1" xmlns:ns="http://vodafone.com.tr/EAI/Common/Header" xmlns:ns9="http://vodafone.com.tr/OrderManagment/Business/OrderNotification/OrderNotificationResponseInput/v1" xmlns:ns12="http://vodafone.com.tr/OrderManagement/Domains/OrderManagement/CommonResources/Schemas/OrderManagement/Schema.xsd" xmlns:ns5="http://www.tibco.com/schemas/OrderManagement/Domains/OrderManagement/BusinessResources/Schemas/FR/Schema.xsd2" xmlns:ns13="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/OSM/OSM_TopicNotification.xsd" xmlns:ns6="http://vodafone.com.tr/OrderManagment/Business/FR/FRRequestInput/v1" xmlns:ns10="http://vodafone.com.tr/ServiceCatalog/ServiceReply" xmlns:ns7="http://vodafone.com.tr/EAI/Common/ResponseEAI" xmlns:pfx="http://vodafone.com.tr/EAI/Common/RequestEAI" xmlns:ns11="http://vodafone.com.tr/OrderManagment/Business/OrderNotification/OrderNotificationRequestInput/v1" xmlns:ns8="http://vodafone.com.tr/EAI/Common/ResponseCodes" xmlns:ns2="http://www.tibco.com/pe/DeployedVarsType" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:ns4="urn:com:metasolv:oms:xmlapi:1" xmlns:ns3="http://vodafone.com.tr/EAI/Logging" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx2="http://www.tibco.com/schemas/OrderManagement/Domains/OrderManagement/CommonResources/Schemas/OrderManagement/Schema.xsd">
    <xsd:import namespace="http://vodafone.com.tr/EAI/Common/RequestEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/RequestEAI.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/OrderManagment/Business/FR/FRRequestInput/v1" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/FR/FRRequestInput.xsd"/>
    <xsd:import namespace="urn:com:metasolv:oms:xmlapi:1" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/OSM/OSM_OperationResponse.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/EAI/Common/ResponseEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/ResponseEAI.xsd"/>
    <xsd:import namespace="urn:com:metasolv:oms:xmlapi:1" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/OSM/OSM_OperationRequest.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/OrderManagment/Business/OrderNotification/OrderNotificationResponseInput/v1" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/OrderNotification/OrderNotificationResponseInput.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/OrderManagment/Business/OrderNotification/OrderNotificationRequestInput/v1" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/OrderNotification/OrderNotificationRequestInput.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/OrderManagement/UpdateOrderStatus/v1" schemaLocation="/Domains/ServiceCatalog/Business/OrderManagement/UpdateOrderStatus_v1/Schemas/UpdateOrderStatus.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/OSM/OSM_TopicNotification.xsd" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/OSM/OSM_TopicNotification.xsd"/>
    <pd:name>Domains/OrderManagement/BusinessResources/Processes/OrderNotification/OrderNotificationDispatcher.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="Input">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:RequestEAI"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>81</pd:startX>
    <pd:startY>61</pd:startY>
    <pd:returnBindings/>
    <pd:endName>End</pd:endName>
    <pd:endX>755</pd:endX>
    <pd:endY>61</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <Response ref="ns7:ResponseEAI"/>
    </pd:processVariables>
    <pd:targetNamespace>http://vodafone.com.tr/1399043016876</pd:targetNamespace>
    <pd:activity name="Assign Error">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>384</pd:x>
        <pd:y>425</pd:y>
        <config>
            <variableName>Response</variableName>
        </config>
        <pd:inputBindings>
            <ns7:ResponseEAI>
                <ns7:Header>
                    <xsl:copy-of select="$SetHeader/Output/Header/ancestor-or-self::*/namespace::node()"/>
                    <xsl:copy-of select="$SetHeader/Output/Header/@*"/>
                    <xsl:copy-of select="$SetHeader/Output/Header/node()"/>
                </ns7:Header>
                <xsl:choose>
                    <xsl:when test="string-length($Catch-LogMessage/ns3:LogMessage) > 0">
                        <ns7:ResponseCodes>
                            <ns8:ResponseCode>
                                <xsl:value-of select="$Catch-LogMessage/ns3:LogMessage/ns3:ResponseCode"/>
                            </ns8:ResponseCode>
                            <xsl:if test="$Catch-LogMessage/ns3:LogMessage/ns3:ErrorCode">
                                <ns8:ErrorCode>
                                    <xsl:value-of select="$Catch-LogMessage/ns3:LogMessage/ns3:ErrorCode"/>
                                </ns8:ErrorCode>
                            </xsl:if>
                            <xsl:if test="$Catch-LogMessage/ns3:LogMessage/ns3:Description">
                                <ns8:ErrorDescription>
                                    <xsl:value-of select="$Catch-LogMessage/ns3:LogMessage/ns3:Description"/>
                                </ns8:ErrorDescription>
                            </xsl:if>
                        </ns7:ResponseCodes>
                    </xsl:when>
                    <xsl:otherwise>
                        <ns7:ResponseCodes>
                            <ns8:ResponseCode>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/ErrorCodes/TransportError"/>
                            </ns8:ResponseCode>
                            <ns8:ResponseMsg>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/ErrorCodes/TransportErrorDescription"/>
                            </ns8:ResponseMsg>
                            <ns8:ErrorCode>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/ErrorCodes/TransportError"/>
                            </ns8:ErrorCode>
                            <xsl:if test="$_error/ns1:ErrorReport/Msg">
                                <ns8:ErrorDescription>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                                </ns8:ErrorDescription>
                            </xsl:if>
                        </ns7:ResponseCodes>
                    </xsl:otherwise>
                </xsl:choose>
            </ns7:ResponseEAI>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch-All">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>225</pd:x>
        <pd:y>495</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Catch-LogMessage">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>225</pd:x>
        <pd:y>348</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <fault>localname=LogMessage namespace=http://vodafone.com.tr/EAI/Logging</fault>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Logger [AUDIT] [END]">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>757</pd:x>
        <pd:y>435</pd:y>
        <config>
            <processName>/GlobalCommonResources/Processes/Logging/Logger.process</processName>
            <processNameXPath/>
        </config>
        <pd:inputBindings>
            <Input>
                <ns3:LogMessage>
                    <ns3:Source>
                        <xsl:value-of select="$SetHeader/Output/Header/ns:SourceSystem"/>
                    </ns3:Source>
                    <xsl:if test="$SetHeader/Output/Header/ns:CreationTimestamp">
                        <ns3:Target>
                            <xsl:value-of select="$SetHeader/Output/Header/ns:CreationTimestamp"/>
                        </ns3:Target>
                    </xsl:if>
                    <ns3:Process>
                        <xsl:value-of select="BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId)"/>
                    </ns3:Process>
                    <ns3:Service>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:SourceSystem"/>
                    </ns3:Service>
                    <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns:BusinessInterface/ns:Operation">
                        <ns3:Operation>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:BusinessInterface/ns:Operation"/>
                        </ns3:Operation>
                    </xsl:if>
                    <xsl:if test="$SetHeader/Output/Header/ns:RequestId">
                        <ns3:MsgId>
                            <xsl:value-of select="$SetHeader/Output/Header/ns:RequestId"/>
                        </ns3:MsgId>
                    </xsl:if>
                    <ns3:Type>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Logging/Roles/AuditRoleName"/>
                    </ns3:Type>
                    <ns3:Task>
                        <xsl:value-of select="&quot;END ORDER NOTIFICATION&quot;"/>
                    </ns3:Task>
                    <ns3:Description>
                        <xsl:value-of select="&quot;Order Component Reply Message at END of process&quot;"/>
                    </ns3:Description>
                    <xsl:if test="$Response/ns7:ResponseEAI/ns7:ResponseCodes/ns8:ErrorCode">
                        <ns3:ErrorCode>
                            <xsl:value-of select="$Response/ns7:ResponseEAI/ns7:ResponseCodes/ns8:ErrorCode"/>
                        </ns3:ErrorCode>
                    </xsl:if>
                    <ns3:ResponseCode>
                        <xsl:value-of select="$Response/ns7:ResponseEAI/ns7:ResponseCodes/ns8:ResponseCode"/>
                    </ns3:ResponseCode>
                    <ns3:MessageBody>
                        <xsl:value-of select="tib:render-xml($Response/ns7:ResponseEAI)"/>
                    </ns3:MessageBody>
                    <xsl:if test="$SetHeader/Output/Header/ns:CorrelationId">
                        <ns3:CorrelationId>
                            <xsl:value-of select="$SetHeader/Output/Header/ns:CorrelationId"/>
                        </ns3:CorrelationId>
                    </xsl:if>
                    <ns3:UserName>
                        <xsl:value-of select="$SetHeader/Output/Header/ns:Credentials[1]/ns:User"/>
                    </ns3:UserName>
                    <xsl:if test="$SetHeader/Output/Header/ns:BusinessInterface/ns:Version">
                        <ns3:Version>
                            <xsl:value-of select="$SetHeader/Output/Header/ns:BusinessInterface/ns:Version"/>
                        </ns3:Version>
                    </xsl:if>
                    <ns3:Interface>
                        <xsl:value-of select="$Response/ns7:ResponseEAI/ns7:Header/ns:TechnicalInterface/ns:Interface"/>
                    </ns3:Interface>
                </ns3:LogMessage>
            </Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Logger [ERROR]">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>560</pd:x>
        <pd:y>425</pd:y>
        <config>
            <processName>/GlobalCommonResources/Processes/Logging/Logger.process</processName>
            <processNameXPath/>
        </config>
        <pd:inputBindings>
            <Input>
                <xsl:choose>
                    <xsl:when test="string-length($Catch-LogMessage/ns3:LogMessage)>0">
                        <xsl:copy-of select="$Catch-LogMessage/ns3:LogMessage"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <ns3:LogMessage>
                            <ns3:Source>
                                <xsl:value-of select="$SetHeader/Output/Header/ns:SourceSystem"/>
                            </ns3:Source>
                            <xsl:if test="$SetHeader/Output/Header/ns:TargetSystem">
                                <ns3:Target>
                                    <xsl:value-of select="$SetHeader/Output/Header/ns:TargetSystem"/>
                                </ns3:Target>
                            </xsl:if>
                            <ns3:Process>
                                <xsl:value-of select="BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId)"/>
                            </ns3:Process>
                            <ns3:Service>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:SourceSystem"/>
                            </ns3:Service>
                            <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns:BusinessInterface/ns:Operation">
                                <ns3:Operation>
                                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:BusinessInterface/ns:Operation"/>
                                </ns3:Operation>
                            </xsl:if>
                            <xsl:if test="$SetHeader/Output/Header/ns:RequestId">
                                <ns3:MsgId>
                                    <xsl:value-of select="$SetHeader/Output/Header/ns:RequestId"/>
                                </ns3:MsgId>
                            </xsl:if>
                            <ns3:Type>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Logging/Roles/ErrorRoleName"/>
                            </ns3:Type>
                            <ns3:Task>
                                <xsl:value-of select="tib:substring-after-last($_error/ns1:ErrorReport/ProcessStack, &quot;/&quot;)"/>
                            </ns3:Task>
                            <xsl:if test="$Response/ns7:ResponseEAI/ns7:ResponseCodes/ns8:ErrorDescription">
                                <ns3:Description>
                                    <xsl:value-of select="$Response/ns7:ResponseEAI/ns7:ResponseCodes/ns8:ErrorDescription"/>
                                </ns3:Description>
                            </xsl:if>
                            <xsl:if test="$_error/ns1:ErrorReport/ProcessStack">
                                <ns3:ErrorDump>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/ProcessStack"/>
                                </ns3:ErrorDump>
                            </xsl:if>
                            <xsl:if test="$Response/ns7:ResponseEAI/ns7:ResponseCodes/ns8:ErrorCode">
                                <ns3:ErrorCode>
                                    <xsl:value-of select="$Response/ns7:ResponseEAI/ns7:ResponseCodes/ns8:ErrorCode"/>
                                </ns3:ErrorCode>
                            </xsl:if>
                            <ns3:ResponseCode>
                                <xsl:value-of select="$Response/ns7:ResponseEAI/ns7:ResponseCodes/ns8:ResponseCode"/>
                            </ns3:ResponseCode>
                            <xsl:if test="$SetHeader/Output/Header/ns:CorrelationId">
                                <ns3:CorrelationId>
                                    <xsl:value-of select="$SetHeader/Output/Header/ns:CorrelationId"/>
                                </ns3:CorrelationId>
                            </xsl:if>
                            <ns3:UserName>
                                <xsl:value-of select="$SetHeader/Output/Header/ns:Credentials[1]/ns:User"/>
                            </ns3:UserName>
                            <xsl:if test="$SetHeader/Output/Header/ns:BusinessInterface/ns:Version">
                                <ns3:Version>
                                    <xsl:value-of select="$SetHeader/Output/Header/ns:BusinessInterface/ns:Version"/>
                                </ns3:Version>
                            </xsl:if>
                            <xsl:if test="$SetHeader/Output/Header/ns:TechnicalInterface/ns:Interface">
                                <ns3:Interface>
                                    <xsl:value-of select="$SetHeader/Output/Header/ns:TechnicalInterface/ns:Interface"/>
                                </ns3:Interface>
                            </xsl:if>
                        </ns3:LogMessage>
                    </xsl:otherwise>
                </xsl:choose>
            </Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Logger--AUDIT--START">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>345</pd:x>
        <pd:y>61</pd:y>
        <config>
            <processName>/GlobalCommonResources/Processes/Logging/Logger.process</processName>
            <processNameXPath/>
        </config>
        <pd:inputBindings>
            <Input>
                <ns3:LogMessage>
                    <ns3:Source>
                        <xsl:value-of select="$SetHeader/Output/Header/ns:SourceSystem"/>
                    </ns3:Source>
                    <ns3:Target>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/TelcoOrderStatusNotification/Specification/Source"/>
                    </ns3:Target>
                    <ns3:Process>
                        <xsl:value-of select="BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId)"/>
                    </ns3:Process>
                    <ns3:Service>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:BusinessInterface/ns:Service"/>
                    </ns3:Service>
                    <ns3:Operation>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:BusinessInterface/ns:Operation"/>
                    </ns3:Operation>
                    <ns3:LogTimestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns3:LogTimestamp>
                    <xsl:if test="$SetHeader/Output/Header/ns:RequestId">
                        <ns3:MsgId>
                            <xsl:value-of select="$SetHeader/Output/Header/ns:RequestId"/>
                        </ns3:MsgId>
                    </xsl:if>
                    <ns3:Type>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Logging/Roles/AuditRoleName"/>
                    </ns3:Type>
                    <ns3:Task>
                        <xsl:value-of select="&quot;START ORDER NOTIFICATION&quot;"/>
                    </ns3:Task>
                    <ns3:Description>
                        <xsl:value-of select="&quot;Start Business Dispatcher&quot;"/>
                    </ns3:Description>
                    <ns3:MessageBody>
                        <xsl:value-of select="tib:render-xml($Start/Input/pfx:RequestEAI)"/>
                    </ns3:MessageBody>
                    <xsl:if test="$SetHeader/Output/Header/ns:CorrelationId">
                        <ns3:CorrelationId>
                            <xsl:value-of select="$SetHeader/Output/Header/ns:CorrelationId"/>
                        </ns3:CorrelationId>
                    </xsl:if>
                    <ns3:UserName>
                        <xsl:value-of select="$SetHeader/Output/Header/ns:Credentials[1]/ns:User"/>
                    </ns3:UserName>
                    <ns3:Version>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:BusinessInterface/ns:Version"/>
                    </ns3:Version>
                    <ns3:Interface>
                        <xsl:value-of select="'Log Order Component'"/>
                    </ns3:Interface>
                </ns3:LogMessage>
            </Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>622</pd:x>
        <pd:y>196</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Order Notification Dispacher">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>496</pd:x>
        <pd:y>69</pd:y>
        <config>
            <processName>/GlobalCommonResources/Processes/Common/InterfaceService.process</processName>
            <processNameXPath>if(string-length($Start/Input/pfx:RequestEAI/pfx:Body/TelcoOrderStatusNotification/CreatedBySystem)&gt;0)
then
(
	concat("/Domains/OrderManagement/BusinessResources/Processes/OrderNotification/",upper-case($Start/Input/pfx:RequestEAI/pfx:Body/TelcoOrderStatusNotification/CreatedBySystem),"OrderNotification",".process")
)
else
(
	concat("/Domains/OrderManagement/BusinessResources/Processes/OrderNotification/",upper-case($Start/Input/pfx:RequestEAI/pfx:Body/TelcoOrderStatusNotification/Specification/Source),"OrderNotification",".process")
)</processNameXPath>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Start/Input/pfx:RequestEAI/pfx:Body/*" element="ns13:TelcoOrderStatusNotification"/>
        </pd:coercions>
        <pd:inputBindings>
            <Input>
                <pfx:RequestEAI>
                    <xsl:for-each select="$SetHeader/Output/Header">
                        <pfx:Header>
                            <xsl:if test="ns:RequestId">
                                <ns:RequestId>
                                    <xsl:value-of select="ns:RequestId"/>
                                </ns:RequestId>
                            </xsl:if>
                            <ns:SourceSystem>
                                <xsl:value-of select="ns:SourceSystem"/>
                            </ns:SourceSystem>
                            <ns:ReplyExpected>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Constants/Reply/No"/>
                            </ns:ReplyExpected>
                            <ns:QoS>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Constants/QOS/Guarantee"/>
                            </ns:QoS>
                            <xsl:if test="ns:Schedule">
                                <ns:Schedule>
                                    <xsl:value-of select="ns:Schedule"/>
                                </ns:Schedule>
                            </xsl:if>
                            <xsl:if test="ns:CorrelationId">
                                <ns:CorrelationId>
                                    <xsl:value-of select="ns:CorrelationId"/>
                                </ns:CorrelationId>
                            </xsl:if>
                            <xsl:if test="ns:Priority">
                                <ns:Priority>
                                    <xsl:value-of select="ns:Priority"/>
                                </ns:Priority>
                            </xsl:if>
                            <xsl:for-each select="ns:Credentials">
                                <ns:Credentials>
                                    <ns:ApplicationId>
                                        <xsl:value-of select="ns:ApplicationId"/>
                                    </ns:ApplicationId>
                                    <ns:User>
                                        <xsl:value-of select="ns:User"/>
                                    </ns:User>
                                    <xsl:if test="ns:Password">
                                        <ns:Password>
                                            <xsl:value-of select="ns:Password"/>
                                        </ns:Password>
                                    </xsl:if>
                                </ns:Credentials>
                            </xsl:for-each>
                            <xsl:if test="ns:ProxySystem">
                                <ns:ProxySystem>
                                    <xsl:value-of select="ns:ProxySystem"/>
                                </ns:ProxySystem>
                            </xsl:if>
                            <xsl:if test="ns:ForceSimulate">
                                <ns:ForceSimulate>
                                    <xsl:value-of select="ns:ForceSimulate"/>
                                </ns:ForceSimulate>
                            </xsl:if>
                            <xsl:for-each select="ns:Attributes">
                                <ns:Attributes>
                                    <xsl:for-each select="ns:Attribute">
                                        <ns:Attribute>
                                            <ns:Name>
                                                <xsl:value-of select="ns:Name"/>
                                            </ns:Name>
                                            <ns:Value>
                                                <xsl:value-of select="ns:Value"/>
                                            </ns:Value>
                                        </ns:Attribute>
                                    </xsl:for-each>
                                </ns:Attributes>
                            </xsl:for-each>
                            <xsl:for-each select="ns:BusinessInterface">
                                <ns:BusinessInterface>
                                    <ns:Service>
                                        <xsl:value-of select="ns:Service"/>
                                    </ns:Service>
                                    <xsl:if test="ns:Operation">
                                        <ns:Operation>
                                            <xsl:value-of select="ns:Operation"/>
                                        </ns:Operation>
                                    </xsl:if>
                                    <xsl:if test="ns:Version">
                                        <ns:Version>
                                            <xsl:value-of select="ns:Version"/>
                                        </ns:Version>
                                    </xsl:if>
                                </ns:BusinessInterface>
                            </xsl:for-each>
                            <xsl:for-each select="ns:TechnicalInterface">
                                <ns:TechnicalInterface>
                                    <xsl:if test="ns:Domain">
                                        <ns:Domain>
                                            <xsl:value-of select="ns:Domain"/>
                                        </ns:Domain>
                                    </xsl:if>
                                    <xsl:if test="ns:Interface">
                                        <ns:Interface>
                                            <xsl:value-of select="ns:Interface"/>
                                        </ns:Interface>
                                    </xsl:if>
                                    <xsl:if test="ns:Version">
                                        <ns:Version>
                                            <xsl:value-of select="ns:Version"/>
                                        </ns:Version>
                                    </xsl:if>
                                    <xsl:if test="ns:MethodCall">
                                        <ns:MethodCall>
                                            <xsl:value-of select="ns:MethodCall"/>
                                        </ns:MethodCall>
                                    </xsl:if>
                                </ns:TechnicalInterface>
                            </xsl:for-each>
                            <xsl:if test="ns:TargetSystem">
                                <ns:TargetSystem>
                                    <xsl:value-of select="ns:TargetSystem"/>
                                </ns:TargetSystem>
                            </xsl:if>
                            <xsl:if test="ns:CreationTimestamp">
                                <ns:CreationTimestamp>
                                    <xsl:value-of select="ns:CreationTimestamp"/>
                                </ns:CreationTimestamp>
                            </xsl:if>
                            <xsl:if test="ns:TimeOut">
                                <ns:TimeOut>
                                    <xsl:value-of select="ns:TimeOut"/>
                                </ns:TimeOut>
                            </xsl:if>
                            <xsl:if test="ns:Tries">
                                <ns:Tries>
                                    <xsl:value-of select="ns:Tries"/>
                                </ns:Tries>
                            </xsl:if>
                            <xsl:if test="ns:MaxTries">
                                <ns:MaxTries>
                                    <xsl:value-of select="ns:MaxTries"/>
                                </ns:MaxTries>
                            </xsl:if>
                            <xsl:if test="ns:Repub">
                                <ns:Repub>
                                    <xsl:value-of select="ns:Repub"/>
                                </ns:Repub>
                            </xsl:if>
                            <xsl:if test="ns:RepubTime">
                                <ns:RepubTime>
                                    <xsl:value-of select="ns:RepubTime"/>
                                </ns:RepubTime>
                            </xsl:if>
                            <xsl:for-each select="ns:History">
                                <ns:History>
                                    <xsl:for-each select="ns:Flow">
                                        <ns:Flow>
                                            <xsl:if test="ns:Owner">
                                                <ns:Owner>
                                                    <xsl:value-of select="ns:Owner"/>
                                                </ns:Owner>
                                            </xsl:if>
                                            <xsl:if test="ns:OwnerId">
                                                <ns:OwnerId>
                                                    <xsl:value-of select="ns:OwnerId"/>
                                                </ns:OwnerId>
                                            </xsl:if>
                                            <xsl:if test="ns:ProcessId">
                                                <ns:ProcessId>
                                                    <xsl:value-of select="ns:ProcessId"/>
                                                </ns:ProcessId>
                                            </xsl:if>
                                            <xsl:for-each select="ns:BusinessInterface">
                                                <ns:BusinessInterface>
                                                    <xsl:if test="ns:Operation">
                                                        <ns:Operation>
                                                            <xsl:value-of select="ns:Operation"/>
                                                        </ns:Operation>
                                                    </xsl:if>
                                                    <xsl:if test="ns:Version">
                                                        <ns:Version>
                                                            <xsl:value-of select="ns:Version"/>
                                                        </ns:Version>
                                                    </xsl:if>
                                                </ns:BusinessInterface>
                                            </xsl:for-each>
                                            <xsl:for-each select="ns:TechnicalInterface">
                                                <ns:TechnicalInterface>
                                                    <xsl:if test="ns:Domain">
                                                        <ns:Domain>
                                                            <xsl:value-of select="ns:Domain"/>
                                                        </ns:Domain>
                                                    </xsl:if>
                                                    <xsl:if test="ns:Interface">
                                                        <ns:Interface>
                                                            <xsl:value-of select="ns:Interface"/>
                                                        </ns:Interface>
                                                    </xsl:if>
                                                    <xsl:if test="ns:Version">
                                                        <ns:Version>
                                                            <xsl:value-of select="ns:Version"/>
                                                        </ns:Version>
                                                    </xsl:if>
                                                    <xsl:if test="ns:MethodCall">
                                                        <ns:MethodCall>
                                                            <xsl:value-of select="ns:MethodCall"/>
                                                        </ns:MethodCall>
                                                    </xsl:if>
                                                </ns:TechnicalInterface>
                                            </xsl:for-each>
                                            <xsl:if test="ns:Timestamp">
                                                <ns:Timestamp>
                                                    <xsl:value-of select="ns:Timestamp"/>
                                                </ns:Timestamp>
                                            </xsl:if>
                                        </ns:Flow>
                                    </xsl:for-each>
                                    <xsl:if test="ns:Step">
                                        <ns:Step>
                                            <xsl:value-of select="ns:Step"/>
                                        </ns:Step>
                                    </xsl:if>
                                    <xsl:if test="ns:NumSteps">
                                        <ns:NumSteps>
                                            <xsl:value-of select="ns:NumSteps"/>
                                        </ns:NumSteps>
                                    </xsl:if>
                                </ns:History>
                            </xsl:for-each>
                            <xsl:for-each select="ns:Transport">
                                <ns:Transport>
                                    <xsl:if test="ns:ReplyTo">
                                        <ns:ReplyTo>
                                            <xsl:value-of select="ns:ReplyTo"/>
                                        </ns:ReplyTo>
                                    </xsl:if>
                                    <xsl:if test="ns:Destination">
                                        <ns:Destination>
                                            <xsl:value-of select="ns:Destination"/>
                                        </ns:Destination>
                                    </xsl:if>
                                    <xsl:if test="ns:MessageId">
                                        <ns:MessageId>
                                            <xsl:value-of select="ns:MessageId"/>
                                        </ns:MessageId>
                                    </xsl:if>
                                    <xsl:if test="ns:SOAPAction">
                                        <ns:SOAPAction>
                                            <xsl:value-of select="ns:SOAPAction"/>
                                        </ns:SOAPAction>
                                    </xsl:if>
                                </ns:Transport>
                            </xsl:for-each>
                        </pfx:Header>
                    </xsl:for-each>
                    <pfx:Body>
                        <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Body/TelcoOrderStatusNotification"/>
                    </pfx:Body>
                </pfx:RequestEAI>
            </Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SetHeader">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>186</pd:x>
        <pd:y>61</pd:y>
        <config>
            <processName>/GlobalCommonResources/Processes/Common/SetHeader.process</processName>
        </config>
        <pd:inputBindings>
            <Input>
                <Header>
                    <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns:RequestId">
                        <ns:RequestId>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:RequestId"/>
                        </ns:RequestId>
                    </xsl:if>
                    <ns:SourceSystem>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:SourceSystem"/>
                    </ns:SourceSystem>
                    <ns:ReplyExpected>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:ReplyExpected"/>
                    </ns:ReplyExpected>
                    <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns:QoS">
                        <ns:QoS>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:QoS"/>
                        </ns:QoS>
                    </xsl:if>
                    <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns:Schedule">
                        <ns:Schedule>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:Schedule"/>
                        </ns:Schedule>
                    </xsl:if>
                    <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns:CorrelationId">
                        <ns:CorrelationId>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:CorrelationId"/>
                        </ns:CorrelationId>
                    </xsl:if>
                    <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns:Priority">
                        <ns:Priority>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:Priority"/>
                        </ns:Priority>
                    </xsl:if>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:Credentials"/>
                    <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns:ProxySystem">
                        <ns:ProxySystem>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:ProxySystem"/>
                        </ns:ProxySystem>
                    </xsl:if>
                    <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns:ForceSimulate">
                        <ns:ForceSimulate>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:ForceSimulate"/>
                        </ns:ForceSimulate>
                    </xsl:if>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:Attributes"/>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:BusinessInterface"/>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:TechnicalInterface"/>
                    <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns:TargetSystem">
                        <ns:TargetSystem>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:TargetSystem"/>
                        </ns:TargetSystem>
                    </xsl:if>
                    <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns:CreationTimestamp">
                        <ns:CreationTimestamp>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:CreationTimestamp"/>
                        </ns:CreationTimestamp>
                    </xsl:if>
                    <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns:TimeOut">
                        <ns:TimeOut>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:TimeOut"/>
                        </ns:TimeOut>
                    </xsl:if>
                    <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns:Tries">
                        <ns:Tries>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:Tries"/>
                        </ns:Tries>
                    </xsl:if>
                    <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns:MaxTries">
                        <ns:MaxTries>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:MaxTries"/>
                        </ns:MaxTries>
                    </xsl:if>
                    <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns:Repub">
                        <ns:Repub>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:Repub"/>
                        </ns:Repub>
                    </xsl:if>
                    <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns:RepubTime">
                        <ns:RepubTime>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:RepubTime"/>
                        </ns:RepubTime>
                    </xsl:if>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:History"/>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns:Transport"/>
                </Header>
            </Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Order Notification Dispacher</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch-LogMessage</pd:from>
        <pd:to>Assign Error</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch-All</pd:from>
        <pd:to>Assign Error</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign Error</pd:from>
        <pd:to>Logger [ERROR]</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>SetHeader</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Logger [ERROR]</pd:from>
        <pd:to>Logger [AUDIT] [END]</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Logger [AUDIT] [END]</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SetHeader</pd:from>
        <pd:to>Logger--AUDIT--START</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Logger--AUDIT--START</pd:from>
        <pd:to>Order Notification Dispacher</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Order Notification Dispacher</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>