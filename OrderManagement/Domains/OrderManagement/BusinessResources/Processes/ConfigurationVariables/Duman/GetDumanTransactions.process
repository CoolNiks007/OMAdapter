<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentRequestInput/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd">
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentRequestInput/v1" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/OrderComponent/OrderComponentRequestInput.xsd"/>
    <pd:name>Domains/OrderManagement/BusinessResources/Processes/ConfigurationVariables/Duman/GetDumanTransactions.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="GetDumanTransactionsInput">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="Order" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>55</pd:startX>
    <pd:startY>63</pd:startY>
    <pd:returnBindings>
        <GetDumanTransactionsOutput>
            <xsl:variable name="Order" select="$Parse-XML/Order"/>
            <xsl:for-each select="$Order/ListOfRootItem/RootItem">
                <xsl:variable name="RootItem" select="."/>
                <xsl:for-each select="$GetVariable/ListOfDumanTransactions/DumanTransactions[ProductCatalogID = ($RootItem/ProductCatalogId, '*')]">
                    <xsl:variable name="ProductCatalogId" select="$RootItem/ProductCatalogId"/>
                    <xsl:variable name="ProductIntegrationId" select="$RootItem/IntegrationId"/>
                    <xsl:if test="tib:evaluate(current()/Condition) = &quot;true&quot;">
                        <DumanTransaction>
                            <RootIntegrationId>
                                <xsl:value-of select="$RootItem/IntegrationId/text()"/>
                            </RootIntegrationId>
                            <ProductIntegrationId>
                                <xsl:value-of select="$ProductIntegrationId"/>
                            </ProductIntegrationId>
                            <ProductCatalogId>
                                <xsl:value-of select="$ProductCatalogId"/>
                            </ProductCatalogId>
                            <TransactionName>
                                <xsl:value-of select="current()/TransactionName"/>
                            </TransactionName>
                            <TransactionCode>
                                <xsl:value-of select="current()/TransactionCode"/>
                            </TransactionCode>
                        </DumanTransaction>
                    </xsl:if>
                </xsl:for-each>
                <xsl:for-each select="$RootItem/ListOfChildItem/ChildItem">
                    <xsl:variable name="ChildItem" select="."/>
                    <xsl:variable name="ProductIntegrationId" select="$ChildItem/IntegrationId/text()"/>
                    <xsl:variable name="ProductCatalogId" select="$ChildItem/ProductCatalogId/text()"/>
                    <xsl:for-each select="$GetVariable/ListOfDumanTransactions/DumanTransactions[ProductCatalogID = ($ChildItem/ProductCatalogId, '*')]">
                        <xsl:if test="tib:evaluate(current()/Condition) = &quot;true&quot;">
                            <DumanTransaction>
                                <RootIntegrationId>
                                    <xsl:value-of select="$RootItem/IntegrationId/text()"/>
                                </RootIntegrationId>
                                <ProductIntegrationId>
                                    <xsl:value-of select="$ProductIntegrationId"/>
                                </ProductIntegrationId>
                                <ProductCatalogId>
                                    <xsl:value-of select="$ProductCatalogId"/>
                                </ProductCatalogId>
                                <TransactionName>
                                    <xsl:value-of select="current()/TransactionName"/>
                                </TransactionName>
                                <TransactionCode>
                                    <xsl:value-of select="current()/TransactionCode"/>
                                </TransactionCode>
                            </DumanTransaction>
                        </xsl:if>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:for-each>
        </GetDumanTransactionsOutput>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="GetDumanTransactionsOutput">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="DumanTransaction" minOccurs="0" maxOccurs="unbounded">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="RootIntegrationId" type="xsd:string"/>
                                <xsd:element name="ProductIntegrationId" type="xsd:string"/>
                                <xsd:element name="ProductCatalogId" type="xsd:string"/>
                                <xsd:element name="TransactionName" type="xsd:string"/>
                                <xsd:element name="TransactionCode" type="xsd:string"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>457</pd:endX>
    <pd:endY>65</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://vodafone.com.tr/1411467088429</pd:targetNamespace>
    <pd:activity name="GetVariable">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>331</pd:x>
        <pd:y>65</pd:y>
        <config>
            <variableConfig>/Domains/OrderManagement/BusinessResources/SharedVariables/Duman/Duman Transactions.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>187</pd:x>
        <pd:y>65</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term ref="Order"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Start/GetDumanTransactionsInput/Order"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>GetVariable</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>GetVariable</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>