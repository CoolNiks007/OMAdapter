<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns32="urn:com:metasolv:oms:xmlapi:1" xmlns:ns5="http://www.tibco.com/pe/EngineTypes" xmlns:ns12="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentResponseInput/v1" xmlns:ns6="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:pfx="http://vodafone.com.tr/EAI/Common/RequestEAI" xmlns:ns2="http://vodafone.com.tr/EAI/Common/Header" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns4="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentRequestInput/v1" xmlns:ns3="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx5="http://vodafone.com.tr/EAI/Common/ResponseCodes" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx4="http://vodafone.com.tr/ServiceCatalog/ServiceReply" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://vodafone.com.tr/ServiceCatalog/ServiceRequest" xmlns:pfx2="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/PipelineIterator/v1" xmlns:pfx8="http://vodafone.com.tr/EAI/Common/ResponseEAI" xmlns:pfx7="http://vodafone.com.tr/EAI/Logging" xmlns:pfx6="http://schemas.tibco.com/bw/plugins/jms/5.0/jmsExceptions">
    <xsd:import namespace="http://vodafone.com.tr/EAI/Common/RequestEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/RequestEAI.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/ServiceRequest" schemaLocation="/Domains/ServiceCatalog/BusinessResources/Schemas/ServiceRequest.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/ServiceReply" schemaLocation="/Domains/ServiceCatalog/BusinessResources/Schemas/ServiceReply.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentRequestInput/v1" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/OrderComponent/OrderComponentRequestInput.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/EAI/Logging" schemaLocation="/GlobalCommonResources/Schemas/Logging/LogMessage.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/PipelineIterator/v1" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/OrderComponent/PipelineIterator.xsd"/>
    <pd:name>Domains/OrderManagement/BusinessResources/Processes/OrderComponent/OrderComponentIterator.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="Input">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="RequestDestination" type="xsd:string"/>
                    <xsd:element name="ListOfRequests">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:any minOccurs="0" maxOccurs="unbounded"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element ref="pfx:RequestEAI"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>56</pd:startX>
    <pd:startY>213</pd:startY>
    <pd:returnBindings/>
    <pd:endName>End</pd:endName>
    <pd:endX>1127</pd:endX>
    <pd:endY>224</pd:endY>
    <pd:errorSchemas>
        <LogMessage ref="pfx7:LogMessage"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://vodafone.com.tr/1424771658191</pd:targetNamespace>
    <pd:group name="OCIterator">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>258</pd:x>
        <pd:y>1</pd:y>
        <pd:width>753</pd:width>
        <pd:height>543</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Start/Input/ListOfRequests/*</pd:over>
            <pd:iterationElementSlot>Request</pd:iterationElementSlot>
            <pd:indexSlot>i</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>AlreadyProcessed</pd:to>
            <pd:xpathDescription>IterationIgnore</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>RequestOrResponse</pd:to>
            <pd:xpathDescription>Iterate</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$i &lt; count($Start/Input/ListOfRequests/*)
and
($i&gt;= $Parse-XML/pfx2:PipelineIterator/pfx2:CurrentIterationValue or  string-length($Parse-XML/pfx2:PipelineIterator/pfx2:CurrentIterationValue) = 0)</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>JMS Queue Sender</pd:to>
            <pd:xpathDescription>LastRequest</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$i = count($Start/Input/ListOfRequests/*)</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>JMS Queue Sender</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>AlreadyProcessed</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Order Component Response Dispacher</pd:from>
            <pd:to>end</pd:to>
            <pd:xpathDescription>Success</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$Order-Component-Response-Dispacher/Output/pfx8:ResponseEAI/pfx8:ResponseCodes/pfx5:ResponseCode = $_globalVariables/ns:GlobalVariables/ErrorCodes/Success</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>MapPipeline</pd:from>
            <pd:to>Fail Order Component</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Fail Order Component</pd:from>
            <pd:to>Generate Error</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>JMS Queue SendReceive</pd:from>
            <pd:to>Null</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>MapPipeline</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>JMS Queue SendReceive</pd:from>
            <pd:to>OrderComponentResponseErrorMasking</pd:to>
            <pd:xpathDescription/>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>RequestOrResponse</pd:from>
            <pd:to>Order Component Response Dispacher</pd:to>
            <pd:xpathDescription>Response</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$Parse-XML/pfx2:PipelineIterator[$i = pfx2:CurrentIterationValue]/pfx2:CurrentIterationState = 'Response'</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>RequestOrResponse</pd:from>
            <pd:to>JMS Queue SendReceive</pd:to>
            <pd:xpathDescription>Request</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Order Component Response Dispacher</pd:from>
            <pd:to>Null</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Order Component Response Dispacher</pd:from>
            <pd:to>MapPipeline</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>OrderComponentResponseErrorMasking</pd:from>
            <pd:to>Order Component Response Dispacher</pd:to>
            <pd:xpathDescription>Success</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$OrderComponentResponseErrorMasking/Output/MaskedErrorCode = $_globalVariables/ns:GlobalVariables/ErrorCodes/Success</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>OrderComponentResponseErrorMasking</pd:from>
            <pd:to>Null</pd:to>
            <pd:xpathDescription>Error</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:activity name="JMS Queue Sender">
            <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
            <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
            <pd:x>563</pd:x>
            <pd:y>70</pd:y>
            <config>
                <PermittedMessageType>XML Text</PermittedMessageType>
                <SessionAttributes>
                    <transacted>false</transacted>
                    <acknowledgeMode>1</acknowledgeMode>
                    <maxSessions>1</maxSessions>
                    <destination>VFTR.Network.ServiceCatalog.IN.Business.G.Request. AddMultipleVPNAccount_v1</destination>
                </SessionAttributes>
                <ConfigurableHeaders>
                    <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                    <JMSExpiration>0</JMSExpiration>
                    <JMSPriority>4</JMSPriority>
                </ConfigurableHeaders>
                <ConnectionReference>/GlobalCommonResources/Connections/JMS/JMS EAI Connection.sharedjmscon</ConnectionReference>
                <InDataxsdString ref="pfx3:ServiceRequest"/>
            </config>
            <pd:inputBindings>
                <ns1:ActivityInput>
                    <destinationQueue>
                        <xsl:value-of select="$Start/Input/RequestDestination"/>
                    </destinationQueue>
                    <replyToQueue>
                        <xsl:value-of select="tib:concat-sequence-format(($_globalVariables/ns:GlobalVariables/Constants/Company,$_globalVariables/ns:GlobalVariables/Constants/ProjectName,$_globalVariables/ns:GlobalVariables/Domains/OrderManagement/Name,$_globalVariables/ns:GlobalVariables/Domains/OrderManagement/OrderComponent/Name,$_globalVariables/ns:GlobalVariables/Constants/Layer/Business,$_globalVariables/ns:GlobalVariables/Constants/QOS/Guarantee,$_globalVariables/ns:GlobalVariables/Constants/RequestType/Reply),&quot;.&quot;)"/>
                    </replyToQueue>
                    <JMSPriority>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Priority"/>
                    </JMSPriority>
                    <Body>
                        <pfx3:ServiceRequest>
                            <xsl:for-each select="$Start/Input/pfx:RequestEAI/pfx:Header">
                                <pfx3:Header>
                                    <ns2:RequestId>
                                        <xsl:value-of select="ns2:RequestId"/>
                                    </ns2:RequestId>
                                    <ns2:SourceSystem>
                                        <xsl:value-of select="ns2:SourceSystem"/>
                                    </ns2:SourceSystem>
                                    <ns2:ReplyExpected>
                                        <xsl:value-of select="ns2:ReplyExpected"/>
                                    </ns2:ReplyExpected>
                                    <ns2:QoS>
                                        <xsl:value-of select="ns2:QoS"/>
                                    </ns2:QoS>
                                    <xsl:if test="string-length(ns2:Schedule) >0">
                                        <ns2:Schedule>
                                            <xsl:value-of select="ns2:Schedule"/>
                                        </ns2:Schedule>
                                    </xsl:if>
                                    <ns2:CorrelationId>
                                        <xsl:value-of select="ns2:CorrelationId"/>
                                    </ns2:CorrelationId>
                                    <ns2:Priority>
                                        <xsl:value-of select="ns2:Priority"/>
                                    </ns2:Priority>
                                    <xsl:copy-of select="ns2:Credentials"/>
                                    <ns2:ProxySystem>
                                        <xsl:value-of select="ns2:ProxySystem"/>
                                    </ns2:ProxySystem>
                                    <xsl:if test="string-length(ns2:ForceSimulate)>0">
                                        <ns2:ForceSimulate>
                                            <xsl:value-of select="ns2:ForceSimulate"/>
                                        </ns2:ForceSimulate>
                                    </xsl:if>
                                    <xsl:for-each select="ns2:Attributes">
                                        <ns2:Attributes>
                                            <xsl:for-each select="ns2:Attribute">
                                                <ns2:Attribute>
                                                    <ns2:Name>
                                                        <xsl:value-of select="ns2:Name"/>
                                                    </ns2:Name>
                                                    <ns2:Value>
                                                        <xsl:value-of select="ns2:Value"/>
                                                    </ns2:Value>
                                                </ns2:Attribute>
                                            </xsl:for-each>
                                            <ns2:Attribute>
                                                <ns2:Name>
                                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/CurrentIterationValue"/>
                                                </ns2:Name>
                                                <ns2:Value>
                                                    <xsl:value-of select="$i"/>
                                                </ns2:Value>
                                            </ns2:Attribute>
                                        </ns2:Attributes>
                                    </xsl:for-each>
                                </pfx3:Header>
                            </xsl:for-each>
                            <pfx3:Body>
                                <xsl:copy-of select="$Request/*"/>
                            </pfx3:Body>
                        </pfx3:ServiceRequest>
                    </Body>
                </ns1:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="JMS Queue SendReceive">
            <pd:type>com.tibco.plugin.jms.JMSQueueRequestReplyActivity</pd:type>
            <pd:resourceType>ae.activities.JMSQueueRequestReplyActivity</pd:resourceType>
            <pd:x>416</pd:x>
            <pd:y>475</pd:y>
            <config>
                <PermittedMessageType>XML Text</PermittedMessageType>
                <SessionAttributes>
                    <transacted>false</transacted>
                    <acknowledgeMode>1</acknowledgeMode>
                    <maxSessions>1</maxSessions>
                    <destination/>
                </SessionAttributes>
                <ConfigurableHeaders>
                    <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                    <JMSExpiration>%%Domains/OrderManagement/OrderComponent/OCSyncRequestTimeout%%</JMSExpiration>
                    <JMSPriority>4</JMSPriority>
                </ConfigurableHeaders>
                <ConnectionReference>/GlobalCommonResources/Connections/JMS/JMS EAI Connection.sharedjmscon</ConnectionReference>
                <InDataxsdString ref="pfx3:ServiceRequest"/>
                <OutDataxsdString ref="pfx4:ServiceReply"/>
            </config>
            <pd:inputBindings>
                <ns1:ActivityInput>
                    <destinationQueue>
                        <xsl:value-of select="$Start/Input/RequestDestination"/>
                    </destinationQueue>
                    <JMSExpiration>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Domains/OrderManagement/OrderComponent/OCSyncRequestJMSMsgExpiration"/>
                    </JMSExpiration>
                    <JMSPriority>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Priority"/>
                    </JMSPriority>
                    <requestTimeout>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Domains/OrderManagement/OrderComponent/OCSyncRequestTimeout"/>
                    </requestTimeout>
                    <Body>
                        <pfx3:ServiceRequest>
                            <xsl:for-each select="$Start/Input/pfx:RequestEAI/pfx:Header">
                                <pfx3:Header>
                                    <ns2:RequestId>
                                        <xsl:value-of select="concat(ns2:RequestId,'-',$i)"/>
                                    </ns2:RequestId>
                                    <ns2:SourceSystem>
                                        <xsl:value-of select="ns2:SourceSystem"/>
                                    </ns2:SourceSystem>
                                    <ns2:ReplyExpected>
                                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Constants/Reply/Now"/>
                                    </ns2:ReplyExpected>
                                    <ns2:QoS>
                                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Constants/QOS/Reliable"/>
                                    </ns2:QoS>
                                    <xsl:if test="ns2:Schedule">
                                        <ns2:Schedule>
                                            <xsl:value-of select="ns2:Schedule"/>
                                        </ns2:Schedule>
                                    </xsl:if>
                                    <xsl:if test="ns2:CorrelationId">
                                        <ns2:CorrelationId>
                                            <xsl:value-of select="ns2:CorrelationId"/>
                                        </ns2:CorrelationId>
                                    </xsl:if>
                                    <xsl:if test="ns2:Priority">
                                        <ns2:Priority>
                                            <xsl:value-of select="ns2:Priority"/>
                                        </ns2:Priority>
                                    </xsl:if>
                                    <xsl:for-each select="ns2:Credentials">
                                        <ns2:Credentials>
                                            <ns2:ApplicationId>
                                                <xsl:value-of select="ns2:ApplicationId"/>
                                            </ns2:ApplicationId>
                                            <ns2:User>
                                                <xsl:value-of select="ns2:User"/>
                                            </ns2:User>
                                            <xsl:if test="ns2:Password">
                                                <ns2:Password>
                                                    <xsl:value-of select="ns2:Password"/>
                                                </ns2:Password>
                                            </xsl:if>
                                        </ns2:Credentials>
                                    </xsl:for-each>
                                    <xsl:if test="ns2:ProxySystem">
                                        <ns2:ProxySystem>
                                            <xsl:value-of select="ns2:ProxySystem"/>
                                        </ns2:ProxySystem>
                                    </xsl:if>
                                    <xsl:if test="ns2:ForceSimulate">
                                        <ns2:ForceSimulate>
                                            <xsl:value-of select="ns2:ForceSimulate"/>
                                        </ns2:ForceSimulate>
                                    </xsl:if>
                                    <xsl:for-each select="ns2:Attributes">
                                        <ns2:Attributes>
                                            <xsl:for-each select="ns2:Attribute">
                                                <ns2:Attribute>
                                                    <ns2:Name>
                                                        <xsl:value-of select="ns2:Name"/>
                                                    </ns2:Name>
                                                    <ns2:Value>
                                                        <xsl:value-of select="ns2:Value"/>
                                                    </ns2:Value>
                                                </ns2:Attribute>
                                            </xsl:for-each>
                                        </ns2:Attributes>
                                    </xsl:for-each>
                                </pfx3:Header>
                            </xsl:for-each>
                            <pfx3:Body>
                                <xsl:copy-of select="$Request/*"/>
                            </pfx3:Body>
                        </pfx3:ServiceRequest>
                    </Body>
                </ns1:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Fail Order Component">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>825</pd:x>
            <pd:y>475</pd:y>
            <config>
                <processName>/Domains/OrderManagement/BusinessResources/Processes/OrderComponent/OrderComponentResponse.process</processName>
            </config>
            <pd:coercions>
                <pd:coercion xpath="$Start/Input/pfx:RequestEAI/pfx:Body/*" element="ns4:Request"/>
            </pd:coercions>
            <pd:inputBindings>
                <Input>
                    <ns12:Request>
                        <ns12:OcDetails>
                            <ns12:Id>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:Id"/>
                            </ns12:Id>
                            <ns12:Name>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:Name"/>
                            </ns12:Name>
                            <ns12:Scenario>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:Scenario"/>
                            </ns12:Scenario>
                            <ns12:OrderId>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:OrderId"/>
                            </ns12:OrderId>
                            <ns12:CorrelationID>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:CorrelationID"/>
                            </ns12:CorrelationID>
                            <ns12:Cartridge>
                                <ns12:Name>
                                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:Cartridge/ns4:Name"/>
                                </ns12:Name>
                                <ns12:Version>
                                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:Cartridge/ns4:Version"/>
                                </ns12:Version>
                                <ns12:Source>
                                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:Cartridge/ns4:Source"/>
                                </ns12:Source>
                            </ns12:Cartridge>
                        </ns12:OcDetails>
                        <ns12:ServiceReply>
                            <pfx4:Header>
                                <pfx5:ResponseCode>
                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ErrorCodes/ReferenceDataNotFound"/>
                                </pfx5:ResponseCode>
                            </pfx4:Header>
                            <pfx4:Body>
                                <xsl:choose>
                                    <xsl:when test="string-length($JMS-Queue-SendReceive/ns1:ActivityOutput/Body/pfx4:ServiceReply/pfx4:Header/pfx5:ResponseCode)>0">
                                        <ns32:TelcoOperationResponse>
                                            <Id>
                                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:Id"/>
                                            </Id>
                                            <Name>
                                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:Name"/>
                                            </Name>
                                            <OrderId>
                                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:OrderId"/>
                                            </OrderId>
                                            <xsl:choose>
                                                <xsl:when test="string-length($Order-Component-Response-Dispacher/Output/pfx8:ResponseEAI/pfx8:ResponseCodes/pfx5:ResponseCode)>0">
                                                    <StatusCode>
                                                        <xsl:value-of select="$Order-Component-Response-Dispacher/Output/pfx8:ResponseEAI/pfx8:ResponseCodes/pfx5:ResponseCode"/>
                                                    </StatusCode>
                                                    <StatusMessage>
                                                        <xsl:value-of select="concat('Iteration ',$i,' of ', count($Start/Input/ListOfRequests/*), ': ' ,$Order-Component-Response-Dispacher/Output/pfx8:ResponseEAI/pfx8:ResponseCodes/pfx5:ResponseMsg, ' - ', $Order-Component-Response-Dispacher/Output/pfx8:ResponseEAI/pfx8:ResponseCodes/pfx5:ErrorDescription)"/>
                                                    </StatusMessage>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <StatusCode>
                                                        <xsl:value-of select="$JMS-Queue-SendReceive/ns1:ActivityOutput/Body/pfx4:ServiceReply/pfx4:Header/pfx5:ResponseCode"/>
                                                    </StatusCode>
                                                    <StatusMessage>
                                                        <xsl:value-of select="concat('Iteration ',$i,' of ', count($Start/Input/ListOfRequests/*), ': ' ,$JMS-Queue-SendReceive/ns1:ActivityOutput/Body/pfx4:ServiceReply/pfx4:Header/pfx5:ResponseMsg, ' - ', $JMS-Queue-SendReceive/ns1:ActivityOutput/Body/pfx4:ServiceReply/pfx4:Header/pfx5:ErrorDescription)"/>
                                                    </StatusMessage>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                            <xsl:if test="$MapPipeline/pfx2:PipelineIterator/pfx2:CurrentIterationValue !=1 and $MapPipeline/pfx2:PipelineIterator/pfx2:CurrentIterationState!='Response'">
                                                <PipelineItem>
                                                    <OperationName>
                                                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:Name"/>
                                                    </OperationName>
                                                    <OperationId>
                                                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:Id"/>
                                                    </OperationId>
                                                    <PipelineMessage>
                                                        <xsl:value-of select="tib:render-xml($MapPipeline/pfx2:PipelineIterator)"/>
                                                    </PipelineMessage>
                                                </PipelineItem>
                                            </xsl:if>
                                        </ns32:TelcoOperationResponse>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <ns32:TelcoOperationResponse>
                                            <Id>
                                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:Id"/>
                                            </Id>
                                            <Name>
                                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:Name"/>
                                            </Name>
                                            <OrderId>
                                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:OrderId"/>
                                            </OrderId>
                                            <xsl:choose>
                                                <xsl:when test="exists($_error_JMS-Queue-SendReceive/ActivityErrors/ns6:ActivityTimedOutException)">
                                                    <StatusCode>
                                                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ErrorCodes/Timeout"/>
                                                    </StatusCode>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <StatusCode>
                                                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ErrorCodes/TransportError"/>
                                                    </StatusCode>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                            <StatusMessage>
                                                <xsl:value-of select="concat('Iteration ',$i,' of ', count($Start/Input/ListOfRequests/*), ': ' ,$_error/ns5:ErrorReport/Msg)"/>
                                            </StatusMessage>
                                            <xsl:if test="$MapPipeline/pfx2:PipelineIterator/pfx2:CurrentIterationValue !=1 and $MapPipeline/pfx2:PipelineIterator/pfx2:CurrentIterationState!='Response'">
                                                <PipelineItem>
                                                    <OperationName>
                                                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:Name"/>
                                                    </OperationName>
                                                    <OperationId>
                                                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:Id"/>
                                                    </OperationId>
                                                    <PipelineMessage>
                                                        <xsl:value-of select="tib:render-xml($MapPipeline/pfx2:PipelineIterator)"/>
                                                    </PipelineMessage>
                                                </PipelineItem>
                                            </xsl:if>
                                        </ns32:TelcoOperationResponse>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </pfx4:Body>
                        </ns12:ServiceReply>
                    </ns12:Request>
                </Input>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="MapPipeline">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>715</pd:x>
            <pd:y>467</pd:y>
            <config>
                <element ref="pfx2:PipelineIterator"/>
            </config>
            <pd:inputBindings>
                <pfx2:PipelineIterator>
                    <pfx2:CurrentIterationValue>
                        <xsl:value-of select="$i"/>
                    </pfx2:CurrentIterationValue>
                    <xsl:choose>
                        <xsl:when test="string-length($Order-Component-Response-Dispacher/Output/pfx8:ResponseEAI/pfx8:ResponseCodes/pfx5:ResponseCode)>0">
                            <pfx2:CurrentIterationState>
                                <xsl:value-of select="'Response'"/>
                            </pfx2:CurrentIterationState>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx2:CurrentIterationState>
                                <xsl:value-of select="'Request'"/>
                            </pfx2:CurrentIterationState>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:if test="string-length($Order-Component-Response-Dispacher/Output/pfx8:ResponseEAI/pfx8:ResponseCodes/pfx5:ResponseCode)>0">
                        <pfx2:XMLResponse>
                            <xsl:copy-of select="$JMS-Queue-SendReceive/ns1:ActivityOutput/Body/pfx4:ServiceReply"/>
                        </pfx2:XMLResponse>
                    </xsl:if>
                </pfx2:PipelineIterator>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Generate Error">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>934</pd:x>
            <pd:y>467</pd:y>
            <config>
                <faultName/>
            </config>
            <pd:inputBindings>
                <ns3:ActivityInput>
                    <message>
                        <xsl:value-of select="'IterationBreak'"/>
                    </message>
                    <messageCode>
                        <xsl:value-of select="$i"/>
                    </messageCode>
                </ns3:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Null">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>617</pd:x>
            <pd:y>467</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="AlreadyProcessed">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>568</pd:x>
            <pd:y>163</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="Order Component Response Dispacher">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>712</pd:x>
            <pd:y>289</pd:y>
            <config>
                <processName>/GlobalCommonResources/Processes/Common/InterfaceService.process</processName>
                <processNameXPath>concat("/",$_globalVariables/ns:GlobalVariables/Domains/BaseLocation, "/",$_globalVariables/ns:GlobalVariables/Domains/OrderManagement/Location, "/", $_globalVariables/ns:GlobalVariables/Constants/Layer/Business, "/",$_globalVariables/ns:GlobalVariables/Domains/OrderManagement/OrderComponent/Location,"/",$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Attributes/ns2:Attribute[ns2:Name = $_globalVariables/ns:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/ResponseService]/ns2:Value)</processNameXPath>
            </config>
            <pd:inputBindings>
                <Input>
                    <pfx:RequestEAI>
                        <pfx:Header>
                            <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ancestor-or-self::*/namespace::node()"/>
                            <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/@*"/>
                            <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/node()"/>
                        </pfx:Header>
                        <pfx:Body>
                            <ns12:Request>
                                <ns12:OcDetails>
                                    <ns12:Id>
                                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:Id"/>
                                    </ns12:Id>
                                    <ns12:Name>
                                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:Name"/>
                                    </ns12:Name>
                                    <ns12:Scenario>
                                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:Scenario"/>
                                    </ns12:Scenario>
                                    <ns12:OrderId>
                                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:OrderId"/>
                                    </ns12:OrderId>
                                    <ns12:CorrelationID>
                                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:CorrelationID"/>
                                    </ns12:CorrelationID>
                                    <ns12:Cartridge>
                                        <ns12:Name>
                                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:Cartridge/ns4:Name"/>
                                        </ns12:Name>
                                        <ns12:Version>
                                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:Cartridge/ns4:Version"/>
                                        </ns12:Version>
                                        <ns12:Source>
                                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:Cartridge/ns4:Source"/>
                                        </ns12:Source>
                                    </ns12:Cartridge>
                                </ns12:OcDetails>
                                <ns12:ServiceReply>
                                    <pfx4:Header>
                                        <pfx5:ResponseCode>
                                            <xsl:value-of select="$OrderComponentResponseErrorMasking/Output/MaskedErrorCode"/>
                                        </pfx5:ResponseCode>
                                        <pfx5:ResponseMsg>
                                            <xsl:value-of select="$JMS-Queue-SendReceive/ns1:ActivityOutput/Body/pfx4:ServiceReply/pfx4:Header/pfx5:ResponseMsg"/>
                                        </pfx5:ResponseMsg>
                                        <pfx5:ErrorCode>
                                            <xsl:value-of select="$JMS-Queue-SendReceive/ns1:ActivityOutput/Body/pfx4:ServiceReply/pfx4:Header/pfx5:ErrorCode"/>
                                        </pfx5:ErrorCode>
                                        <pfx5:ErrorDescription>
                                            <xsl:value-of select="$JMS-Queue-SendReceive/ns1:ActivityOutput/Body/pfx4:ServiceReply/pfx4:Header/pfx5:ErrorDescription"/>
                                        </pfx5:ErrorDescription>
                                        <pfx5:RequestId>
                                            <xsl:value-of select="$JMS-Queue-SendReceive/ns1:ActivityOutput/Body/pfx4:ServiceReply/pfx4:Header/pfx5:RequestId"/>
                                        </pfx5:RequestId>
                                        <pfx5:Domain>
                                            <xsl:value-of select="$JMS-Queue-SendReceive/ns1:ActivityOutput/Body/pfx4:ServiceReply/pfx4:Header/pfx5:Domain"/>
                                        </pfx5:Domain>
                                        <pfx5:Service>
                                            <xsl:value-of select="$JMS-Queue-SendReceive/ns1:ActivityOutput/Body/pfx4:ServiceReply/pfx4:Header/pfx5:Service"/>
                                        </pfx5:Service>
                                        <pfx5:Operation>
                                            <xsl:value-of select="$JMS-Queue-SendReceive/ns1:ActivityOutput/Body/pfx4:ServiceReply/pfx4:Header/pfx5:Operation"/>
                                        </pfx5:Operation>
                                        <pfx5:Version>
                                            <xsl:value-of select="$JMS-Queue-SendReceive/ns1:ActivityOutput/Body/pfx4:ServiceReply/pfx4:Header/pfx5:Version"/>
                                        </pfx5:Version>
                                        <xsl:copy-of select="$JMS-Queue-SendReceive/ns1:ActivityOutput/Body/pfx4:ServiceReply/pfx4:Header/pfx5:Attributes"/>
                                    </pfx4:Header>
                                    <pfx4:Body>
                                        <xsl:choose>
                                            <xsl:when test="$Parse-XML/pfx2:PipelineIterator[$i = pfx2:CurrentIterationValue]/pfx2:CurrentIterationState = 'Response'">
                                                <xsl:copy-of select="$Parse-XML/pfx2:PipelineIterator/pfx2:XMLResponse/*"/>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xsl:copy-of select="$JMS-Queue-SendReceive/ns1:ActivityOutput/Body/pfx4:ServiceReply/pfx4:Body/*"/>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                    </pfx4:Body>
                                </ns12:ServiceReply>
                            </ns12:Request>
                        </pfx:Body>
                    </pfx:RequestEAI>
                </Input>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="RequestOrResponse">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>414</pd:x>
            <pd:y>283</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="OrderComponentResponseErrorMasking">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>552</pd:x>
            <pd:y>368</pd:y>
            <config>
                <processName>/Domains/OrderManagement/BusinessResources/Processes/OrderComponent/OrderComponentResponseErrorMasking.process</processName>
            </config>
            <pd:inputBindings>
                <Input>
                    <ErrorCode>
                        <xsl:value-of select="$JMS-Queue-SendReceive/ns1:ActivityOutput/Body/pfx4:ServiceReply/pfx4:Header/pfx5:ResponseCode"/>
                    </ErrorCode>
                </Input>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="CatchIterationError">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>1129</pd:x>
        <pd:y>376</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Generate-Error-1">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>1134</pd:x>
        <pd:y>492</pd:y>
        <config>
            <faultName>LogMessage</faultName>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <xsl:choose>
                    <xsl:when test="string-length($_error/ns5:ErrorReport/Msg)>0">
                        <message>
                            <xsl:value-of select="$_error/ns5:ErrorReport/Msg"/>
                        </message>
                    </xsl:when>
                    <xsl:otherwise>
                        <message>
                            <xsl:value-of select="concat(BW:getCurrentProcessName($_processContext/ns5:ProcessContext/ProcessId), &quot; is a interface process and shouldn't be invoked&quot;)"/>
                        </message>
                    </xsl:otherwise>
                </xsl:choose>
                <data>
                    <xsl:choose>
                        <xsl:when test="string-length($_error_Generate-NoRequests/pfx7:LogMessage)>0">
                            <xsl:copy-of select="$_error_Generate-NoRequests/pfx7:LogMessage"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx7:LogMessage>
                                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:SourceSystem">
                                    <pfx7:Source>
                                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:SourceSystem"/>
                                    </pfx7:Source>
                                </xsl:if>
                                <pfx7:Target>
                                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:TargetSystem"/>
                                </pfx7:Target>
                                <pfx7:Engine>
                                    <xsl:value-of select="$_processContext/ns5:ProcessContext/EngineName"/>
                                </pfx7:Engine>
                                <pfx7:ProcessId>
                                    <xsl:value-of select="$_processContext/ns5:ProcessContext/ProcessId"/>
                                </pfx7:ProcessId>
                                <pfx7:Process>
                                    <xsl:value-of select="BW:getCurrentProcessName($_processContext/ns5:ProcessContext/ProcessId)"/>
                                </pfx7:Process>
                                <pfx7:Service>
                                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:BusinessInterface/ns2:Service"/>
                                </pfx7:Service>
                                <pfx7:Operation>
                                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:BusinessInterface/ns2:Operation"/>
                                </pfx7:Operation>
                                <pfx7:Type>
                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Logging/Roles/ErrorRoleName"/>
                                </pfx7:Type>
                                <pfx7:Description>
                                    <xsl:value-of select="concat(BW:getCurrentProcessName($_processContext/ns5:ProcessContext/ProcessId), &quot; is a interface process and shouldn't be invoked&quot;)"/>
                                </pfx7:Description>
                                <pfx7:ErrorDump>
                                    <xsl:value-of select="concat(BW:getCurrentProcessName($_processContext/ns5:ProcessContext/ProcessId), &quot; is a interface process and shouldn't be invoked&quot;)"/>
                                </pfx7:ErrorDump>
                                <pfx7:ErrorCode>
                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ErrorCodes/ServiceNotFound"/>
                                </pfx7:ErrorCode>
                                <pfx7:ResponseCode>
                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ErrorCodes/ServiceNotFound"/>
                                </pfx7:ResponseCode>
                                <pfx7:CorrelationId>
                                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:CorrelationId"/>
                                </pfx7:CorrelationId>
                                <pfx7:UserName>
                                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Credentials[1]/ns2:User"/>
                                </pfx7:UserName>
                                <pfx7:Version>
                                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:BusinessInterface/ns2:Version"/>
                                </pfx7:Version>
                            </pfx7:LogMessage>
                        </xsl:otherwise>
                    </xsl:choose>
                </data>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate-NoRequests">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>74</pd:x>
        <pd:y>432</pd:y>
        <config>
            <faultName>LogMessage</faultName>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <message>
                    <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/ErrorCodes/InvalidInputParametersDescription, ' - ListOfRequests is empty.')"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ErrorCodes/InvalidInputParameters"/>
                </messageCode>
                <data>
                    <pfx7:LogMessage>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:SourceSystem">
                            <pfx7:Source>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:SourceSystem"/>
                            </pfx7:Source>
                        </xsl:if>
                        <pfx7:Target>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:TargetSystem"/>
                        </pfx7:Target>
                        <pfx7:Engine>
                            <xsl:value-of select="$_processContext/ns5:ProcessContext/EngineName"/>
                        </pfx7:Engine>
                        <pfx7:ProcessId>
                            <xsl:value-of select="$_processContext/ns5:ProcessContext/ProcessId"/>
                        </pfx7:ProcessId>
                        <pfx7:Process>
                            <xsl:value-of select="BW:getCurrentProcessName($_processContext/ns5:ProcessContext/ProcessId)"/>
                        </pfx7:Process>
                        <pfx7:Service>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:BusinessInterface/ns2:Service"/>
                        </pfx7:Service>
                        <pfx7:Operation>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:BusinessInterface/ns2:Operation"/>
                        </pfx7:Operation>
                        <pfx7:Type>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Logging/Roles/ErrorRoleName"/>
                        </pfx7:Type>
                        <pfx7:Description>
                            <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/ErrorCodes/InvalidInputParametersDescription, ' - ListOfRequests is empty.')"/>
                        </pfx7:Description>
                        <pfx7:ErrorCode>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ErrorCodes/InvalidInputParameters"/>
                        </pfx7:ErrorCode>
                        <pfx7:ResponseCode>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ErrorCodes/InvalidInputParameters"/>
                        </pfx7:ResponseCode>
                        <pfx7:CorrelationId>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:CorrelationId"/>
                        </pfx7:CorrelationId>
                        <pfx7:UserName>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Credentials[1]/ns2:User"/>
                        </pfx7:UserName>
                        <pfx7:Version>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:BusinessInterface/ns2:Version"/>
                        </pfx7:Version>
                    </pfx7:LogMessage>
                </data>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>158</pd:x>
        <pd:y>340</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term ref="pfx2:PipelineIterator"/>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Start/Input/pfx:RequestEAI/pfx:Body/*" element="ns4:Request"/>
        </pd:coercions>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:Pipeline/ns4:PipelineItem[../../ns4:Id=ns4:OperationId]/ns4:PipelineMessage/*"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>OCIterator</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CatchIterationError</pd:from>
        <pd:to>End</pd:to>
        <pd:xpathDescription>IterationBreak</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$CatchIterationError/exceptiondata/*/Msg = 'IterationBreak'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>CatchIterationError</pd:from>
        <pd:to>Generate-Error-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:xpathDescription>HasPipelineIterator</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/Input/pfx:RequestEAI/pfx:Body/ns4:Request/ns4:OrderComponentDetails/ns4:Pipeline/ns4:PipelineItem[../../ns4:Id=ns4:OperationId]/ns4:PipelineMessage/*) &gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>OCIterator</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>OCIterator</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Generate-NoRequests</pd:to>
        <pd:xpathDescription>Zero Requests found</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>count($Start/Input/ListOfRequests/*)=0</pd:xpath>
    </pd:transition>
</pd:ProcessDefinition>