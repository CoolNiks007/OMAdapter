<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentRequestInput/v1" xmlns:ns5="http://vodafone.com.tr/EAI/Common/ResponseCodes" xmlns:pfx="http://vodafone.com.tr/EAI/Common/RequestEAI" xmlns:ns2="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://vodafone.com.tr/EAI/Common/Header" xmlns:ns4="urn:com:metasolv:oms:xmlapi:1" xmlns:ns3="http://www.tibco.com/pe/DeployedVarsType" xmlns:pfx5="http://vodafone.com.tr/ServiceCatalog/ServiceRequest" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx4="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://vodafone.com.tr/ServiceCatalog/Business/OSM/CreateChildOrders/v1" xmlns:pfx2="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/OSMOrder.xsd" xmlns:pfx9="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/Portability/PortIN.xsd" xmlns:pfx8="http://vodafone.com.tr/ServiceCatalog/ServiceReply" xmlns:pfx7="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentResponseInput/v1" xmlns:pfx6="http://vodafone.com.tr/EAI/Common/ResponseEAI">
    <xsd:import namespace="http://vodafone.com.tr/EAI/Common/RequestEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/RequestEAI.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentRequestInput/v1" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/OrderComponent/OrderComponentRequestInput.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/OSM/CreateChildOrders/v1" schemaLocation="/Domains/ServiceCatalog/Business/OSM/CreateChildOrders_v1/Schemas/CreateChildOrders.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/OSMOrder.xsd" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/OSMOrder.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/ServiceRequest" schemaLocation="/Domains/ServiceCatalog/BusinessResources/Schemas/ServiceRequest.xsd"/>
    <xsd:import namespace="urn:com:metasolv:oms:xmlapi:1" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/OSM/OSM_OperationResponse.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/EAI/Common/ResponseEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/ResponseEAI.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/Portability/PortIN.xsd" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/Portability/PortIN.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd"/>
    <pd:name>Domains/OrderManagement/Business/OrderComponent/OrderManagement/OSM/CreatePreProvisioningOrders_v1/CreatePreProvisioningOrders.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="Input">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:RequestEAI"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>46</pd:startX>
    <pd:startY>209</pd:startY>
    <pd:returnBindings>
        <Output>
            <pfx6:ResponseEAI>
                <pfx6:Header>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ancestor-or-self::*/namespace::node()"/>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/@*"/>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/node()"/>
                </pfx6:Header>
                <pfx6:ResponseCodes>
                    <ns5:ResponseCode>
                        <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/ErrorCodes/Success"/>
                    </ns5:ResponseCode>
                </pfx6:ResponseCodes>
            </pfx6:ResponseEAI>
        </Output>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="Output">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx6:ResponseEAI"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>721</pd:endX>
    <pd:endY>208</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://vodafone.com.tr/1424343207336</pd:targetNamespace>
    <pd:activity name="Close Order Component">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>547</pd:x>
        <pd:y>217</pd:y>
        <config>
            <processName>/Domains/OrderManagement/BusinessResources/Processes/OrderComponent/OrderComponentResponse.process</processName>
        </config>
        <pd:inputBindings>
            <Input>
                <pfx7:Request>
                    <pfx7:OcDetails>
                        <pfx7:Id>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id"/>
                        </pfx7:Id>
                        <pfx7:Name>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Name"/>
                        </pfx7:Name>
                        <pfx7:Scenario>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Scenario"/>
                        </pfx7:Scenario>
                        <pfx7:OrderId>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId"/>
                        </pfx7:OrderId>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:MasterOrderId">
                            <pfx7:MasterOrderId>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:MasterOrderId"/>
                            </pfx7:MasterOrderId>
                        </xsl:if>
                        <pfx7:CorrelationID>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:CorrelationID"/>
                        </pfx7:CorrelationID>
                        <xsl:for-each select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Cartridge">
                            <pfx7:Cartridge>
                                <pfx7:Name>
                                    <xsl:value-of select="ns:Name"/>
                                </pfx7:Name>
                                <pfx7:Version>
                                    <xsl:value-of select="ns:Version"/>
                                </pfx7:Version>
                                <pfx7:Source>
                                    <xsl:value-of select="ns:Source"/>
                                </pfx7:Source>
                            </pfx7:Cartridge>
                        </xsl:for-each>
                    </pfx7:OcDetails>
                    <pfx7:ServiceReply>
                        <pfx8:Header>
                            <ns5:ResponseCode>
                                <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/ErrorCodes/Success"/>
                            </ns5:ResponseCode>
                        </pfx8:Header>
                        <pfx8:Body>
                            <ns4:TelcoOperationResponse>
                                <Id>
                                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id"/>
                                </Id>
                                <Name>
                                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Name"/>
                                </Name>
                                <OrderId>
                                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId"/>
                                </OrderId>
                                <StatusCode>
                                    <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/ErrorCodes/Success"/>
                                </StatusCode>
                                <StatusMessage>
                                    <xsl:value-of select="'Nothing to process'"/>
                                </StatusMessage>
                            </ns4:TelcoOperationResponse>
                        </pfx8:Body>
                    </pfx7:ServiceReply>
                </pfx7:Request>
            </Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetGlobalData">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>232</pd:x>
        <pd:y>208</pd:y>
        <config>
            <processName>/Domains/OrderManagement/BusinessResources/Processes/TO2FGlobalData/GetGlobalData.process</processName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Parse-XML/OSMOrder/XMLMessage/*" element="pfx4:Order"/>
        </pd:coercions>
        <pd:inputBindings>
            <Input>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:MasterOrderId">
                    <MasterOrderId>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:MasterOrderId"/>
                    </MasterOrderId>
                </xsl:if>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId">
                    <OrderId>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId"/>
                    </OrderId>
                </xsl:if>
                <Key>
                    <xsl:value-of select="concat($Parse-XML/OSMOrder/XMLMessage/Order[1]/OrderPortId, &quot;-&quot;,&quot;PortIN&quot;)"/>
                </Key>
            </Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JMS Queue Sender">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>724</pd:x>
        <pd:y>41</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/GlobalCommonResources/Connections/JMS/JMS EAI Connection.sharedjmscon</ConnectionReference>
            <InDataxsdString ref="pfx5:ServiceRequest"/>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ServiceCatalogQueue">
                    <destinationQueue>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ServiceCatalogQueue"/>
                    </destinationQueue>
                </xsl:if>
                <replyToQueue>
                    <xsl:value-of select="tib:concat-sequence-format(($_globalVariables/ns3:GlobalVariables/Constants/Company,$_globalVariables/ns3:GlobalVariables/Constants/ProjectName,$_globalVariables/ns3:GlobalVariables/Domains/OrderManagement/Name,$_globalVariables/ns3:GlobalVariables/Domains/OrderManagement/OrderComponent/Name,$_globalVariables/ns3:GlobalVariables/Constants/Layer/Business,$_globalVariables/ns3:GlobalVariables/Constants/QOS/Guarantee,$_globalVariables/ns3:GlobalVariables/Constants/RequestType/Reply, 'ACK'),&quot;.&quot;)"/>
                </replyToQueue>
                <Body>
                    <pfx5:ServiceRequest>
                        <xsl:for-each select="$Start/Input/pfx:RequestEAI/pfx:Header">
                            <pfx5:Header>
                                <xsl:if test="ns1:RequestId">
                                    <ns1:RequestId>
                                        <xsl:value-of select="ns1:RequestId"/>
                                    </ns1:RequestId>
                                </xsl:if>
                                <ns1:SourceSystem>
                                    <xsl:value-of select="ns1:SourceSystem"/>
                                </ns1:SourceSystem>
                                <ns1:ReplyExpected>
                                    <xsl:value-of select="ns1:ReplyExpected"/>
                                </ns1:ReplyExpected>
                                <xsl:if test="ns1:QoS">
                                    <ns1:QoS>
                                        <xsl:value-of select="ns1:QoS"/>
                                    </ns1:QoS>
                                </xsl:if>
                                <xsl:if test="ns1:Schedule">
                                    <ns1:Schedule>
                                        <xsl:value-of select="ns1:Schedule"/>
                                    </ns1:Schedule>
                                </xsl:if>
                                <xsl:if test="ns1:CorrelationId">
                                    <ns1:CorrelationId>
                                        <xsl:value-of select="ns1:CorrelationId"/>
                                    </ns1:CorrelationId>
                                </xsl:if>
                                <xsl:if test="ns1:Priority">
                                    <ns1:Priority>
                                        <xsl:value-of select="ns1:Priority"/>
                                    </ns1:Priority>
                                </xsl:if>
                                <xsl:for-each select="ns1:Credentials">
                                    <ns1:Credentials>
                                        <ns1:ApplicationId>
                                            <xsl:value-of select="ns1:ApplicationId"/>
                                        </ns1:ApplicationId>
                                        <ns1:User>
                                            <xsl:value-of select="ns1:User"/>
                                        </ns1:User>
                                        <xsl:if test="ns1:Password">
                                            <ns1:Password>
                                                <xsl:value-of select="ns1:Password"/>
                                            </ns1:Password>
                                        </xsl:if>
                                    </ns1:Credentials>
                                </xsl:for-each>
                                <xsl:if test="ns1:ProxySystem">
                                    <ns1:ProxySystem>
                                        <xsl:value-of select="ns1:ProxySystem"/>
                                    </ns1:ProxySystem>
                                </xsl:if>
                                <xsl:if test="ns1:ForceSimulate">
                                    <ns1:ForceSimulate>
                                        <xsl:value-of select="ns1:ForceSimulate"/>
                                    </ns1:ForceSimulate>
                                </xsl:if>
                                <xsl:for-each select="ns1:Attributes">
                                    <ns1:Attributes>
                                        <xsl:for-each select="ns1:Attribute">
                                            <ns1:Attribute>
                                                <ns1:Name>
                                                    <xsl:value-of select="ns1:Name"/>
                                                </ns1:Name>
                                                <ns1:Value>
                                                    <xsl:value-of select="ns1:Value"/>
                                                </ns1:Value>
                                            </ns1:Attribute>
                                        </xsl:for-each>
                                    </ns1:Attributes>
                                </xsl:for-each>
                            </pfx5:Header>
                        </xsl:for-each>
                        <pfx5:Body>
                            <xsl:copy-of select="$Map-Request/pfx3:CreateChildOrdersRequest/pfx3:Request"/>
                        </pfx5:Body>
                    </pfx5:ServiceRequest>
                </Body>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Request">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>460</pd:x>
        <pd:y>40</pd:y>
        <config>
            <element ref="pfx3:CreateChildOrdersRequest"/>
        </config>
        <pd:inputBindings>
            <pfx3:CreateChildOrdersRequest>
                <pfx3:Request>
                    <xsl:if test="$Parse-XML/OSMOrder/MasterOrderId">
                        <pfx3:OrderParent>
                            <xsl:value-of select="$Parse-XML/OSMOrder/MasterOrderId"/>
                        </pfx3:OrderParent>
                    </xsl:if>
                    <pfx3:OrderXML>
                        <xsl:value-of select="$Create-Pre-Provisioning-Orders/xmlString"/>
                    </pfx3:OrderXML>
                    <xsl:if test="$Parse-XML/OSMOrder/CreatedBy">
                        <pfx3:CreatedBy>
                            <xsl:value-of select="$Parse-XML/OSMOrder/CreatedBy"/>
                        </pfx3:CreatedBy>
                    </xsl:if>
                    <pfx3:CreateBySystem>
                        <xsl:value-of select="'MNPPreProv'"/>
                    </pfx3:CreateBySystem>
                    <xsl:choose>
                        <xsl:when test="substring-after($Start/Input/pfx:RequestEAI/pfx:Header/ns1:Attributes/ns1:Attribute[ns1:Name = $_globalVariables/ns3:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/CorrelationID]/ns1:Value, '#') !='0'">
                            <pfx3:Resubmit>
                                <xsl:value-of select="'Y'"/>
                            </pfx3:Resubmit>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx3:Resubmit>
                                <xsl:value-of select="'N'"/>
                            </pfx3:Resubmit>
                        </xsl:otherwise>
                    </xsl:choose>
                    <pfx3:NrOrders>
                        <xsl:value-of select="count($Parse-XML-1/ListOfPortINMSISDN/PortINMSISDN[string-length(PortINTime)>0]/MSISDN) + 1"/>
                    </pfx3:NrOrders>
                </pfx3:Request>
            </pfx3:CreateChildOrdersRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>142</pd:x>
        <pd:y>209</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term ref="pfx2:OSMOrder"/>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Start/Input/pfx:RequestEAI/pfx:Body/*" element="ns:Request"/>
        </pd:coercions>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:XMLMessage/*[1]"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse-XML-1">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>350</pd:x>
        <pd:y>205</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term ref="pfx9:ListOfPortINMSISDN"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$GetGlobalData/Output/ListOfGlobalData/GlobalData [1]/Value"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="UpsertAsyncControl">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>589</pd:x>
        <pd:y>41</pd:y>
        <config>
            <processName>/GlobalCommonResources/Processes/AsyncControl/UpsertAsyncControl.process</processName>
        </config>
        <pd:inputBindings>
            <Input>
                <TargetCorrelationId>
                    <xsl:value-of select="concat($Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:MasterOrderId, '-','CreatePreProvisioningOrders')"/>
                </TargetCorrelationId>
                <MsgId>
                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns1:RequestId"/>
                </MsgId>
                <Source>
                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns1:SourceSystem"/>
                </Source>
                <Target>
                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns1:TargetSystem"/>
                </Target>
                <MessageBody>
                    <Header>
                        <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ancestor-or-self::*/namespace::node()"/>
                        <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/@*"/>
                        <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/node()"/>
                    </Header>
                </MessageBody>
            </Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Create Pre Provisioning Orders">
        <pd:type>com.tibco.plugin.xml.XMLTransformActivity</pd:type>
        <pd:resourceType>ae.activities.XMLTransformActivity</pd:resourceType>
        <pd:x>355</pd:x>
        <pd:y>56</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <engine>TibcoXML</engine>
            <stylesheet>/Domains/OrderManagement/BusinessResources/Transformations/PortINOrder.xslt</stylesheet>
        </config>
        <pd:inputBindings>
            <textInput>
                <xmlString>
                    <xsl:value-of select="tib:render-xml($Parse-XML/OSMOrder)"/>
                </xmlString>
                <parameter>
                    <name>
                        <xsl:value-of select="'OrderType'"/>
                    </name>
                    <value>
                        <xsl:value-of select="'MNPPreProvisioning'"/>
                    </value>
                    <isXMLDocument>
                        <xsl:value-of select="false()"/>
                    </isXMLDocument>
                </parameter>
                <parameter>
                    <name>
                        <xsl:value-of select="'ActionReason'"/>
                    </name>
                    <value>
                        <xsl:value-of select="$Parse-XML/OSMOrder/XMLMessage/Order[1]/ListOfRootItem/RootItem[1]/ActionReason"/>
                    </value>
                    <isXMLDocument>
                        <xsl:value-of select="false()"/>
                    </isXMLDocument>
                </parameter>
                <parameter>
                    <name>
                        <xsl:value-of select="'ActionSubReason'"/>
                    </name>
                    <value>
                        <xsl:value-of select="'MNPPortINPreProv'"/>
                    </value>
                    <isXMLDocument>
                        <xsl:value-of select="false()"/>
                    </isXMLDocument>
                </parameter>
                <parameter>
                    <name>
                        <xsl:value-of select="'ActionType'"/>
                    </name>
                    <value>
                        <xsl:value-of select="$Parse-XML/OSMOrder/XMLMessage/Order[1]/ListOfRootItem/RootItem[1]/ActionType"/>
                    </value>
                    <isXMLDocument>
                        <xsl:value-of select="false()"/>
                    </isXMLDocument>
                </parameter>
                <parameter>
                    <name>
                        <xsl:value-of select="'ListOfApprovedMSISDN'"/>
                    </name>
                    <value>
                        <xsl:value-of select="tib:concat-sequence-format($Parse-XML-1/ListOfPortINMSISDN/PortINMSISDN[string-length(PortINTime)>0]/MSISDN, '|', true())"/>
                    </value>
                    <isXMLDocument>
                        <xsl:value-of select="false()"/>
                    </isXMLDocument>
                </parameter>
                <parameter>
                    <name>
                        <xsl:value-of select="'ListOfAcctPayType'"/>
                    </name>
                    <value>
                        <xsl:value-of select="tib:concat-sequence-format($Parse-XML-1/ListOfPortINMSISDN/PortINMSISDN[string-length(PortINTime)>0]/AcctPayType, '|', true())"/>
                    </value>
                    <isXMLDocument>
                        <xsl:value-of select="false()"/>
                    </isXMLDocument>
                </parameter>
            </textInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS Queue Sender</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Request</pd:from>
        <pd:to>UpsertAsyncControl</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>UpsertAsyncControl</pd:from>
        <pd:to>JMS Queue Sender</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Close Order Component</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>GetGlobalData</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse-XML-1</pd:from>
        <pd:to>Close Order Component</pd:to>
        <pd:xpathDescription>All Numbers Rejected</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>count($Parse-XML-1/ListOfPortINMSISDN/PortINMSISDN[string-length(PortINTime)&gt;0]/MSISDN) = 0
or
$Parse-XML/OSMOrder/XMLMessage/Order/ListOfRootItem/RootItem[1]/MNPMigrationPhase = '3'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>GetGlobalData</pd:from>
        <pd:to>Parse-XML-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse-XML-1</pd:from>
        <pd:to>Create Pre Provisioning Orders</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Create Pre Provisioning Orders</pd:from>
        <pd:to>Map Request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>