<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentRequestInput/v1" xmlns:pfx="http://vodafone.com.tr/EAI/Common/RequestEAI" xmlns:ns2="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://vodafone.com.tr/EAI/Common/ResponseCodes" xmlns:ns3="http://vodafone.com.tr/EAI/Common/Header" xmlns:pfx5="http://vodafone.com.tr/ServiceCatalog/ServiceRequest" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx4="http://vodafone.com.tr/ServiceCatalog/Business/CDRManagement/ManageCDRInformation/v1" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd" xmlns:pfx2="http://vodafone.com.tr/EAI/Common/ResponseEAI" xmlns:pfx8="http://vodafone.com.tr/ServiceCatalog/Business/SubscriberManagement/ManageCUGMember/v1" xmlns:pfx7="http://www.tibco.com/schemas/OrderManagement/Domains/OrderManagement/BusinessResources/Schemas/Schema.xsd" xmlns:pfx6="http://vodafone.com.tr/ServiceCatalog/Business/CDRManagement/ManageCommunity/v1">
    <xsd:import namespace="http://vodafone.com.tr/EAI/Common/RequestEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/RequestEAI.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/EAI/Common/ResponseEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/ResponseEAI.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentRequestInput/v1" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/OrderComponent/OrderComponentRequestInput.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/ServiceRequest" schemaLocation="/Domains/ServiceCatalog/BusinessResources/Schemas/ServiceRequest.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/CDRManagement/ManageCDRInformation/v1" schemaLocation="/Domains/ServiceCatalog/Business/CDRManagement/ManageCDRInformation_v1/Schemas/ManageCDRInformation.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/CDRManagement/ManageCommunity/v1" schemaLocation="/Domains/ServiceCatalog/Business/CDRManagement/ManageCommunity_v1/Schemas/ManageCommunity.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/SubscriberManagement/ManageCUGMember/v1" schemaLocation="/Domains/ServiceCatalog/Business/SubscriberManagement/ManageCUGMember_v1/Schemas/ManageCUGMember.xsd"/>
    <pd:name>Domains/OrderManagement/Business/OrderComponent/InventoryManagement/CDRDispatcher/ManageCommunity_v1/ManageCommunity.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="Input">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:RequestEAI"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>57</pd:startX>
    <pd:startY>62</pd:startY>
    <pd:returnBindings>
        <Output>
            <pfx2:ResponseEAI>
                <pfx2:Header>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ancestor-or-self::*/namespace::node()"/>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/@*"/>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/node()"/>
                </pfx2:Header>
                <pfx2:ResponseCodes>
                    <ns4:ResponseCode>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/ErrorCodes/Success"/>
                    </ns4:ResponseCode>
                </pfx2:ResponseCodes>
            </pfx2:ResponseEAI>
        </Output>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="Output">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx2:ResponseEAI"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>757</pd:endX>
    <pd:endY>62</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://vodafone.com.tr/1407237293061</pd:targetNamespace>
    <pd:activity name="Map-Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>395</pd:x>
        <pd:y>64</pd:y>
        <config>
            <element>
                <xsd:element name="ListOfRequests">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element ref="pfx6:Request" minOccurs="0" maxOccurs="unbounded"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="rootItem" select="$Parse-XML/Order/ListOfRootItem/RootItem[ComponentType= 'MAIN' and ComponentSubType='MOBILE']"/>
            <ListOfRequests>
                <!--GROUP_CHILD-->
                <xsl:if test="$rootItem/ListOfChildItem/ChildItem[ComponentType = 'GROUP_CHILD' and Action =('New','Modified','Deleted','Resume','Suspend')]/ListOfChildItemAttribute/ChildItemAttribute/Name = 'Community ID'&#xA;or&#xA;$rootItem/ActionType = '103'&#xA;or&#xA;$rootItem/ActionType = '102'">
                    <pfx6:Request>
                        <xsl:variable name="CHILD_GROUP_COUNT" select="count($rootItem/ListOfChildItem/ChildItem[Action =('New','Modified','Deleted','Suspend','Resume') and ComponentType = 'GROUP_CHILD']/ListOfChildItemAttribute/ChildItemAttribute[Name = 'Community ID'])"/>
                        <xsl:variable name="GROUP_CHILD" select="if($CHILD_GROUP_COUNT>1)&#xA;then  $rootItem/ListOfChildItem/ChildItem[Action =('New') and ComponentType = 'GROUP_CHILD' and ListOfChildItemAttribute/ChildItemAttribute/Name = 'Community ID']&#xA;else  $rootItem/ListOfChildItem/ChildItem[Action =('New','Modified','Deleted','Existing','Suspend','Resume') and ComponentType = 'GROUP_CHILD' and ListOfChildItemAttribute/ChildItemAttribute/Name = 'Community ID']"/>
                        <xsl:variable name="GROUP_CHILD_OLD" select="if(count($rootItem/ListOfChildItem/ChildItem[Action =('New','Modified','Deleted') and ComponentType = 'GROUP_CHILD' and ListOfChildItemAttribute/ChildItemAttribute/Name = 'Community ID'])>1)&#xA;then $rootItem/ListOfChildItem/ChildItem[Action =('Deleted') and ComponentType = 'GROUP_CHILD' and ListOfChildItemAttribute/ChildItemAttribute/Name = 'Community ID']&#xA;else   $rootItem/ListOfChildItem/ChildItem[Action =('New','Modified','Deleted','Suspend','Resume') and ComponentType = 'GROUP_CHILD' and ListOfChildItemAttribute/ChildItemAttribute/Name = 'Community ID']"/>
                        <xsl:variable name="action" select="if(($GROUP_CHILD/Action = 'New' and $CHILD_GROUP_COUNT>1) or $GROUP_CHILD/Action = 'Modified' ) then 'performChangeId'&#xA;else if($GROUP_CHILD/Action = ('New','Resume') ) then 'performActivation'&#xA;else if($GROUP_CHILD/Action = ('Deleted','Suspend'))&#xA; then 'performDeactivation'&#xA;else 'changeCommunity'"/>
                        <xsl:variable name="date" select="if($GROUP_CHILD/Action = ('New','Resume')) then tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $GROUP_CHILD/StartDate)&#xA;else if($GROUP_CHILD/Action = 'Modified') then tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $GROUP_CHILD/ModifyDate)&#xA;else if(tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $GROUP_CHILD/EndDate)) then tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $GROUP_CHILD/EndDate)&#xA;else tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $rootItem/DueDate)"/>
                        <xsl:choose>
                            <xsl:when test="$rootItem/ActionType = '103'">
                                <pfx6:IMSI>
                                    <xsl:value-of select="$rootItem/IMSI"/>
                                </pfx6:IMSI>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx6:MSISDN>
                                    <xsl:value-of select="$rootItem/MSISDN"/>
                                </pfx6:MSISDN>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="$rootItem/ActionType = '102'">
                                <pfx6:OldMSISDN>
                                    <xsl:value-of select="$rootItem/ListOfRootItemAttribute/RootItemAttribute[Name = 'MSISDN']/PreviousValue"/>
                                </pfx6:OldMSISDN>
                            </xsl:when>
                            <xsl:when test="$rootItem/ActionType = '103'">
                                <pfx6:OldIMSI>
                                    <xsl:value-of select="$rootItem/PreviousIMSI"/>
                                </pfx6:OldIMSI>
                            </xsl:when>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="$rootItem/ActionType = '103'">
                                <pfx6:NumberType>
                                    <xsl:value-of select="2"/>
                                </pfx6:NumberType>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx6:NumberType>
                                    <xsl:value-of select="1"/>
                                </pfx6:NumberType>
                            </xsl:otherwise>
                        </xsl:choose>
                        <pfx6:ProcessType>
                            <xsl:value-of select="$action"/>
                        </pfx6:ProcessType>
                        <pfx6:GroupId>
                            <xsl:value-of select="$GROUP_CHILD/ListOfChildItemAttribute/ChildItemAttribute[Name='Community ID']/Value"/>
                        </pfx6:GroupId>
                        <xsl:choose>
                            <xsl:when test="$GROUP_CHILD/Action = 'Modified'">
                                <xsl:choose>
                                    <xsl:when test="exists($GROUP_CHILD/ListOfChildItemAttribute/ChildItemAttribute[Name='Community ID']/PreviousValue)">
                                        <xsl:if test="$GROUP_CHILD/ListOfChildItemAttribute/ChildItemAttribute[Name='Community ID']/PreviousValue">
                                            <pfx6:OldGroupId>
                                                <xsl:value-of select="$GROUP_CHILD/ListOfChildItemAttribute/ChildItemAttribute[Name='Community ID']/PreviousValue"/>
                                            </pfx6:OldGroupId>
                                        </xsl:if>
                                    </xsl:when>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test="$CHILD_GROUP_COUNT >1">
                                <xsl:choose>
                                    <xsl:when test="exists($GROUP_CHILD_OLD/ListOfChildItemAttribute/ChildItemAttribute[Name='Community ID']/PreviousValue)">
                                        <pfx6:OldGroupId>
                                            <xsl:value-of select="$GROUP_CHILD_OLD/ListOfChildItemAttribute/ChildItemAttribute[Name='Community ID']/PreviousValue"/>
                                        </pfx6:OldGroupId>
                                    </xsl:when>
                                </xsl:choose>
                            </xsl:when>
                        </xsl:choose>
                        <xsl:if test="string-length($date)>0">
                            <pfx6:ActivationDate>
                                <xsl:value-of select="$date"/>
                            </pfx6:ActivationDate>
                        </xsl:if>
                        <xsl:if test="string-length($date)>0">
                            <pfx6:InactivationDate>
                                <xsl:value-of select="$date"/>
                            </pfx6:InactivationDate>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/Order/OrderOMSourceSystem">
                            <pfx6:SourceSystem>
                                <xsl:value-of select="$Parse-XML/Order/OrderOMSourceSystem"/>
                            </pfx6:SourceSystem>
                        </xsl:if>
                    </pfx6:Request>
                </xsl:if>
                <xsl:if test="$rootItem/ListOfChildItem/ChildItem[ComponentType = 'GROUP_CHILD' and Action =('New','Modified','Deleted','Resume','Suspend')]/ListOfChildItemAttribute/ChildItemAttribute/Name = 'Group ID'&#xA;or&#xA;$rootItem/ActionType = '103'&#xA;or&#xA;$rootItem/ActionType = '102'">
                    <xsl:for-each select="$rootItem/ListOfChildItem/ChildItem[ComponentType = 'GROUP_CHILD' and Action =('New','Modified','Deleted','Resume','Suspend') and ListOfChildItemAttribute/ChildItemAttribute/Name = 'Group ID']">
                        <pfx6:Request>
                            <xsl:variable name="date" select="if(current()/Action = ('New','Resume')) then tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, current()/StartDate)&#xA;else if(current()/Action = 'Modified') then tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, current()/ModifyDate)&#xA;else if(tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, current()/EndDate)) then tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, current()/EndDate)&#xA;else tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $rootItem/DueDate)"/>
                            <xsl:choose>
                                <xsl:when test="$rootItem/ActionType = '103'">
                                    <pfx6:IMSI>
                                        <xsl:value-of select="$rootItem/IMSI"/>
                                    </pfx6:IMSI>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx6:MSISDN>
                                        <xsl:value-of select="$rootItem/MSISDN"/>
                                    </pfx6:MSISDN>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                                <xsl:when test="$rootItem/ActionType = '102'">
                                    <pfx6:OldMSISDN>
                                        <xsl:value-of select="$rootItem/ListOfRootItemAttribute/RootItemAttribute[Name = 'MSISDN']/PreviousValue"/>
                                    </pfx6:OldMSISDN>
                                </xsl:when>
                                <xsl:when test="$rootItem/ActionType = '103'">
                                    <pfx6:OldIMSI>
                                        <xsl:value-of select="$rootItem/PreviousIMSI"/>
                                    </pfx6:OldIMSI>
                                </xsl:when>
                            </xsl:choose>
                            <xsl:choose>
                                <xsl:when test="$rootItem/ActionType = '103'">
                                    <pfx6:NumberType>
                                        <xsl:value-of select="2"/>
                                    </pfx6:NumberType>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx6:NumberType>
                                        <xsl:value-of select="1"/>
                                    </pfx6:NumberType>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                                <xsl:when test="current()/Action = ('New','Resume')">
                                    <pfx6:ProcessType>
                                        <xsl:value-of select="'performActivation'"/>
                                    </pfx6:ProcessType>
                                </xsl:when>
                                <xsl:when test="current()/Action = ('Delete','Suspend')">
                                    <pfx6:ProcessType>
                                        <xsl:value-of select="'performDeactivation'"/>
                                    </pfx6:ProcessType>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx6:ProcessType>
                                        <xsl:value-of select="'performChangeId'"/>
                                    </pfx6:ProcessType>
                                </xsl:otherwise>
                            </xsl:choose>
                            <pfx6:GroupId>
                                <xsl:value-of select="current()/ListOfChildItemAttribute/ChildItemAttribute[Name = 'Group ID']/Value"/>
                            </pfx6:GroupId>
                            <xsl:choose>
                                <xsl:when test="current()/Action = 'Modified'">
                                    <xsl:if test="current()/ListOfChildItemAttribute/ChildItemAttribute[Name='Group ID']/PreviousValue">
                                        <pfx6:OldGroupId>
                                            <xsl:value-of select="current()/ListOfChildItemAttribute/ChildItemAttribute[Name='Group ID']/PreviousValue"/>
                                        </pfx6:OldGroupId>
                                    </xsl:if>
                                </xsl:when>
                            </xsl:choose>
                            <xsl:if test="string-length($date)>0">
                                <pfx6:ActivationDate>
                                    <xsl:value-of select="$date"/>
                                </pfx6:ActivationDate>
                            </xsl:if>
                            <xsl:if test="string-length($date)>0">
                                <pfx6:InactivationDate>
                                    <xsl:value-of select="$date"/>
                                </pfx6:InactivationDate>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/Order/OrderOMSourceSystem">
                                <pfx6:SourceSystem>
                                    <xsl:value-of select="$Parse-XML/Order/OrderOMSourceSystem"/>
                                </pfx6:SourceSystem>
                            </xsl:if>
                        </pfx6:Request>
                    </xsl:for-each>
                </xsl:if>
                <!--COMMUNITIES-->
                <xsl:for-each select="$rootItem/ListOfChildItem/ChildItem[Action= ('New', 'Deleted', 'Modified','Suspend','Resume') or (Action='Existing' and $rootItem/ActionType = ('103','102')) ]/ListOfKeyFeature/KeyFeature[Feature = ('Community','OptionalCommunity','ParentOfOptionalCommunity')]">
                    <pfx6:Request>
                        <xsl:variable name="action" select="if(../../Action = ('New','Resume')) then 'performActivation'&#xA;else if(../../Action = ('Deleted','Suspend')) then 'performDeactivation'&#xA;else 'changeCommunity'"/>
                        <xsl:variable name="date" select="if(../../Action = ('New','Resume')) then tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,../../StartDate)&#xA;else if(../../Action = 'Modified') then tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, ../../ModifyDate)&#xA;else if(tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, ../../EndDate)) then tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,../../EndDate)&#xA;else tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, ../../../../DueDate)"/>
                        <xsl:choose>
                            <xsl:when test="$rootItem/ActionType = '103'">
                                <pfx6:IMSI>
                                    <xsl:value-of select="../../../../IMSI"/>
                                </pfx6:IMSI>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx6:MSISDN>
                                    <xsl:value-of select="../../../../MSISDN"/>
                                </pfx6:MSISDN>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="$rootItem/ActionType = '102'">
                                <pfx6:OldMSISDN>
                                    <xsl:value-of select="$rootItem/ListOfRootItemAttribute/RootItemAttribute[Name = 'MSISDN']/PreviousValue"/>
                                </pfx6:OldMSISDN>
                            </xsl:when>
                            <xsl:when test="$rootItem/ActionType = '103'">
                                <pfx6:OldIMSI>
                                    <xsl:value-of select="../../../../PreviousIMSI"/>
                                </pfx6:OldIMSI>
                            </xsl:when>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="$rootItem/ActionType = '103'">
                                <pfx6:NumberType>
                                    <xsl:value-of select="2"/>
                                </pfx6:NumberType>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx6:NumberType>
                                    <xsl:value-of select="1"/>
                                </pfx6:NumberType>
                            </xsl:otherwise>
                        </xsl:choose>
                        <pfx6:ProcessType>
                            <xsl:value-of select="$action"/>
                        </pfx6:ProcessType>
                        <pfx6:GroupId>
                            <xsl:value-of select="current()/FeatureValue"/>
                        </pfx6:GroupId>
                        <xsl:if test="string-length($date)>0">
                            <pfx6:ActivationDate>
                                <xsl:value-of select="$date"/>
                            </pfx6:ActivationDate>
                        </xsl:if>
                        <xsl:if test="string-length($date)>0">
                            <pfx6:InactivationDate>
                                <xsl:value-of select="$date"/>
                            </pfx6:InactivationDate>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/Order/OrderOMSourceSystem">
                            <pfx6:SourceSystem>
                                <xsl:value-of select="$Parse-XML/Order/OrderOMSourceSystem"/>
                            </pfx6:SourceSystem>
                        </xsl:if>
                    </pfx6:Request>
                </xsl:for-each>
            </ListOfRequests>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="OrderComponentIterator">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>578</pd:x>
        <pd:y>62</pd:y>
        <config>
            <processName>/Domains/OrderManagement/BusinessResources/Processes/OrderComponent/OrderComponentIterator.process</processName>
        </config>
        <pd:inputBindings>
            <Input>
                <RequestDestination>
                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ServiceCatalogQueue"/>
                </RequestDestination>
                <xsl:copy-of select="$Map-Data/ListOfRequests"/>
                <xsl:copy-of select="$Start/Input/pfx:RequestEAI"/>
            </Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>209</pd:x>
        <pd:y>65</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term ref="pfx3:Order"/>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Start/Input/pfx:RequestEAI/pfx:Body/*" element="ns:Request"/>
        </pd:coercions>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:XMLMessage/*[1]"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>OrderComponentIterator</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>Map-Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Data</pd:from>
        <pd:to>OrderComponentIterator</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>