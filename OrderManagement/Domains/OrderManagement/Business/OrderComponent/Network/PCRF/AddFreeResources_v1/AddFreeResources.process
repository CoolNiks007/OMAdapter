<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns2="http://www.tibco.com/pe/DeployedVarsType" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns1="http://vodafone.com.tr/EAI/Common/Header" xmlns:ns="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentRequestInput/v1" xmlns:ns3="http://vodafone.com.tr/EAI/Common/ResponseCodes" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx5="http://vodafone.com.tr/ServiceCatalog/Business/ResourceManagement/InsertFreeResources/v1" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx4="http://vodafone.com.tr/EAI/Common/ResponseEAI" xmlns:pfx3="http://vodafone.com.tr/ServiceCatalog/ServiceRequest" xmlns:pfx2="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd" xmlns:ns12="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx="http://vodafone.com.tr/EAI/Common/RequestEAI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/ServiceRequest" schemaLocation="/Domains/ServiceCatalog/BusinessResources/Schemas/ServiceRequest.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentRequestInput/v1" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/OrderComponent/OrderComponentRequestInput.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/EAI/Common/RequestEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/RequestEAI.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/EAI/Common/ResponseEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/ResponseEAI.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/ResourceManagement/InsertFreeResources/v1" schemaLocation="/Domains/ServiceCatalog/Business/ResourceManagement/InsertFreeResources_v1/Schemas/InsertFreeResources.xsd"/>
    <pd:name>Domains/OrderManagement/Business/OrderComponent/Network/PCRF/AddFreeResources_v1/AddFreeResources.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="Input">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:RequestEAI"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>27</pd:startX>
    <pd:startY>135</pd:startY>
    <pd:returnBindings>
        <Output>
            <pfx4:ResponseEAI>
                <xsl:for-each select="$Start/Input/pfx:RequestEAI/pfx:Header">
                    <pfx4:Header>
                        <xsl:if test="ns1:RequestId">
                            <ns1:RequestId>
                                <xsl:value-of select="ns1:RequestId"/>
                            </ns1:RequestId>
                        </xsl:if>
                        <ns1:SourceSystem>
                            <xsl:value-of select="ns1:SourceSystem"/>
                        </ns1:SourceSystem>
                        <ns1:ReplyExpected>
                            <xsl:value-of select="ns1:ReplyExpected"/>
                        </ns1:ReplyExpected>
                        <xsl:if test="ns1:QoS">
                            <ns1:QoS>
                                <xsl:value-of select="ns1:QoS"/>
                            </ns1:QoS>
                        </xsl:if>
                        <xsl:if test="ns1:Schedule">
                            <ns1:Schedule>
                                <xsl:value-of select="ns1:Schedule"/>
                            </ns1:Schedule>
                        </xsl:if>
                        <xsl:if test="ns1:CorrelationId">
                            <ns1:CorrelationId>
                                <xsl:value-of select="ns1:CorrelationId"/>
                            </ns1:CorrelationId>
                        </xsl:if>
                        <xsl:if test="ns1:Priority">
                            <ns1:Priority>
                                <xsl:value-of select="ns1:Priority"/>
                            </ns1:Priority>
                        </xsl:if>
                        <xsl:for-each select="ns1:Credentials">
                            <ns1:Credentials>
                                <ns1:ApplicationId>
                                    <xsl:value-of select="ns1:ApplicationId"/>
                                </ns1:ApplicationId>
                                <ns1:User>
                                    <xsl:value-of select="ns1:User"/>
                                </ns1:User>
                                <xsl:if test="ns1:Password">
                                    <ns1:Password>
                                        <xsl:value-of select="ns1:Password"/>
                                    </ns1:Password>
                                </xsl:if>
                            </ns1:Credentials>
                        </xsl:for-each>
                        <xsl:if test="ns1:ProxySystem">
                            <ns1:ProxySystem>
                                <xsl:value-of select="ns1:ProxySystem"/>
                            </ns1:ProxySystem>
                        </xsl:if>
                        <xsl:if test="ns1:ForceSimulate">
                            <ns1:ForceSimulate>
                                <xsl:value-of select="ns1:ForceSimulate"/>
                            </ns1:ForceSimulate>
                        </xsl:if>
                        <xsl:for-each select="ns1:Attributes">
                            <ns1:Attributes>
                                <xsl:for-each select="ns1:Attribute">
                                    <ns1:Attribute>
                                        <ns1:Name>
                                            <xsl:value-of select="ns1:Name"/>
                                        </ns1:Name>
                                        <ns1:Value>
                                            <xsl:value-of select="ns1:Value"/>
                                        </ns1:Value>
                                    </ns1:Attribute>
                                </xsl:for-each>
                            </ns1:Attributes>
                        </xsl:for-each>
                        <xsl:for-each select="ns1:BusinessInterface">
                            <ns1:BusinessInterface>
                                <xsl:if test="ns1:Operation">
                                    <ns1:Operation>
                                        <xsl:value-of select="ns1:Operation"/>
                                    </ns1:Operation>
                                </xsl:if>
                                <xsl:if test="ns1:Version">
                                    <ns1:Version>
                                        <xsl:value-of select="ns1:Version"/>
                                    </ns1:Version>
                                </xsl:if>
                            </ns1:BusinessInterface>
                        </xsl:for-each>
                        <xsl:for-each select="ns1:TechnicalInterface">
                            <ns1:TechnicalInterface>
                                <xsl:if test="ns1:Domain">
                                    <ns1:Domain>
                                        <xsl:value-of select="ns1:Domain"/>
                                    </ns1:Domain>
                                </xsl:if>
                                <xsl:if test="ns1:Interface">
                                    <ns1:Interface>
                                        <xsl:value-of select="ns1:Interface"/>
                                    </ns1:Interface>
                                </xsl:if>
                                <xsl:if test="ns1:Version">
                                    <ns1:Version>
                                        <xsl:value-of select="ns1:Version"/>
                                    </ns1:Version>
                                </xsl:if>
                                <xsl:if test="ns1:MethodCall">
                                    <ns1:MethodCall>
                                        <xsl:value-of select="ns1:MethodCall"/>
                                    </ns1:MethodCall>
                                </xsl:if>
                            </ns1:TechnicalInterface>
                        </xsl:for-each>
                        <xsl:if test="ns1:TargetSystem">
                            <ns1:TargetSystem>
                                <xsl:value-of select="ns1:TargetSystem"/>
                            </ns1:TargetSystem>
                        </xsl:if>
                        <xsl:if test="ns1:CreationTimestamp">
                            <ns1:CreationTimestamp>
                                <xsl:value-of select="ns1:CreationTimestamp"/>
                            </ns1:CreationTimestamp>
                        </xsl:if>
                        <xsl:if test="ns1:TimeOut">
                            <ns1:TimeOut>
                                <xsl:value-of select="ns1:TimeOut"/>
                            </ns1:TimeOut>
                        </xsl:if>
                        <xsl:if test="ns1:Tries">
                            <ns1:Tries>
                                <xsl:value-of select="ns1:Tries"/>
                            </ns1:Tries>
                        </xsl:if>
                        <xsl:if test="ns1:MaxTries">
                            <ns1:MaxTries>
                                <xsl:value-of select="ns1:MaxTries"/>
                            </ns1:MaxTries>
                        </xsl:if>
                        <xsl:if test="ns1:Repub">
                            <ns1:Repub>
                                <xsl:value-of select="ns1:Repub"/>
                            </ns1:Repub>
                        </xsl:if>
                        <xsl:if test="ns1:RepubTime">
                            <ns1:RepubTime>
                                <xsl:value-of select="ns1:RepubTime"/>
                            </ns1:RepubTime>
                        </xsl:if>
                        <xsl:for-each select="ns1:History">
                            <ns1:History>
                                <xsl:for-each select="ns1:Flow">
                                    <ns1:Flow>
                                        <xsl:if test="ns1:Owner">
                                            <ns1:Owner>
                                                <xsl:value-of select="ns1:Owner"/>
                                            </ns1:Owner>
                                        </xsl:if>
                                        <xsl:if test="ns1:OwnerId">
                                            <ns1:OwnerId>
                                                <xsl:value-of select="ns1:OwnerId"/>
                                            </ns1:OwnerId>
                                        </xsl:if>
                                        <xsl:if test="ns1:ProcessId">
                                            <ns1:ProcessId>
                                                <xsl:value-of select="ns1:ProcessId"/>
                                            </ns1:ProcessId>
                                        </xsl:if>
                                        <xsl:for-each select="ns1:BusinessInterface">
                                            <ns1:BusinessInterface>
                                                <xsl:if test="ns1:Operation">
                                                    <ns1:Operation>
                                                        <xsl:value-of select="ns1:Operation"/>
                                                    </ns1:Operation>
                                                </xsl:if>
                                                <xsl:if test="ns1:Version">
                                                    <ns1:Version>
                                                        <xsl:value-of select="ns1:Version"/>
                                                    </ns1:Version>
                                                </xsl:if>
                                            </ns1:BusinessInterface>
                                        </xsl:for-each>
                                        <xsl:for-each select="ns1:TechnicalInterface">
                                            <ns1:TechnicalInterface>
                                                <xsl:if test="ns1:Domain">
                                                    <ns1:Domain>
                                                        <xsl:value-of select="ns1:Domain"/>
                                                    </ns1:Domain>
                                                </xsl:if>
                                                <xsl:if test="ns1:Interface">
                                                    <ns1:Interface>
                                                        <xsl:value-of select="ns1:Interface"/>
                                                    </ns1:Interface>
                                                </xsl:if>
                                                <xsl:if test="ns1:Version">
                                                    <ns1:Version>
                                                        <xsl:value-of select="ns1:Version"/>
                                                    </ns1:Version>
                                                </xsl:if>
                                                <xsl:if test="ns1:MethodCall">
                                                    <ns1:MethodCall>
                                                        <xsl:value-of select="ns1:MethodCall"/>
                                                    </ns1:MethodCall>
                                                </xsl:if>
                                            </ns1:TechnicalInterface>
                                        </xsl:for-each>
                                        <xsl:if test="ns1:Timestamp">
                                            <ns1:Timestamp>
                                                <xsl:value-of select="ns1:Timestamp"/>
                                            </ns1:Timestamp>
                                        </xsl:if>
                                    </ns1:Flow>
                                </xsl:for-each>
                                <xsl:if test="ns1:Step">
                                    <ns1:Step>
                                        <xsl:value-of select="ns1:Step"/>
                                    </ns1:Step>
                                </xsl:if>
                                <xsl:if test="ns1:NumSteps">
                                    <ns1:NumSteps>
                                        <xsl:value-of select="ns1:NumSteps"/>
                                    </ns1:NumSteps>
                                </xsl:if>
                            </ns1:History>
                        </xsl:for-each>
                        <xsl:for-each select="ns1:Transport">
                            <ns1:Transport>
                                <xsl:if test="ns1:ReplyTo">
                                    <ns1:ReplyTo>
                                        <xsl:value-of select="ns1:ReplyTo"/>
                                    </ns1:ReplyTo>
                                </xsl:if>
                                <xsl:if test="ns1:Destination">
                                    <ns1:Destination>
                                        <xsl:value-of select="ns1:Destination"/>
                                    </ns1:Destination>
                                </xsl:if>
                                <xsl:if test="ns1:MessageId">
                                    <ns1:MessageId>
                                        <xsl:value-of select="ns1:MessageId"/>
                                    </ns1:MessageId>
                                </xsl:if>
                                <xsl:if test="ns1:SOAPAction">
                                    <ns1:SOAPAction>
                                        <xsl:value-of select="ns1:SOAPAction"/>
                                    </ns1:SOAPAction>
                                </xsl:if>
                            </ns1:Transport>
                        </xsl:for-each>
                    </pfx4:Header>
                </xsl:for-each>
                <pfx4:ResponseCodes>
                    <ns3:ResponseCode>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/ErrorCodes/Success"/>
                    </ns3:ResponseCode>
                </pfx4:ResponseCodes>
            </pfx4:ResponseEAI>
        </Output>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="Output">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx4:ResponseEAI"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>735</pd:endX>
    <pd:endY>135</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://vodafone.com.tr/1426243304795</pd:targetNamespace>
    <pd:activity name="JMS Queue Sender">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>563</pd:x>
        <pd:y>135</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/GlobalCommonResources/Connections/JMS/JMS EAI Connection.sharedjmscon</ConnectionReference>
            <InDataxsdString ref="pfx3:ServiceRequest"/>
        </config>
        <pd:inputBindings>
            <ns12:ActivityInput>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ServiceCatalogQueue">
                    <destinationQueue>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ServiceCatalogQueue"/>
                    </destinationQueue>
                </xsl:if>
                <replyToQueue>
                    <xsl:value-of select="tib:concat-sequence-format(($_globalVariables/ns2:GlobalVariables/Constants/Company,$_globalVariables/ns2:GlobalVariables/Constants/ProjectName,$_globalVariables/ns2:GlobalVariables/Domains/OrderManagement/Name,$_globalVariables/ns2:GlobalVariables/Domains/OrderManagement/OrderComponent/Name,$_globalVariables/ns2:GlobalVariables/Constants/Layer/Business,$_globalVariables/ns2:GlobalVariables/Constants/QOS/Guarantee,$_globalVariables/ns2:GlobalVariables/Constants/RequestType/Reply),&quot;.&quot;)"/>
                </replyToQueue>
                <JMSPriority>
                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns1:Priority"/>
                </JMSPriority>
                <Body>
                    <pfx3:ServiceRequest>
                        <xsl:for-each select="$Start/Input/pfx:RequestEAI/pfx:Header">
                            <pfx3:Header>
                                <xsl:if test="ns1:RequestId">
                                    <ns1:RequestId>
                                        <xsl:value-of select="ns1:RequestId"/>
                                    </ns1:RequestId>
                                </xsl:if>
                                <ns1:SourceSystem>
                                    <xsl:value-of select="ns1:SourceSystem"/>
                                </ns1:SourceSystem>
                                <ns1:ReplyExpected>
                                    <xsl:value-of select="ns1:ReplyExpected"/>
                                </ns1:ReplyExpected>
                                <xsl:if test="ns1:QoS">
                                    <ns1:QoS>
                                        <xsl:value-of select="ns1:QoS"/>
                                    </ns1:QoS>
                                </xsl:if>
                                <xsl:if test="ns1:Schedule">
                                    <ns1:Schedule>
                                        <xsl:value-of select="ns1:Schedule"/>
                                    </ns1:Schedule>
                                </xsl:if>
                                <xsl:if test="ns1:CorrelationId">
                                    <ns1:CorrelationId>
                                        <xsl:value-of select="ns1:CorrelationId"/>
                                    </ns1:CorrelationId>
                                </xsl:if>
                                <xsl:if test="ns1:Priority">
                                    <ns1:Priority>
                                        <xsl:value-of select="ns1:Priority"/>
                                    </ns1:Priority>
                                </xsl:if>
                                <xsl:for-each select="ns1:Credentials">
                                    <ns1:Credentials>
                                        <ns1:ApplicationId>
                                            <xsl:value-of select="ns1:ApplicationId"/>
                                        </ns1:ApplicationId>
                                        <ns1:User>
                                            <xsl:value-of select="ns1:User"/>
                                        </ns1:User>
                                        <xsl:if test="ns1:Password">
                                            <ns1:Password>
                                                <xsl:value-of select="ns1:Password"/>
                                            </ns1:Password>
                                        </xsl:if>
                                    </ns1:Credentials>
                                </xsl:for-each>
                                <xsl:if test="ns1:ProxySystem">
                                    <ns1:ProxySystem>
                                        <xsl:value-of select="ns1:ProxySystem"/>
                                    </ns1:ProxySystem>
                                </xsl:if>
                                <xsl:if test="ns1:ForceSimulate">
                                    <ns1:ForceSimulate>
                                        <xsl:value-of select="ns1:ForceSimulate"/>
                                    </ns1:ForceSimulate>
                                </xsl:if>
                                <xsl:for-each select="ns1:Attributes">
                                    <ns1:Attributes>
                                        <xsl:for-each select="ns1:Attribute">
                                            <ns1:Attribute>
                                                <ns1:Name>
                                                    <xsl:value-of select="ns1:Name"/>
                                                </ns1:Name>
                                                <ns1:Value>
                                                    <xsl:value-of select="ns1:Value"/>
                                                </ns1:Value>
                                            </ns1:Attribute>
                                        </xsl:for-each>
                                    </ns1:Attributes>
                                </xsl:for-each>
                            </pfx3:Header>
                        </xsl:for-each>
                        <pfx3:Body>
                            <xsl:copy-of select="$Map-Data/pfx5:InsertFreeResourcesRequest/pfx5:Request"/>
                        </pfx3:Body>
                    </pfx3:ServiceRequest>
                </Body>
            </ns12:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>371</pd:x>
        <pd:y>135</pd:y>
        <config>
            <element ref="pfx5:InsertFreeResourcesRequest"/>
        </config>
        <pd:inputBindings>
            <pfx5:InsertFreeResourcesRequest>
                <pfx5:Request>
                    <pfx5:CustomerType>
                        <xsl:value-of select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/CustAcctType"/>
                    </pfx5:CustomerType>
                    <pfx5:MSISDN>
                        <xsl:value-of select="$Parse-XML/Order/ListOfRootItem/RootItem[1]/MSISDN"/>
                    </pfx5:MSISDN>
                    <pfx5:AccountType>
                        <xsl:value-of select="$Parse-XML/Order/ListOfRootItem/RootItem[1]/ProductCatalogId"/>
                    </pfx5:AccountType>
                    <pfx5:StartDate>
                        <xsl:value-of select="$Parse-XML/Order/ListOfRootItem/RootItem[1]/StartDate"/>
                    </pfx5:StartDate>
                    <pfx5:EndDate>
                        <xsl:value-of select="$Parse-XML/Order/ListOfRootItem/RootItem[1]/EndDate"/>
                    </pfx5:EndDate>
                    <pfx5:InitialTotalVolume>
                        <xsl:value-of select="$Parse-XML/Order/ListOfRootItem/RootItem/ListOfRootItemAttribute/RootItemAttribute[Name= 'Amount']/Value"/>
                    </pfx5:InitialTotalVolume>
                </pfx5:Request>
            </pfx5:InsertFreeResourcesRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>206</pd:x>
        <pd:y>135</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term ref="pfx2:Order"/>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Start/Input/pfx:RequestEAI/pfx:Body/*" element="ns:Request"/>
        </pd:coercions>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:XMLMessage/*[1]"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>JMS Queue Sender</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS Queue Sender</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>