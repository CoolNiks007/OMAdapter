<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentRequestInput/v1" xmlns:ns12="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx="http://vodafone.com.tr/EAI/Common/ResponseEAI" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://vodafone.com.tr/EAI/Common/Header" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns3="http://vodafone.com.tr/EAI/Common/ResponseCodes" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx5="http://vodafone.com.tr/EAI/Common/RequestEAI" xmlns:pfx4="http://vodafone.com.tr/ServiceCatalog/Business/ResourceManagement/RemoveFreeResources/v1" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://vodafone.com.tr/ServiceCatalog/ServiceRequest" xmlns:pfx2="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pfx6="http://vodafone.com.tr/ServiceCatalog/Business/ResourceManagement/DeleteFreeResources/v1">
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/ServiceRequest" schemaLocation="/Domains/ServiceCatalog/BusinessResources/Schemas/ServiceRequest.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentRequestInput/v1" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/OrderComponent/OrderComponentRequestInput.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/EAI/Common/ResponseEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/ResponseEAI.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/ResourceManagement/RemoveFreeResources/v1" schemaLocation="/Domains/ServiceCatalog/Business/ResourceManagement/RemoveFreeResources_v1/Schemas/RemoveFreeResources.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/EAI/Common/RequestEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/RequestEAI.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/ResourceManagement/DeleteFreeResources/v1" schemaLocation="/Domains/ServiceCatalog/Business/ResourceManagement/DeleteFreeResources_v1/Schemas/DeleteFreeResources.xsd"/>
    <pd:name>Domains/OrderManagement/Business/OrderComponent/Network/PCRF/DeleteFreeResources_v1/DeleteFreeResources.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="Input">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx5:RequestEAI"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>27</pd:startX>
    <pd:startY>138</pd:startY>
    <pd:returnBindings>
        <Output>
            <pfx:ResponseEAI>
                <xsl:for-each select="$Start/Input/pfx5:RequestEAI/pfx5:Header">
                    <pfx:Header>
                        <xsl:if test="ns2:RequestId">
                            <ns2:RequestId>
                                <xsl:value-of select="ns2:RequestId"/>
                            </ns2:RequestId>
                        </xsl:if>
                        <ns2:SourceSystem>
                            <xsl:value-of select="ns2:SourceSystem"/>
                        </ns2:SourceSystem>
                        <ns2:ReplyExpected>
                            <xsl:value-of select="ns2:ReplyExpected"/>
                        </ns2:ReplyExpected>
                        <xsl:if test="ns2:QoS">
                            <ns2:QoS>
                                <xsl:value-of select="ns2:QoS"/>
                            </ns2:QoS>
                        </xsl:if>
                        <xsl:if test="ns2:Schedule">
                            <ns2:Schedule>
                                <xsl:value-of select="ns2:Schedule"/>
                            </ns2:Schedule>
                        </xsl:if>
                        <xsl:if test="ns2:CorrelationId">
                            <ns2:CorrelationId>
                                <xsl:value-of select="ns2:CorrelationId"/>
                            </ns2:CorrelationId>
                        </xsl:if>
                        <xsl:if test="ns2:Priority">
                            <ns2:Priority>
                                <xsl:value-of select="ns2:Priority"/>
                            </ns2:Priority>
                        </xsl:if>
                        <xsl:for-each select="ns2:Credentials">
                            <ns2:Credentials>
                                <ns2:ApplicationId>
                                    <xsl:value-of select="ns2:ApplicationId"/>
                                </ns2:ApplicationId>
                                <ns2:User>
                                    <xsl:value-of select="ns2:User"/>
                                </ns2:User>
                                <xsl:if test="ns2:Password">
                                    <ns2:Password>
                                        <xsl:value-of select="ns2:Password"/>
                                    </ns2:Password>
                                </xsl:if>
                            </ns2:Credentials>
                        </xsl:for-each>
                        <xsl:if test="ns2:ProxySystem">
                            <ns2:ProxySystem>
                                <xsl:value-of select="ns2:ProxySystem"/>
                            </ns2:ProxySystem>
                        </xsl:if>
                        <xsl:if test="ns2:ForceSimulate">
                            <ns2:ForceSimulate>
                                <xsl:value-of select="ns2:ForceSimulate"/>
                            </ns2:ForceSimulate>
                        </xsl:if>
                        <xsl:for-each select="ns2:Attributes">
                            <ns2:Attributes>
                                <xsl:for-each select="ns2:Attribute">
                                    <ns2:Attribute>
                                        <ns2:Name>
                                            <xsl:value-of select="ns2:Name"/>
                                        </ns2:Name>
                                        <ns2:Value>
                                            <xsl:value-of select="ns2:Value"/>
                                        </ns2:Value>
                                    </ns2:Attribute>
                                </xsl:for-each>
                            </ns2:Attributes>
                        </xsl:for-each>
                        <xsl:for-each select="ns2:BusinessInterface">
                            <ns2:BusinessInterface>
                                <xsl:if test="ns2:Operation">
                                    <ns2:Operation>
                                        <xsl:value-of select="ns2:Operation"/>
                                    </ns2:Operation>
                                </xsl:if>
                                <xsl:if test="ns2:Version">
                                    <ns2:Version>
                                        <xsl:value-of select="ns2:Version"/>
                                    </ns2:Version>
                                </xsl:if>
                            </ns2:BusinessInterface>
                        </xsl:for-each>
                        <xsl:for-each select="ns2:TechnicalInterface">
                            <ns2:TechnicalInterface>
                                <xsl:if test="ns2:Domain">
                                    <ns2:Domain>
                                        <xsl:value-of select="ns2:Domain"/>
                                    </ns2:Domain>
                                </xsl:if>
                                <xsl:if test="ns2:Interface">
                                    <ns2:Interface>
                                        <xsl:value-of select="ns2:Interface"/>
                                    </ns2:Interface>
                                </xsl:if>
                                <xsl:if test="ns2:Version">
                                    <ns2:Version>
                                        <xsl:value-of select="ns2:Version"/>
                                    </ns2:Version>
                                </xsl:if>
                                <xsl:if test="ns2:MethodCall">
                                    <ns2:MethodCall>
                                        <xsl:value-of select="ns2:MethodCall"/>
                                    </ns2:MethodCall>
                                </xsl:if>
                            </ns2:TechnicalInterface>
                        </xsl:for-each>
                        <xsl:if test="ns2:TargetSystem">
                            <ns2:TargetSystem>
                                <xsl:value-of select="ns2:TargetSystem"/>
                            </ns2:TargetSystem>
                        </xsl:if>
                        <xsl:if test="ns2:CreationTimestamp">
                            <ns2:CreationTimestamp>
                                <xsl:value-of select="ns2:CreationTimestamp"/>
                            </ns2:CreationTimestamp>
                        </xsl:if>
                        <xsl:if test="ns2:TimeOut">
                            <ns2:TimeOut>
                                <xsl:value-of select="ns2:TimeOut"/>
                            </ns2:TimeOut>
                        </xsl:if>
                        <xsl:if test="ns2:Tries">
                            <ns2:Tries>
                                <xsl:value-of select="ns2:Tries"/>
                            </ns2:Tries>
                        </xsl:if>
                        <xsl:if test="ns2:MaxTries">
                            <ns2:MaxTries>
                                <xsl:value-of select="ns2:MaxTries"/>
                            </ns2:MaxTries>
                        </xsl:if>
                        <xsl:if test="ns2:Repub">
                            <ns2:Repub>
                                <xsl:value-of select="ns2:Repub"/>
                            </ns2:Repub>
                        </xsl:if>
                        <xsl:if test="ns2:RepubTime">
                            <ns2:RepubTime>
                                <xsl:value-of select="ns2:RepubTime"/>
                            </ns2:RepubTime>
                        </xsl:if>
                        <xsl:for-each select="ns2:History">
                            <ns2:History>
                                <xsl:for-each select="ns2:Flow">
                                    <ns2:Flow>
                                        <xsl:if test="ns2:Owner">
                                            <ns2:Owner>
                                                <xsl:value-of select="ns2:Owner"/>
                                            </ns2:Owner>
                                        </xsl:if>
                                        <xsl:if test="ns2:OwnerId">
                                            <ns2:OwnerId>
                                                <xsl:value-of select="ns2:OwnerId"/>
                                            </ns2:OwnerId>
                                        </xsl:if>
                                        <xsl:if test="ns2:ProcessId">
                                            <ns2:ProcessId>
                                                <xsl:value-of select="ns2:ProcessId"/>
                                            </ns2:ProcessId>
                                        </xsl:if>
                                        <xsl:for-each select="ns2:BusinessInterface">
                                            <ns2:BusinessInterface>
                                                <xsl:if test="ns2:Operation">
                                                    <ns2:Operation>
                                                        <xsl:value-of select="ns2:Operation"/>
                                                    </ns2:Operation>
                                                </xsl:if>
                                                <xsl:if test="ns2:Version">
                                                    <ns2:Version>
                                                        <xsl:value-of select="ns2:Version"/>
                                                    </ns2:Version>
                                                </xsl:if>
                                            </ns2:BusinessInterface>
                                        </xsl:for-each>
                                        <xsl:for-each select="ns2:TechnicalInterface">
                                            <ns2:TechnicalInterface>
                                                <xsl:if test="ns2:Domain">
                                                    <ns2:Domain>
                                                        <xsl:value-of select="ns2:Domain"/>
                                                    </ns2:Domain>
                                                </xsl:if>
                                                <xsl:if test="ns2:Interface">
                                                    <ns2:Interface>
                                                        <xsl:value-of select="ns2:Interface"/>
                                                    </ns2:Interface>
                                                </xsl:if>
                                                <xsl:if test="ns2:Version">
                                                    <ns2:Version>
                                                        <xsl:value-of select="ns2:Version"/>
                                                    </ns2:Version>
                                                </xsl:if>
                                                <xsl:if test="ns2:MethodCall">
                                                    <ns2:MethodCall>
                                                        <xsl:value-of select="ns2:MethodCall"/>
                                                    </ns2:MethodCall>
                                                </xsl:if>
                                            </ns2:TechnicalInterface>
                                        </xsl:for-each>
                                        <xsl:if test="ns2:Timestamp">
                                            <ns2:Timestamp>
                                                <xsl:value-of select="ns2:Timestamp"/>
                                            </ns2:Timestamp>
                                        </xsl:if>
                                    </ns2:Flow>
                                </xsl:for-each>
                                <xsl:if test="ns2:Step">
                                    <ns2:Step>
                                        <xsl:value-of select="ns2:Step"/>
                                    </ns2:Step>
                                </xsl:if>
                                <xsl:if test="ns2:NumSteps">
                                    <ns2:NumSteps>
                                        <xsl:value-of select="ns2:NumSteps"/>
                                    </ns2:NumSteps>
                                </xsl:if>
                            </ns2:History>
                        </xsl:for-each>
                        <xsl:for-each select="ns2:Transport">
                            <ns2:Transport>
                                <xsl:if test="ns2:ReplyTo">
                                    <ns2:ReplyTo>
                                        <xsl:value-of select="ns2:ReplyTo"/>
                                    </ns2:ReplyTo>
                                </xsl:if>
                                <xsl:if test="ns2:Destination">
                                    <ns2:Destination>
                                        <xsl:value-of select="ns2:Destination"/>
                                    </ns2:Destination>
                                </xsl:if>
                                <xsl:if test="ns2:MessageId">
                                    <ns2:MessageId>
                                        <xsl:value-of select="ns2:MessageId"/>
                                    </ns2:MessageId>
                                </xsl:if>
                                <xsl:if test="ns2:SOAPAction">
                                    <ns2:SOAPAction>
                                        <xsl:value-of select="ns2:SOAPAction"/>
                                    </ns2:SOAPAction>
                                </xsl:if>
                            </ns2:Transport>
                        </xsl:for-each>
                    </pfx:Header>
                </xsl:for-each>
                <pfx:ResponseCodes>
                    <ns3:ResponseCode>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/ErrorCodes/Success"/>
                    </ns3:ResponseCode>
                </pfx:ResponseCodes>
            </pfx:ResponseEAI>
        </Output>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="Output">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:ResponseEAI"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>724</pd:endX>
    <pd:endY>138</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://vodafone.com.tr/1426243308519</pd:targetNamespace>
    <pd:activity name="JMS Queue Sender">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>530</pd:x>
        <pd:y>138</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/GlobalCommonResources/Connections/JMS/JMS EAI Connection.sharedjmscon</ConnectionReference>
            <InDataxsdString ref="pfx3:ServiceRequest"/>
        </config>
        <pd:inputBindings>
            <ns12:ActivityInput>
                <destinationQueue>
                    <xsl:value-of select="$Start/Input/pfx5:RequestEAI/pfx5:Body/ns:Request/ns:ServiceCatalogQueue"/>
                </destinationQueue>
                <replyToQueue>
                    <xsl:value-of select="tib:concat-sequence-format(($_globalVariables/ns1:GlobalVariables/Constants/Company,$_globalVariables/ns1:GlobalVariables/Constants/ProjectName,$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/Name,$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/OrderComponent/Name,$_globalVariables/ns1:GlobalVariables/Constants/Layer/Business,$_globalVariables/ns1:GlobalVariables/Constants/QOS/Guarantee,$_globalVariables/ns1:GlobalVariables/Constants/RequestType/Reply),&quot;.&quot;)"/>
                </replyToQueue>
                <JMSPriority>
                    <xsl:value-of select="$Start/Input/pfx5:RequestEAI/pfx5:Header/ns2:Priority"/>
                </JMSPriority>
                <Body>
                    <pfx3:ServiceRequest>
                        <xsl:for-each select="$Start/Input/pfx5:RequestEAI/pfx5:Header">
                            <pfx3:Header>
                                <xsl:if test="ns2:RequestId">
                                    <ns2:RequestId>
                                        <xsl:value-of select="ns2:RequestId"/>
                                    </ns2:RequestId>
                                </xsl:if>
                                <ns2:SourceSystem>
                                    <xsl:value-of select="ns2:SourceSystem"/>
                                </ns2:SourceSystem>
                                <ns2:ReplyExpected>
                                    <xsl:value-of select="ns2:ReplyExpected"/>
                                </ns2:ReplyExpected>
                                <xsl:if test="ns2:QoS">
                                    <ns2:QoS>
                                        <xsl:value-of select="ns2:QoS"/>
                                    </ns2:QoS>
                                </xsl:if>
                                <xsl:if test="ns2:Schedule">
                                    <ns2:Schedule>
                                        <xsl:value-of select="ns2:Schedule"/>
                                    </ns2:Schedule>
                                </xsl:if>
                                <xsl:if test="ns2:CorrelationId">
                                    <ns2:CorrelationId>
                                        <xsl:value-of select="ns2:CorrelationId"/>
                                    </ns2:CorrelationId>
                                </xsl:if>
                                <xsl:if test="ns2:Priority">
                                    <ns2:Priority>
                                        <xsl:value-of select="ns2:Priority"/>
                                    </ns2:Priority>
                                </xsl:if>
                                <xsl:for-each select="ns2:Credentials">
                                    <ns2:Credentials>
                                        <ns2:ApplicationId>
                                            <xsl:value-of select="ns2:ApplicationId"/>
                                        </ns2:ApplicationId>
                                        <ns2:User>
                                            <xsl:value-of select="ns2:User"/>
                                        </ns2:User>
                                        <xsl:if test="ns2:Password">
                                            <ns2:Password>
                                                <xsl:value-of select="ns2:Password"/>
                                            </ns2:Password>
                                        </xsl:if>
                                    </ns2:Credentials>
                                </xsl:for-each>
                                <xsl:if test="ns2:ProxySystem">
                                    <ns2:ProxySystem>
                                        <xsl:value-of select="ns2:ProxySystem"/>
                                    </ns2:ProxySystem>
                                </xsl:if>
                                <xsl:if test="ns2:ForceSimulate">
                                    <ns2:ForceSimulate>
                                        <xsl:value-of select="ns2:ForceSimulate"/>
                                    </ns2:ForceSimulate>
                                </xsl:if>
                                <xsl:for-each select="ns2:Attributes">
                                    <ns2:Attributes>
                                        <xsl:for-each select="ns2:Attribute">
                                            <ns2:Attribute>
                                                <ns2:Name>
                                                    <xsl:value-of select="ns2:Name"/>
                                                </ns2:Name>
                                                <ns2:Value>
                                                    <xsl:value-of select="ns2:Value"/>
                                                </ns2:Value>
                                            </ns2:Attribute>
                                        </xsl:for-each>
                                    </ns2:Attributes>
                                </xsl:for-each>
                            </pfx3:Header>
                        </xsl:for-each>
                        <pfx3:Body>
                            <xsl:copy-of select="$Map-Data/pfx6:DeleteResourcesRequest/pfx6:Request"/>
                        </pfx3:Body>
                    </pfx3:ServiceRequest>
                </Body>
            </ns12:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>348</pd:x>
        <pd:y>138</pd:y>
        <config>
            <element ref="pfx6:DeleteResourcesRequest"/>
        </config>
        <pd:inputBindings>
            <pfx6:DeleteResourcesRequest>
                <pfx6:Request>
                    <pfx6:CustomerType>
                        <xsl:value-of select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/CustAcctType"/>
                    </pfx6:CustomerType>
                    <pfx6:MSISDN>
                        <xsl:value-of select="$Parse-XML/Order/ListOfRootItem/RootItem[1]/MSISDN"/>
                    </pfx6:MSISDN>
                    <pfx6:AccountType>
                        <xsl:value-of select="$Parse-XML/Order/ListOfRootItem/RootItem[1]/ProductCatalogId"/>
                    </pfx6:AccountType>
                    <pfx6:StartDate>
                        <xsl:value-of select="$Parse-XML/Order/ListOfRootItem/RootItem[1]/StartDate"/>
                    </pfx6:StartDate>
                    <pfx6:EndDate>
                        <xsl:value-of select="$Parse-XML/Order/ListOfRootItem/RootItem[1]/EndDate"/>
                    </pfx6:EndDate>
                    <pfx6:InitialTotalVolume>
                        <xsl:value-of select="'-1'"/>
                    </pfx6:InitialTotalVolume>
                </pfx6:Request>
            </pfx6:DeleteResourcesRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>164</pd:x>
        <pd:y>138</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term ref="pfx2:Order"/>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Start/Input/pfx5:RequestEAI/pfx5:Body/*" element="ns:Request"/>
        </pd:coercions>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Start/Input/pfx5:RequestEAI/pfx5:Body/ns:Request/ns:OrderComponentDetails/ns:XMLMessage/*[1]"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>JMS Queue Sender</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS Queue Sender</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>