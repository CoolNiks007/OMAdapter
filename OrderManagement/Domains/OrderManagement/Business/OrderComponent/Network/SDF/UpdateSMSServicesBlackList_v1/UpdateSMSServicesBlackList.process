<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://vodafone.com.tr/EAI/Common/Header" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentRequestInput/v1" xmlns:ns4="http://vodafone.com.tr/EAI/Common/ResponseCodes" xmlns:ns3="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx5="http://vodafone.com.tr/EAI/Common/ResponseEAI" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx4="http://vodafone.com.tr/ServiceCatalog/ServiceRequest" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd" xmlns:pfx2="http://vodafone.com.tr/ServiceCatalog/Business/Provisioning/UpdateServicesBlackList/v1" xmlns:pfx="http://vodafone.com.tr/EAI/Common/RequestEAI" xmlns:pfx6="http://vodafone.com.tr/ServiceCatalog/Business/Provisioning/UpdateSMSServicesBlackList/v1">
    <xsd:import namespace="http://vodafone.com.tr/EAI/Common/RequestEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/RequestEAI.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentRequestInput/v1" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/OrderComponent/OrderComponentRequestInput.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/ServiceRequest" schemaLocation="/Domains/ServiceCatalog/BusinessResources/Schemas/ServiceRequest.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/EAI/Common/ResponseEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/ResponseEAI.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/Provisioning/UpdateSMSServicesBlackList/v1" schemaLocation="/Domains/ServiceCatalog/Business/Provisioning/UpdateSMSServicesBlackList_v1/Schemas/UpdateSMSServicesBlackList.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/Provisioning/UpdateServicesBlackList/v1" schemaLocation="/Domains/ServiceCatalog/Business/Provisioning/UpdateServicesBlackList_v1/Schemas/UpdateServicesBlackList.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd"/>
    <pd:name>Domains/OrderManagement/Business/OrderComponent/Network/SDF/UpdateSMSServicesBlackList_v1/UpdateSMSServicesBlackList.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="Input">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:RequestEAI"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>153</pd:startX>
    <pd:startY>61</pd:startY>
    <pd:returnBindings>
        <Output>
            <pfx5:ResponseEAI>
                <pfx5:Header>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ancestor-or-self::*/namespace::node()"/>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/@*"/>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/node()"/>
                </pfx5:Header>
                <pfx5:ResponseCodes>
                    <ns4:ResponseCode>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/ErrorCodes/Success"/>
                    </ns4:ResponseCode>
                </pfx5:ResponseCodes>
            </pfx5:ResponseEAI>
        </Output>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="Output">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx5:ResponseEAI"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>823</pd:endX>
    <pd:endY>61</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://vodafone.com.tr/1421926999987</pd:targetNamespace>
    <pd:activity name="JMS Queue Sender">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>683</pd:x>
        <pd:y>61</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/GlobalCommonResources/Connections/JMS/JMS EAI Connection.sharedjmscon</ConnectionReference>
            <InDataxsdString ref="pfx4:ServiceRequest"/>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ServiceCatalogQueue">
                    <destinationQueue>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ServiceCatalogQueue"/>
                    </destinationQueue>
                </xsl:if>
                <replyToQueue>
                    <xsl:value-of select="tib:concat-sequence-format(($_globalVariables/ns1:GlobalVariables/Constants/Company,$_globalVariables/ns1:GlobalVariables/Constants/ProjectName,$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/Name,$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/OrderComponent/Name,$_globalVariables/ns1:GlobalVariables/Constants/Layer/Business,$_globalVariables/ns1:GlobalVariables/Constants/QOS/Guarantee,$_globalVariables/ns1:GlobalVariables/Constants/RequestType/Reply),&quot;.&quot;)"/>
                </replyToQueue>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Priority">
                    <JMSPriority>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns2:Priority"/>
                    </JMSPriority>
                </xsl:if>
                <Body>
                    <pfx4:ServiceRequest>
                        <xsl:for-each select="$Start/Input/pfx:RequestEAI/pfx:Header">
                            <pfx4:Header>
                                <ns2:RequestId>
                                    <xsl:value-of select="ns2:RequestId"/>
                                </ns2:RequestId>
                                <ns2:SourceSystem>
                                    <xsl:value-of select="ns2:SourceSystem"/>
                                </ns2:SourceSystem>
                                <ns2:ReplyExpected>
                                    <xsl:value-of select="ns2:ReplyExpected"/>
                                </ns2:ReplyExpected>
                                <xsl:if test="ns2:QoS">
                                    <ns2:QoS>
                                        <xsl:value-of select="ns2:QoS"/>
                                    </ns2:QoS>
                                </xsl:if>
                                <xsl:if test="ns2:Schedule">
                                    <ns2:Schedule>
                                        <xsl:value-of select="ns2:Schedule"/>
                                    </ns2:Schedule>
                                </xsl:if>
                                <xsl:if test="ns2:CorrelationId">
                                    <ns2:CorrelationId>
                                        <xsl:value-of select="ns2:CorrelationId"/>
                                    </ns2:CorrelationId>
                                </xsl:if>
                                <xsl:if test="ns2:Priority">
                                    <ns2:Priority>
                                        <xsl:value-of select="ns2:Priority"/>
                                    </ns2:Priority>
                                </xsl:if>
                                <xsl:for-each select="ns2:Credentials">
                                    <ns2:Credentials>
                                        <ns2:ApplicationId>
                                            <xsl:value-of select="ns2:ApplicationId"/>
                                        </ns2:ApplicationId>
                                        <ns2:User>
                                            <xsl:value-of select="ns2:User"/>
                                        </ns2:User>
                                        <xsl:if test="ns2:Password">
                                            <ns2:Password>
                                                <xsl:value-of select="ns2:Password"/>
                                            </ns2:Password>
                                        </xsl:if>
                                    </ns2:Credentials>
                                </xsl:for-each>
                                <xsl:if test="ns2:ProxySystem">
                                    <ns2:ProxySystem>
                                        <xsl:value-of select="ns2:ProxySystem"/>
                                    </ns2:ProxySystem>
                                </xsl:if>
                                <xsl:if test="ns2:ForceSimulate">
                                    <ns2:ForceSimulate>
                                        <xsl:value-of select="ns2:ForceSimulate"/>
                                    </ns2:ForceSimulate>
                                </xsl:if>
                                <xsl:for-each select="ns2:Attributes">
                                    <ns2:Attributes>
                                        <xsl:for-each select="ns2:Attribute">
                                            <ns2:Attribute>
                                                <ns2:Name>
                                                    <xsl:value-of select="ns2:Name"/>
                                                </ns2:Name>
                                                <ns2:Value>
                                                    <xsl:value-of select="ns2:Value"/>
                                                </ns2:Value>
                                            </ns2:Attribute>
                                        </xsl:for-each>
                                    </ns2:Attributes>
                                </xsl:for-each>
                            </pfx4:Header>
                        </xsl:for-each>
                        <pfx4:Body>
                            <xsl:copy-of select="$Map-Data/pfx2:Request"/>
                        </pfx4:Body>
                    </pfx4:ServiceRequest>
                </Body>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>317</pd:x>
        <pd:y>61</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term>
                <xsd:element name="RootItem" type="pfx3:RootItem"/>
            </term>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Start/Input/pfx:RequestEAI/pfx:Body/*" element="ns:Request"/>
        </pd:coercions>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:XMLMessage/*[1]"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>486</pd:x>
        <pd:y>59</pd:y>
        <config>
            <element ref="pfx2:Request"/>
        </config>
        <pd:inputBindings>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="Product" select="$Parse-XML/RootItem/ListOfChildItem/ChildItem[ProductCatalogId = ('1133','71026','71039','1128')]"/>
            <pfx2:Request>
                <pfx2:Msisdn>
                    <xsl:value-of select="$Parse-XML/RootItem[1]/ServiceId"/>
                </pfx2:Msisdn>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="$Parse-XML/RootItem[1]/CustAcctType = '101'">
                        <pfx2:Segment>
                            <xsl:value-of select="'EBU'"/>
                        </pfx2:Segment>
                    </xsl:when>
                    <xsl:otherwise>
                        <pfx2:Segment>
                            <xsl:value-of select="'CBU'"/>
                        </pfx2:Segment>
                    </xsl:otherwise>
                </xsl:choose>
                <pfx2:ListOfServices>
                    <xsl:for-each select="$Product">
                        <xsl:choose>
                            <xsl:when test="current()/ProductCatalogId = ('71039','1133')">
                                <pfx2:Service>
                                    <pfx2:ProductId>
                                        <xsl:value-of select="current()/ProductCatalogId"/>
                                    </pfx2:ProductId>
                                    <pfx2:Action>
                                        <xsl:value-of select="current()/Action"/>
                                    </pfx2:Action>
                                    <xsl:if test="string-length(current()/ListOfChildItemAttribute/ChildItemAttribute[Value !=PreviousValue or Action = ('New','Deleted')][1]) >0">
                                        <pfx2:ListOfCategories>
                                            <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="current()/ListOfChildItemAttribute/ChildItemAttribute[Value !=PreviousValue or  Action = ('New','Deleted')]">
                                                <pfx2:Category>
                                                    <pfx2:Name>
                                                        <xsl:value-of select="Name"/>
                                                    </pfx2:Name>
                                                    <pfx2:Value>
                                                        <xsl:value-of select="Value"/>
                                                    </pfx2:Value>
                                                    <pfx2:OldValue>
                                                        <xsl:value-of select="PreviousValue"/>
                                                    </pfx2:OldValue>
                                                </pfx2:Category>
                                            </xsl:for-each>
                                        </pfx2:ListOfCategories>
                                    </xsl:if>
                                </pfx2:Service>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx2:Service>
                                    <pfx2:ProductId>
                                        <xsl:value-of select="current()/ProductCatalogId"/>
                                    </pfx2:ProductId>
                                    <pfx2:Action>
                                        <xsl:value-of select="current()/Action"/>
                                    </pfx2:Action>
                                    <xsl:if test="string-length(current()/ListOfChildItemAttribute/ChildItemAttribute[1]) >0">
                                        <pfx2:ListOfCategories>
                                            <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="current()/ListOfChildItemAttribute/ChildItemAttribute">
                                                <pfx2:Category>
                                                    <pfx2:Name>
                                                        <xsl:value-of select="Name"/>
                                                    </pfx2:Name>
                                                    <pfx2:Value>
                                                        <xsl:value-of select="Value"/>
                                                    </pfx2:Value>
                                                    <pfx2:OldValue>
                                                        <xsl:value-of select="PreviousValue"/>
                                                    </pfx2:OldValue>
                                                </pfx2:Category>
                                            </xsl:for-each>
                                        </pfx2:ListOfCategories>
                                    </xsl:if>
                                </pfx2:Service>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:for-each>
                </pfx2:ListOfServices>
            </pfx2:Request>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Straight</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS Queue Sender</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>JMS Queue Sender</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>