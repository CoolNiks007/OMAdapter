<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:pfx10="http://vodafone.com.tr/ServiceCatalog/Business/AssetInquiries/GetAssetList/v1" xmlns:ns22="http://vodafone.com.tr/ServiceCatalog/ServiceReply" xmlns:ns33="urn:com:metasolv:oms:xmlapi:1" xmlns:ns12="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentResponseInput/v1" xmlns:pfx="http://vodafone.com.tr/EAI/Common/RequestEAI" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://vodafone.com.tr/EAI/Common/ResponseCodes" xmlns:ns1="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentRequestInput/v1" xmlns:ns4="http://vodafone.com.tr/ServiceCatalog/Business/AssetInquiries/GetAssetList/v2" xmlns:ns3="http://vodafone.com.tr/EAI/Common/Header" xmlns:pfx5="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx4="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd" xmlns:pfx3="http://vodafone.com.tr/ServiceCatalog/ServiceRequest" xmlns:pfx2="http://vodafone.com.tr/EAI/Common/ResponseEAI" xmlns:pfx9="http://vodafone.com.tr/ServiceCatalog/Business/CustomerManagement/ModifyOptionalOfferComposite/v1" xmlns:pfx8="http://vodafone.com.tr/ServiceCatalog/Business/SubscriberManagement/ManageCUGMember/v1" xmlns:pfx7="http://www.tibco.com/ns/no_namespace_schema_location/Domains/CustomerCare/BusinessResources/Schemas/Siebel/SiebelMessage.xsd" xmlns:pfx6="http://vodafone.com.tr/ServiceCatalog/Business/SubscriberManagement/ManageGroupMember/v1">
    <xsd:import namespace="http://vodafone.com.tr/EAI/Common/RequestEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/RequestEAI.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/EAI/Common/ResponseEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/ResponseEAI.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/ServiceRequest" schemaLocation="/Domains/ServiceCatalog/BusinessResources/Schemas/ServiceRequest.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentRequestInput/v1" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/OrderComponent/OrderComponentRequestInput.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/SubscriberManagement/ManageGroupMember/v1" schemaLocation="/Domains/ServiceCatalog/Business/SubscriberManagement/ManageGroupMember_v1/Schemas/ManageGroupMember.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Domains/CustomerCare/BusinessResources/Schemas/Siebel/SiebelMessage.xsd" schemaLocation="/Domains/CustomerCare/BusinessResources/Schemas/Siebel/SiebelMessage.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/ServiceReply" schemaLocation="/Domains/ServiceCatalog/BusinessResources/Schemas/ServiceReply.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/SubscriberManagement/ManageCUGMember/v1" schemaLocation="/Domains/ServiceCatalog/Business/SubscriberManagement/ManageCUGMember_v1/Schemas/ManageCUGMember.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/CustomerManagement/ModifyOptionalOfferComposite/v1" schemaLocation="/Domains/ServiceCatalog/Business/CustomerManagement/ModifyOptionalOfferComposite_v1/Schemas/ModifyOptionalOfferComposite.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/AssetInquiries/GetAssetList/v2" schemaLocation="/Domains/ServiceCatalog/Business/AssetInquiries/GetAssetList_v2/Schemas/GetAssetList.xsd"/>
    <pd:name>Domains/OrderManagement/Business/OrderComponent/Billing/CCS/AddCUGMember_v1/AddCUGMember.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="Input">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:RequestEAI"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>27</pd:startX>
    <pd:startY>159</pd:startY>
    <pd:returnBindings>
        <Output>
            <pfx2:ResponseEAI>
                <pfx2:Header>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ancestor-or-self::*/namespace::node()"/>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/@*"/>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/node()"/>
                </pfx2:Header>
                <pfx2:ResponseCodes>
                    <ns2:ResponseCode>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ErrorCodes/Success"/>
                    </ns2:ResponseCode>
                </pfx2:ResponseCodes>
            </pfx2:ResponseEAI>
        </Output>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="Output">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx2:ResponseEAI"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>886</pd:endX>
    <pd:endY>156</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://vodafone.com.tr/1414142630767</pd:targetNamespace>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>160</pd:x>
        <pd:y>158</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term>
                <xsd:element name="RootItem" type="pfx4:RootItem"/>
            </term>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Start/Input/pfx:RequestEAI/pfx:Body/*" element="ns1:Request"/>
        </pd:coercions>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns1:Request/ns1:OrderComponentDetails/ns1:XMLMessage/*[1]"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetParentProductCatalogId">
        <pd:type>com.tibco.plugin.jms.JMSQueueRequestReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueRequestReplyActivity</pd:resourceType>
        <pd:x>287</pd:x>
        <pd:y>69</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%Domains/OrderManagement/OrderComponent/Constants/AuxQueues/GetAssetList_v2%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/GlobalCommonResources/Connections/JMS/JMS EAI Connection.sharedjmscon</ConnectionReference>
            <InDataxsdString ref="pfx3:ServiceRequest"/>
            <OutDataxsdString ref="ns22:ServiceReply"/>
        </config>
        <pd:inputBindings>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="RootItem" select="$Parse-XML/RootItem"/>
            <pfx5:ActivityInput>
                <JMSExpiration>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Domains/OrderManagement/OrderComponent/OCSyncRequestJMSMsgExpiration"/>
                </JMSExpiration>
                <requestTimeout>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Domains/OrderManagement/OrderComponent/OCSyncRequestTimeout"/>
                </requestTimeout>
                <Body>
                    <pfx3:ServiceRequest>
                        <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$Start/Input/pfx:RequestEAI/pfx:Header">
                            <pfx3:Header>
                                <xsl:if test="ns3:RequestId">
                                    <ns3:RequestId>
                                        <xsl:value-of select="ns3:RequestId"/>
                                    </ns3:RequestId>
                                </xsl:if>
                                <ns3:SourceSystem>
                                    <xsl:value-of select="ns3:SourceSystem"/>
                                </ns3:SourceSystem>
                                <ns3:ReplyExpected>
                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Constants/Reply/Now"/>
                                </ns3:ReplyExpected>
                                <ns3:QoS>
                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Constants/QOS/Reliable"/>
                                </ns3:QoS>
                                <xsl:if test="ns3:Schedule">
                                    <ns3:Schedule>
                                        <xsl:value-of select="ns3:Schedule"/>
                                    </ns3:Schedule>
                                </xsl:if>
                                <xsl:if test="ns3:CorrelationId">
                                    <ns3:CorrelationId>
                                        <xsl:value-of select="ns3:CorrelationId"/>
                                    </ns3:CorrelationId>
                                </xsl:if>
                                <xsl:if test="ns3:Priority">
                                    <ns3:Priority>
                                        <xsl:value-of select="ns3:Priority"/>
                                    </ns3:Priority>
                                </xsl:if>
                                <xsl:for-each select="ns3:Credentials">
                                    <ns3:Credentials>
                                        <ns3:ApplicationId>
                                            <xsl:value-of select="ns3:ApplicationId"/>
                                        </ns3:ApplicationId>
                                        <ns3:User>
                                            <xsl:value-of select="ns3:User"/>
                                        </ns3:User>
                                        <xsl:if test="ns3:Password">
                                            <ns3:Password>
                                                <xsl:value-of select="ns3:Password"/>
                                            </ns3:Password>
                                        </xsl:if>
                                    </ns3:Credentials>
                                </xsl:for-each>
                                <xsl:if test="ns3:ProxySystem">
                                    <ns3:ProxySystem>
                                        <xsl:value-of select="ns3:ProxySystem"/>
                                    </ns3:ProxySystem>
                                </xsl:if>
                                <xsl:if test="ns3:ForceSimulate">
                                    <ns3:ForceSimulate>
                                        <xsl:value-of select="ns3:ForceSimulate"/>
                                    </ns3:ForceSimulate>
                                </xsl:if>
                                <xsl:for-each select="ns3:Attributes">
                                    <ns3:Attributes>
                                        <xsl:for-each select="ns3:Attribute">
                                            <ns3:Attribute>
                                                <ns3:Name>
                                                    <xsl:value-of select="ns3:Name"/>
                                                </ns3:Name>
                                                <ns3:Value>
                                                    <xsl:value-of select="ns3:Value"/>
                                                </ns3:Value>
                                            </ns3:Attribute>
                                        </xsl:for-each>
                                    </ns3:Attributes>
                                </xsl:for-each>
                            </pfx3:Header>
                        </xsl:for-each>
                        <pfx3:Body>
                            <ns4:Request>
                                <ns4:MSISDN>
                                    <xsl:value-of select="$RootItem/ListOfChildItem/ChildItem/ListOfChildItemAttribute/ChildItemAttribute[Name = 'Leader MSISDN']/Value"/>
                                </ns4:MSISDN>
                            </ns4:Request>
                        </pfx3:Body>
                    </pfx3:ServiceRequest>
                </Body>
            </pfx5:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Requests">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>563</pd:x>
        <pd:y>156</pd:y>
        <config>
            <element>
                <xsd:element name="ListOfRequests">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element ref="pfx8:Request" minOccurs="0" maxOccurs="unbounded"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <ListOfRequests>
                <!--WA15 request-->
                <xsl:for-each select="$Parse-XML/RootItem/ListOfChildItem/ChildItem[ComponentType = 'GROUP_CHILD' and Action = ('New','Modified') and count(ListOfChildItemAttribute/ChildItemAttribute[Name = &quot;Parent Group ID&quot;]/Value)=0 and count(ListOfChildItemAttribute/ChildItemAttribute[Name = &quot;Group ID&quot; and Action!='Existing']/Value)>0]">
                    <pfx8:Request>
                        <xsl:variable name="RootCUGMember" select="$Parse-XML/RootItem[ListOfChildItem/ChildItem[ComponentType = 'GROUP_CHILD']/Action = ('New','Modified')]"/>
                        <pfx8:CugId>
                            <xsl:value-of select="current()/ListOfChildItemAttribute/ChildItemAttribute[Name = &quot;Group ID&quot;]/Value"/>
                        </pfx8:CugId>
                        <pfx8:SubscriberNo>
                            <xsl:value-of select="$RootCUGMember/MSISDN"/>
                        </pfx8:SubscriberNo>
                        <pfx8:OperationType>
                            <xsl:value-of select="'Add'"/>
                        </pfx8:OperationType>
                    </pfx8:Request>
                </xsl:for-each>
                <!--Cosby-->
                <xsl:if test="$Parse-XML/RootItem/ListOfChildItem/ChildItem[ComponentGroup = 'TARIFF' ]/ListOfKeyFeature/KeyFeature[Feature = 'Sharable Bundle']/FeatureValue = 'Y'&#xA;or&#xA;$Parse-XML/RootItem/ListOfChildItem/ChildItem[ComponentGroup = 'SRV' and ComponentType = 'SHARING' and ComponentSubType = ('SUBLINE','DATALINE') ]/Action = 'New'">
                    <pfx8:Request>
                        <xsl:variable name="TARIFF" select="$Parse-XML/RootItem/ListOfChildItem/ChildItem[ComponentGroup = 'TARIFF' and ListOfKeyFeature/KeyFeature/Feature = 'Sharable Bundle']"/>
                        <xsl:variable name="CosbyMember" select="$Parse-XML/RootItem/ListOfChildItem/ChildItem[ComponentGroup = 'SRV' and ComponentType = 'SHARING' and ComponentSubType = ('SUBLINE','DATALINE') ]"/>
                        <xsl:variable name="Leader" select="$Parse-XML/RootItem/ListOfChildItem/ChildItem[ComponentGroup = 'TARIFF' ]/ListOfKeyFeature/KeyFeature[Feature = 'Sharable Bundle']/FeatureValue = 'Y'"/>
                        <xsl:choose>
                            <xsl:when test="$Leader='Y'">
                                <pfx8:CugId>
                                    <xsl:value-of select="$TARIFF/ListOfChildItemAttribute/ChildItemAttribute[Name = 'Group ID']/Value"/>
                                </pfx8:CugId>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx8:CugId>
                                    <xsl:value-of select="$GetParentProductCatalogId/pfx5:ActivityOutput/Body/ns22:ServiceReply/ns22:Body/ns4:Response/ns4:ListOfAsset/ns4:Asset[ns4:ProductGroup = 'TARIFF']/ns4:ListOfAttribute[ns4:Attribute/ns4:Name = 'Group ID']/ns4:Attribute/ns4:Value"/>
                                </pfx8:CugId>
                            </xsl:otherwise>
                        </xsl:choose>
                        <pfx8:SubscriberNo>
                            <xsl:value-of select="$Parse-XML/RootItem/ServiceId"/>
                        </pfx8:SubscriberNo>
                        <pfx8:OperationType>
                            <xsl:value-of select="'Add'"/>
                        </pfx8:OperationType>
                    </pfx8:Request>
                </xsl:if>
            </ListOfRequests>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="OrderComponentIterator">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>746</pd:x>
        <pd:y>154</pd:y>
        <config>
            <processName>/Domains/OrderManagement/BusinessResources/Processes/OrderComponent/OrderComponentIterator.process</processName>
        </config>
        <pd:inputBindings>
            <Input>
                <RequestDestination>
                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns1:Request/ns1:ServiceCatalogQueue"/>
                </RequestDestination>
                <xsl:choose>
                    <xsl:when test="count($Map-Requests/ListOfRequests)>0">
                        <xsl:copy-of select="$Map-Requests/ListOfRequests"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:copy-of select="$Parent-CUG/ListOfRequests"/>
                    </xsl:otherwise>
                </xsl:choose>
                <pfx:RequestEAI>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header"/>
                    <pfx:Body>
                        <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns1:Request"/>
                    </pfx:Body>
                </pfx:RequestEAI>
            </Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Close Order Component">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>647</pd:x>
        <pd:y>78</pd:y>
        <config>
            <processName>/Domains/OrderManagement/BusinessResources/Processes/OrderComponent/OrderComponentResponse.process</processName>
        </config>
        <pd:inputBindings>
            <Input>
                <ns12:Request>
                    <ns12:OcDetails>
                        <ns12:Id>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns1:Request/ns1:OrderComponentDetails/ns1:Id"/>
                        </ns12:Id>
                        <ns12:Name>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns1:Request/ns1:OrderComponentDetails/ns1:Name"/>
                        </ns12:Name>
                        <ns12:Scenario>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns1:Request/ns1:OrderComponentDetails/ns1:Scenario"/>
                        </ns12:Scenario>
                        <ns12:OrderId>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns1:Request/ns1:OrderComponentDetails/ns1:OrderId"/>
                        </ns12:OrderId>
                        <ns12:CorrelationID>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns1:Request/ns1:OrderComponentDetails/ns1:CorrelationID"/>
                        </ns12:CorrelationID>
                        <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$Start/Input/pfx:RequestEAI/pfx:Body/ns1:Request/ns1:OrderComponentDetails/ns1:Cartridge">
                            <ns12:Cartridge>
                                <ns12:Name>
                                    <xsl:value-of select="ns1:Name"/>
                                </ns12:Name>
                                <ns12:Version>
                                    <xsl:value-of select="ns1:Version"/>
                                </ns12:Version>
                                <ns12:Source>
                                    <xsl:value-of select="ns1:Source"/>
                                </ns12:Source>
                            </ns12:Cartridge>
                        </xsl:for-each>
                    </ns12:OcDetails>
                    <ns12:ServiceReply>
                        <ns22:Header>
                            <ns2:ResponseCode>
                                <xsl:value-of select="$GetParentProductCatalogId/pfx5:ActivityOutput/Body/ns22:ServiceReply/ns22:Header/ns2:ResponseCode"/>
                            </ns2:ResponseCode>
                            <ns2:ResponseMsg>
                                <xsl:value-of select="concat($GetParentProductCatalogId/pfx5:ActivityOutput/Body/ns22:ServiceReply/ns22:Header/ns2:ResponseMsg,':',$GetParentProductCatalogId/pfx5:ActivityOutput/Body/ns22:ServiceReply/ns22:Header/ns2:ErrorDescription)"/>
                            </ns2:ResponseMsg>
                        </ns22:Header>
                        <ns22:Body>
                            <ns33:TelcoOperationResponse>
                                <Id>
                                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns1:Request/ns1:OrderComponentDetails/ns1:Id"/>
                                </Id>
                                <Name>
                                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns1:Request/ns1:OrderComponentDetails/ns1:Name"/>
                                </Name>
                                <OrderId>
                                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns1:Request/ns1:OrderComponentDetails/ns1:OrderId"/>
                                </OrderId>
                                <StatusCode>
                                    <xsl:value-of select="$GetParentProductCatalogId/pfx5:ActivityOutput/Body/ns22:ServiceReply/ns22:Header/ns2:ResponseCode"/>
                                </StatusCode>
                                <StatusMessage>
                                    <xsl:value-of select="tib:left(concat($GetParentProductCatalogId/pfx5:ActivityOutput/Body/ns22:ServiceReply/ns22:Header/ns2:ResponseMsg,': ', $GetParentProductCatalogId/pfx5:ActivityOutput/Body/ns22:ServiceReply/ns22:Header/ns2:ErrorDescription), 1000)"/>
                                </StatusMessage>
                            </ns33:TelcoOperationResponse>
                        </ns22:Body>
                    </ns12:ServiceReply>
                </ns12:Request>
            </Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>290</pd:x>
        <pd:y>240</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Parent CUG">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>572</pd:x>
        <pd:y>236</pd:y>
        <config>
            <element>
                <xsd:element name="ListOfRequests">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element ref="pfx8:Request" minOccurs="0" maxOccurs="unbounded"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <ListOfRequests>
                <!--WA15 request-->
                <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$Parse-XML/RootItem/ListOfChildItem/ChildItem[ComponentType = 'GROUP_CHILD' and Action = ('New','Modified') and count(ListOfChildItemAttribute/ChildItemAttribute[Name = &quot;Parent Group ID&quot; and Action !='Existing']/Value)>0 and GroupCustomerType = (&quot;CBU&quot;,&quot;EBU/CBU&quot;)]">
                    <pfx8:Request>
                        <xsl:variable name="RootCUGMember" select="$Parse-XML/RootItem[ListOfChildItem/ChildItem[ComponentType = 'GROUP_CHILD' and Action = ('New','Modified') and count(ListOfChildItemAttribute/ChildItemAttribute[Name = &quot;Parent Group ID&quot;]/Value)>0 and GroupCustomerType = (&quot;CBU&quot;,&quot;EBU/CBU&quot;)]]"/>
                        <pfx8:CugId>
                            <xsl:value-of select="current()/ListOfChildItemAttribute/ChildItemAttribute[Name = &quot;Parent Group ID&quot;]/Value"/>
                        </pfx8:CugId>
                        <pfx8:SubscriberNo>
                            <xsl:value-of select="$RootCUGMember/MSISDN"/>
                        </pfx8:SubscriberNo>
                        <pfx8:OperationType>
                            <xsl:value-of select="'Add'"/>
                        </pfx8:OperationType>
                    </pfx8:Request>
                </xsl:for-each>
            </ListOfRequests>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="UpsertGlobalData">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>407</pd:x>
        <pd:y>69</pd:y>
        <config>
            <processName>/Domains/OrderManagement/BusinessResources/Processes/TO2FGlobalData/UpsertGlobalData.process</processName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$GetParentProductCatalogId/pfx5:ActivityOutput/Body/ns22:ServiceReply/ns22:Body/*" element="ns4:Response"/>
        </pd:coercions>
        <pd:inputBindings>
            <Input>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns1:Request/ns1:OrderComponentDetails/ns1:MasterOrderId">
                    <MasterOrderId>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns1:Request/ns1:OrderComponentDetails/ns1:MasterOrderId"/>
                    </MasterOrderId>
                </xsl:if>
                <OrderId>
                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns1:Request/ns1:OrderComponentDetails/ns1:OrderId"/>
                </OrderId>
                <ListOfKeyValue>
                    <KeyValue>
                        <Key>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Domains/OrderManagement/GlobalDataNames/CustomerCare/GetAssetList_CosbyGroupId"/>
                        </Key>
                        <Value>
                            <xsl:value-of select="$GetParentProductCatalogId/pfx5:ActivityOutput/Body/ns22:ServiceReply/ns22:Body/ns4:Response/ns4:ListOfAsset/ns4:Asset[ns4:ProductGroup = 'TARIFF']/ns4:ListOfAttribute[ns4:Attribute/ns4:Name = 'Group ID']/ns4:Attribute/ns4:Value"/>
                        </Value>
                    </KeyValue>
                </ListOfKeyValue>
            </Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>GetParentProductCatalogId</pd:to>
        <pd:xpathDescription>Cosby</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>(
count($Parse-XML/RootItem/ListOfChildItem/ChildItem[ComponentGroup = 'TARIFF' ]/ListOfKeyFeature/KeyFeature[Feature = 'Sharable Bundle' and FeatureValue = 'Y'])&gt;0
or
count($Parse-XML/RootItem/ListOfChildItem/ChildItem[ComponentGroup = 'SRV' and ComponentType = 'SHARING' and ComponentSubType = ('SUBLINE','DATALINE') and Action = 'New'])&gt;0
)
and 
count($Parse-XML/RootItem/ListOfChildItem/ChildItem[ComponentGroup = 'TARIFF' and ListOfKeyFeature/KeyFeature/Feature = 'Sharable Bundle']/ListOfChildItemAttribute/ChildItemAttribute[Name = 'Group ID']/Value) = 0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Requests</pd:from>
        <pd:to>OrderComponentIterator</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>OrderComponentIterator</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Close Order Component</pd:from>
        <pd:to>OrderComponentIterator</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>Map-Requests</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>Parent CUG</pd:to>
        <pd:xpathDescription>Parent CUG Add</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>contains($Start/Input/pfx:RequestEAI/pfx:Body/ns1:Request/ns1:OrderComponentDetails/ns1:Scenario,"ParentCUG")</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Parent CUG</pd:from>
        <pd:to>OrderComponentIterator</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetParentProductCatalogId</pd:from>
        <pd:to>UpsertGlobalData</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>UpsertGlobalData</pd:from>
        <pd:to>Map-Requests</pd:to>
        <pd:xpathDescription>Success</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$GetParentProductCatalogId/pfx5:ActivityOutput/Body/ns22:ServiceReply/ns22:Header/ns2:ResponseCode = $_globalVariables/ns:GlobalVariables/ErrorCodes/Success</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>UpsertGlobalData</pd:from>
        <pd:to>Close Order Component</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>