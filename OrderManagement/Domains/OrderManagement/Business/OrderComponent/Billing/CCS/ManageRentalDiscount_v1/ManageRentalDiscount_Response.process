<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/pe/DeployedVarsType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns1="http://vodafone.com.tr/ServiceCatalog/ServiceReply" xmlns:ns="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentResponseInput/v1" xmlns:ns4="http://vodafone.com.tr/EAI/Common/Header" xmlns:ns3="http://vodafone.com.tr/EAI/Common/ResponseCodes" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://vodafone.com.tr/EAI/ServiceCatalog/InstanceMapping" xmlns:pfx2="http://vodafone.com.tr/EAI/Common/ResponseEAI" xmlns:ns5="urn:com:metasolv:oms:xmlapi:1" xmlns:ns6="http://vodafone.com.tr/ServiceCatalog/Business/AccountManagement/ManageRentalDiscount/v1" xmlns:pfx="http://vodafone.com.tr/EAI/Common/RequestEAI" xmlns:ns8="http://vodafone.com.tr/ServiceCatalog/Business/AccountManagement/ManageRentalDiscountWA/v1">
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://vodafone.com.tr/EAI/Common/RequestEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/RequestEAI.xsd"/>
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://vodafone.com.tr/EAI/Common/ResponseEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/ResponseEAI.xsd"/>
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentResponseInput/v1" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/OrderComponent/OrderComponentResponseInput.xsd"/>
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://vodafone.com.tr/ServiceCatalog/ServiceReply" schemaLocation="/Domains/ServiceCatalog/BusinessResources/Schemas/ServiceReply.xsd"/>
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="urn:com:metasolv:oms:xmlapi:1" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/OSM/OSM_OperationResponse.xsd"/>
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://vodafone.com.tr/ServiceCatalog/Business/AccountManagement/ManageRentalDiscount/v1" schemaLocation="/Domains/ServiceCatalog/Business/AccountManagement/ManageRentalDiscount_v1/Schemas/ManageRentalDiscount.xsd"/>
    <pd:name>Domains/OrderManagement/Business/OrderComponent/Billing/CCS/ManageRentalDiscount_v1/ManageRentalDiscount_Response.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xs:element xmlns:xs="http://www.w3.org/2001/XMLSchema" name="Input">
            <xs:complexType>
                <xs:sequence>
                    <xs:element ref="pfx:RequestEAI"/>
                </xs:sequence>
            </xs:complexType>
        </xs:element>
    </pd:startType>
    <pd:startX>149</pd:startX>
    <pd:startY>64</pd:startY>
    <pd:returnCoercions>
        <pd:coercion xpath="$GenericResponseWithXref/Output/pfx2:ResponseEAI/pfx2:Body/*" element="ns5:TelcoOperationResponse"/>
        <pd:coercion xpath="$Start/Input/pfx:RequestEAI/pfx:Body/*" element="ns:Request"/>
    </pd:returnCoercions>
    <pd:returnBindings>
        <Output>
            <pfx2:ResponseEAI>
                <pfx2:Header>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ancestor-or-self::*/namespace::node()"/>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/@*"/>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/node()"/>
                </pfx2:Header>
                <pfx2:ResponseCodes>
                    <ns3:ResponseCode>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/ErrorCodes/Success"/>
                    </ns3:ResponseCode>
                </pfx2:ResponseCodes>
                <pfx2:Body>
                    <ns5:TelcoOperationResponse>
                        <Id>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OcDetails/ns:Id"/>
                        </Id>
                        <Name>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OcDetails/ns:Name"/>
                        </Name>
                        <OrderId>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OcDetails/ns:OrderId"/>
                        </OrderId>
                        <xsl:choose>
                            <xsl:when test="string-length($UpsertGlobalData/Output/ResultCode) > 0&#xA;and&#xA;not($UpsertGlobalData/Output/ResultCode=$_globalVariables/ns2:GlobalVariables/ErrorCodes/Success)">
                                <StatusCode>
                                    <xsl:value-of select="$UpsertGlobalData/Output/ResultCode"/>
                                </StatusCode>
                            </xsl:when>
                            <xsl:when test="string-length($GenericResponseWithXref/Output/pfx2:ResponseEAI/pfx2:Body/ns5:TelcoOperationResponse/StatusCode) > 0">
                                <StatusCode>
                                    <xsl:value-of select="$GenericResponseWithXref/Output/pfx2:ResponseEAI/pfx2:Body/ns5:TelcoOperationResponse/StatusCode"/>
                                </StatusCode>
                            </xsl:when>
                            <xsl:otherwise>
                                <StatusCode>
                                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ServiceReply/ns1:Header/ns3:ResponseCode"/>
                                </StatusCode>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="string-length($UpsertGlobalData/Output/ResultMsg) > 0&#xA;and&#xA;not($UpsertGlobalData/Output/ResultCode=$_globalVariables/ns2:GlobalVariables/ErrorCodes/Success)">
                                <StatusMessage>
                                    <xsl:value-of select="tib:left($UpsertGlobalData/Output/ResultMsg, 1000)"/>
                                </StatusMessage>
                            </xsl:when>
                            <xsl:when test="string-length($GenericResponseWithXref/Output/pfx2:ResponseEAI/pfx2:Body/ns5:TelcoOperationResponse/StatusMessage) > 0">
                                <StatusMessage>
                                    <xsl:value-of select="$GenericResponseWithXref/Output/pfx2:ResponseEAI/pfx2:Body/ns5:TelcoOperationResponse/StatusMessage"/>
                                </StatusMessage>
                            </xsl:when>
                            <xsl:otherwise>
                                <StatusMessage>
                                    <xsl:value-of select="tib:left(concat($Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ServiceReply/ns1:Header/ns3:ResponseMsg,': ', $Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ServiceReply/ns1:Header/ns3:ErrorDescription), 1000)"/>
                                </StatusMessage>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="count($GenericResponseWithXref/Output/pfx2:ResponseEAI/pfx2:Body/ns5:TelcoOperationResponse/PipelineItem) > 0">
                                <xsl:copy-of select="$GenericResponseWithXref/Output/pfx2:ResponseEAI/pfx2:Body/ns5:TelcoOperationResponse/PipelineItem"/>
                            </xsl:when>
                            <xsl:when test="string-length($UpsertGlobalData/Output/ResultCode)>0&#xA;and&#xA;$Start/Input/pfx:RequestEAI/pfx:Header/ns4:Attributes/ns4:Attribute[ns4:Name =  $_globalVariables/ns2:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/HasPipeline]/ns4:Value !='Y'">
                                <PipelineItem>
                                    <OperationName>
                                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OcDetails/ns:Name"/>
                                    </OperationName>
                                    <OperationId>
                                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OcDetails/ns:Id"/>
                                    </OperationId>
                                    <PipelineMessage>
                                        <xsl:value-of select="tib:render-xml($Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ServiceReply/ns1:Body/*)"/>
                                    </PipelineMessage>
                                </PipelineItem>
                            </xsl:when>
                        </xsl:choose>
                    </ns5:TelcoOperationResponse>
                </pfx2:Body>
            </pfx2:ResponseEAI>
        </Output>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xs:element xmlns:xs="http://www.w3.org/2001/XMLSchema" name="Output">
            <xs:complexType>
                <xs:sequence>
                    <xs:element ref="pfx2:ResponseEAI"/>
                </xs:sequence>
            </xs:complexType>
        </xs:element>
    </pd:endType>
    <pd:endX>594</pd:endX>
    <pd:endY>64</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://vodafone.com.tr/1400495378282</pd:targetNamespace>
    <pd:activity name="UpsertGlobalData">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>457</pd:x>
        <pd:y>125</pd:y>
        <config>
            <processName>/Domains/OrderManagement/BusinessResources/Processes/TO2FGlobalData/UpsertGlobalData.process</processName>
        </config>
        <pd:inputBindings>
            <Input>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OcDetails/ns:MasterOrderId">
                    <MasterOrderId>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OcDetails/ns:MasterOrderId"/>
                    </MasterOrderId>
                </xsl:if>
                <OrderId>
                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OcDetails/ns:OrderId"/>
                </OrderId>
                <ListOfKeyValue>
                    <!--BalanceId-->
                    <xsl:if test="string-length($Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ServiceReply/ns1:Body/ns8:Response/ns8:DiscountInfo/ns8:DiscountKey) > 0">
                        <KeyValue>
                            <Key>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Domains/OrderManagement/GlobalDataNames/Billing/ManageRentalDiscount_DiscountKey"/>
                            </Key>
                            <Value>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ServiceReply/ns1:Body/ns8:Response/ns8:DiscountInfo/ns8:DiscountKey"/>
                            </Value>
                        </KeyValue>
                    </xsl:if>
                </ListOfKeyValue>
            </Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Coercion">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>317</pd:x>
        <pd:y>64</pd:y>
        <config>
            <element>
                <xs:element xmlns:xs="http://www.w3.org/2001/XMLSchema" name="root">
                    <xs:complexType>
                        <xs:sequence/>
                    </xs:complexType>
                </xs:element>
            </element>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ServiceReply/ns1:Body/*" element="ns8:Response"/>
            <pd:coercion xpath="$Start/Input/pfx:RequestEAI/pfx:Body/*" element="ns:Request"/>
        </pd:coercions>
        <pd:inputBindings>
            <root/>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GenericResponseWithXref">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>320</pd:x>
        <pd:y>210</pd:y>
        <config>
            <processName>/Domains/OrderManagement/Business/OrderComponent/GenericResponse_v1/GenericResponseWithXref.process</processName>
        </config>
        <pd:inputBindings>
            <Input>
                <xsl:copy-of select="$Start/Input/pfx:RequestEAI"/>
            </Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Coercion</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>UpsertGlobalData</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Coercion</pd:from>
        <pd:to>UpsertGlobalData</pd:to>
        <pd:xpathDescription>DiscountKey exists</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ServiceReply/ns1:Body/ns8:Response/ns8:DiscountInfo/ns8:DiscountKey) &gt; 0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Coercion</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Coercion</pd:from>
        <pd:to>GenericResponseWithXref</pd:to>
        <pd:xpathDescription>Update Xref</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ServiceReply/ns1:Body/ns8:Response/ns8:InstanceMappingList)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>GenericResponseWithXref</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>