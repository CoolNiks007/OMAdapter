<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://vodafone.com.tr/ServiceCatalog/Business/AccountManagement/ModifyAccountGeneralData/v1" xmlns:ns5="http://vodafone.com.tr/ServiceCatalog/ServiceRequest" xmlns:ns6="http://vodafone.com.tr/EAI/Common/ResponseCodes" xmlns:pfx="http://vodafone.com.tr/EAI/Common/RequestEAI" xmlns:ns2="http://www.tibco.com/pe/DeployedVarsType" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentRequestInput/v1" xmlns:ns4="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns3="http://vodafone.com.tr/EAI/Common/Header" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx4="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://vodafone.com.tr/ServiceCatalog/Business/CustomerManagement/ModifyCustomerGeneralData/v1" xmlns:pfx2="http://vodafone.com.tr/EAI/Common/ResponseEAI" xmlns:pfx7="http://www.tibco.com/schemas/OrderManagement/Domains/OrderManagement/BusinessResources/Schemas/Schema.xsd">
    <xsd:import namespace="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentRequestInput/v1" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/OrderComponent/OrderComponentRequestInput.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/AccountManagement/ModifyAccountGeneralData/v1" schemaLocation="/Domains/ServiceCatalog/Business/AccountManagement/ModifyAccountGeneralData_v1/Schemas/ModifyAccountGeneralData.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/EAI/Common/RequestEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/RequestEAI.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/ServiceRequest" schemaLocation="/Domains/ServiceCatalog/BusinessResources/Schemas/ServiceRequest.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/EAI/Common/ResponseEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/ResponseEAI.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/CustomerManagement/ModifyCustomerGeneralData/v1" schemaLocation="/Domains/ServiceCatalog/Business/CustomerManagement/ModifyCustomerGeneralData_v1/Schemas/ModifyCustomerGeneralData.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd"/>
    <pd:name>Domains/OrderManagement/Business/OrderComponent/Billing/Kenan/ModifyCustomerGeneralData_v1/ModifyCustomerGeneralData.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="Input">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:RequestEAI"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>150</pd:startX>
    <pd:startY>63</pd:startY>
    <pd:returnBindings>
        <Output>
            <pfx2:ResponseEAI>
                <pfx2:Header>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ancestor-or-self::*/namespace::node()"/>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/@*"/>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/node()"/>
                </pfx2:Header>
                <pfx2:ResponseCodes>
                    <ns6:ResponseCode>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/ErrorCodes/Success"/>
                    </ns6:ResponseCode>
                </pfx2:ResponseCodes>
            </pfx2:ResponseEAI>
        </Output>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="Output">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx2:ResponseEAI"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>761</pd:endX>
    <pd:endY>61</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.vodafone.com.tr.com/1409674734495</pd:targetNamespace>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>464</pd:x>
        <pd:y>65</pd:y>
        <config>
            <element ref="pfx3:ModifyCustomerGeneralDataRequest"/>
        </config>
        <pd:inputBindings>
            <pfx3:ModifyCustomerGeneralDataRequest>
                <pfx3:Request>
                    <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns3:Attributes/ns3:Attribute[ns3:Name=$_globalVariables/ns2:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/OrderId]/ns3:Value">
                        <pfx3:ExternalId>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns3:Attributes/ns3:Attribute[ns3:Name=$_globalVariables/ns2:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/OrderId]/ns3:Value"/>
                        </pfx3:ExternalId>
                    </xsl:if>
                    <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns3:Attributes/ns3:Attribute[ns3:Name=$_globalVariables/ns2:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/OrderId]/ns3:Value">
                        <pfx3:ExternalComponentId>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns3:Attributes/ns3:Attribute[ns3:Name=$_globalVariables/ns2:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/OrderId]/ns3:Value"/>
                        </pfx3:ExternalComponentId>
                    </xsl:if>
                    <pfx3:Customer>
                        <pfx3:ContactData>
                            <pfx3:Email>
                                <xsl:value-of select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/ListOfCustomerContact/CustomerContact[1]/ContactEmail"/>
                            </pfx3:Email>
                            <xsl:if test="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/ListOfCustomerContact/CustomerContact[1]/ContactFaxPhone">
                                <pfx3:FaxNumber>
                                    <xsl:value-of select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/ListOfCustomerContact/CustomerContact[1]/ContactFaxPhone"/>
                                </pfx3:FaxNumber>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/ListOfCustomerContact/CustomerContact[1]/ContactFirstName">
                                <pfx3:FirstName>
                                    <xsl:value-of select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/ListOfCustomerContact/CustomerContact[1]/ContactFirstName"/>
                                </pfx3:FirstName>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/ListOfCustomerContact/CustomerContact[1]/ContactLastName">
                                <pfx3:LastName>
                                    <xsl:value-of select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/ListOfCustomerContact/CustomerContact[1]/ContactLastName"/>
                                </pfx3:LastName>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/ListOfCustomerContact/CustomerContact[1]/ContactPhone">
                                <pfx3:Phone>
                                    <xsl:value-of select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/ListOfCustomerContact/CustomerContact[1]/ContactPhone"/>
                                </pfx3:Phone>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/ListOfCustomerContact/CustomerContact[1]/ContactWorkPhone">
                                <pfx3:WorkPhone>
                                    <xsl:value-of select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/ListOfCustomerContact/CustomerContact[1]/ContactWorkPhone"/>
                                </pfx3:WorkPhone>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/ListOfCustomerContact/CustomerContact[1]/ContactPersonalId">
                                <pfx3:PersonalId>
                                    <xsl:value-of select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/ListOfCustomerContact/CustomerContact[1]/ContactPersonalId"/>
                                </pfx3:PersonalId>
                            </xsl:if>
                            <xsl:choose>
                                <xsl:when test="$Parse-XML/Order/OrderVIPFlag = 'Y'">
                                    <pfx3:DontPrintBillToContact>
                                        <xsl:value-of select="0"/>
                                    </pfx3:DontPrintBillToContact>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx3:DontPrintBillToContact>
                                        <xsl:value-of select="1"/>
                                    </pfx3:DontPrintBillToContact>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx3:ContactData>
                        <pfx3:CustomerData>
                            <pfx3:AccountCategory>
                                <pfx3:Segment>
                                    <xsl:value-of select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/CustAcctMSegment"/>
                                </pfx3:Segment>
                                <pfx3:Subclass>
                                    <xsl:value-of select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/CustAcctSubClass"/>
                                </pfx3:Subclass>
                            </pfx3:AccountCategory>
                            <pfx3:LanguageCode>
                                <xsl:value-of select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/CustAcctLanguage"/>
                            </pfx3:LanguageCode>
                            <pfx3:MarketCode>
                                <xsl:value-of select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/CustAcctOrganization"/>
                            </pfx3:MarketCode>
                            <pfx3:Title>
                                <xsl:value-of select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/ListOfCustomerContact/CustomerContact[1]/ContactSalutation"/>
                            </pfx3:Title>
                            <pfx3:Type>
                                <xsl:value-of select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/CustAcctType"/>
                            </pfx3:Type>
                            <pfx3:TaxId>
                                <xsl:value-of select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/CustAcctTaxId"/>
                            </pfx3:TaxId>
                            <pfx3:TaxOffice>
                                <xsl:value-of select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/CustAcctTaxOffice"/>
                            </pfx3:TaxOffice>
                            <xsl:if test="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/CustAcctLastName">
                                <pfx3:Name>
                                    <xsl:value-of select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[1]/CustAcctLastName"/>
                                </pfx3:Name>
                            </xsl:if>
                        </pfx3:CustomerData>
                        <pfx3:ListCustomers>
                            <pfx3:CustomerId>
                                <pfx3:ExternalId>
                                    <xsl:value-of select="$Parse-XML/Order/CustAcctCode"/>
                                </pfx3:ExternalId>
                            </pfx3:CustomerId>
                        </pfx3:ListCustomers>
                        <pfx3:EffectiveDate>
                            <xsl:value-of select="current-dateTime()"/>
                        </pfx3:EffectiveDate>
                    </pfx3:Customer>
                </pfx3:Request>
            </pfx3:ModifyCustomerGeneralDataRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse-XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>306</pd:x>
        <pd:y>66</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term ref="pfx4:Order"/>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Start/Input/pfx:RequestEAI/pfx:Body/*" element="ns1:Request"/>
        </pd:coercions>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns1:Request/ns1:OrderComponentDetails/ns1:XMLMessage/*[1]"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JMS Queue Sender">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>624</pd:x>
        <pd:y>65</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/GlobalCommonResources/Connections/JMS/JMS EAI Connection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/GlobalCommonResources/Connections/JMS/JMS EAI Properties.sharedjmsapp</ApplicationProperties>
            <InDataxsdString ref="ns5:ServiceRequest"/>
        </config>
        <pd:inputBindings>
            <ns4:ActivityInput>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns1:Request/ns1:ServiceCatalogQueue">
                    <destinationQueue>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns1:Request/ns1:ServiceCatalogQueue"/>
                    </destinationQueue>
                </xsl:if>
                <replyToQueue>
                    <xsl:value-of select="tib:concat-sequence-format(($_globalVariables/ns2:GlobalVariables/Constants/Company,$_globalVariables/ns2:GlobalVariables/Constants/ProjectName,$_globalVariables/ns2:GlobalVariables/Domains/OrderManagement/Name,$_globalVariables/ns2:GlobalVariables/Domains/OrderManagement/OrderComponent/Name,$_globalVariables/ns2:GlobalVariables/Constants/Layer/Business,$_globalVariables/ns2:GlobalVariables/Constants/QOS/Guarantee,$_globalVariables/ns2:GlobalVariables/Constants/RequestType/Reply),&quot;.&quot;)"/>
                </replyToQueue>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns3:Priority">
                    <JMSPriority>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns3:Priority"/>
                    </JMSPriority>
                </xsl:if>
                <Body>
                    <ns5:ServiceRequest>
                        <xsl:for-each select="$Start/Input/pfx:RequestEAI/pfx:Header">
                            <ns5:Header>
                                <xsl:if test="ns3:RequestId">
                                    <ns3:RequestId>
                                        <xsl:value-of select="ns3:RequestId"/>
                                    </ns3:RequestId>
                                </xsl:if>
                                <ns3:SourceSystem>
                                    <xsl:value-of select="ns3:SourceSystem"/>
                                </ns3:SourceSystem>
                                <ns3:ReplyExpected>
                                    <xsl:value-of select="ns3:ReplyExpected"/>
                                </ns3:ReplyExpected>
                                <xsl:if test="ns3:QoS">
                                    <ns3:QoS>
                                        <xsl:value-of select="ns3:QoS"/>
                                    </ns3:QoS>
                                </xsl:if>
                                <xsl:if test="ns3:Schedule">
                                    <ns3:Schedule>
                                        <xsl:value-of select="ns3:Schedule"/>
                                    </ns3:Schedule>
                                </xsl:if>
                                <xsl:if test="ns3:CorrelationId">
                                    <ns3:CorrelationId>
                                        <xsl:value-of select="ns3:CorrelationId"/>
                                    </ns3:CorrelationId>
                                </xsl:if>
                                <xsl:if test="ns3:Priority">
                                    <ns3:Priority>
                                        <xsl:value-of select="ns3:Priority"/>
                                    </ns3:Priority>
                                </xsl:if>
                                <xsl:copy-of select="ns3:Credentials"/>
                                <xsl:if test="ns3:ProxySystem">
                                    <ns3:ProxySystem>
                                        <xsl:value-of select="ns3:ProxySystem"/>
                                    </ns3:ProxySystem>
                                </xsl:if>
                                <xsl:if test="ns3:ForceSimulate">
                                    <ns3:ForceSimulate>
                                        <xsl:value-of select="ns3:ForceSimulate"/>
                                    </ns3:ForceSimulate>
                                </xsl:if>
                                <xsl:copy-of select="ns3:Attributes"/>
                            </ns5:Header>
                        </xsl:for-each>
                        <ns5:Body>
                            <xsl:copy-of select="$Map-Data/pfx3:ModifyCustomerGeneralDataRequest/pfx3:Request"/>
                        </ns5:Body>
                    </ns5:ServiceRequest>
                </Body>
            </ns4:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Parse-XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse-XML</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>JMS Queue Sender</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS Queue Sender</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>