<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns1="http://vodafone.com.tr/EAI/Common/Header" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentRequestInput/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx5="http://vodafone.com.tr/ServiceCatalog/ServiceRequest" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx4="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/OSMOrder.xsd" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd" xmlns:pfx2="http://vodafone.com.tr/ServiceCatalog/Business/SubscriberManagement/SuspendSubscriber/v1" xmlns:ns12="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx="http://vodafone.com.tr/EAI/Common/RequestEAI">
    <xsd:import namespace="http://vodafone.com.tr/EAI/Common/RequestEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/RequestEAI.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentRequestInput/v1" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/OrderComponent/OrderComponentRequestInput.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/SubscriberManagement/SuspendSubscriber/v1" schemaLocation="/Domains/ServiceCatalog/Business/SubscriberManagement/SuspendSubscriber_v1/Schemas/SuspendSubscriber.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/ServiceRequest" schemaLocation="/Domains/ServiceCatalog/BusinessResources/Schemas/ServiceRequest.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/OSMOrder.xsd" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/OSMOrder.xsd"/>
    <pd:name>Domains/OrderManagement/Business/OrderComponent/Billing/Kenan/SuspendSubscriber_v1/SuspendSubscriber.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="Input">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:RequestEAI"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>76</pd:startX>
    <pd:startY>61</pd:startY>
    <pd:returnBindings/>
    <pd:endName>End</pd:endName>
    <pd:endX>648</pd:endX>
    <pd:endY>61</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://vodafone.com.tr/1412635977272</pd:targetNamespace>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>323</pd:x>
        <pd:y>63</pd:y>
        <config>
            <element ref="pfx2:SuspendSubscriberRequest"/>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Parse-XML/OSMOrder/XMLMessage/*" element="pfx3:Order"/>
        </pd:coercions>
        <pd:inputBindings>
            <xsl:variable name="RootItem" select="if (count($Parse-XML/OSMOrder/XMLMessage/Order[1]/ListOfRootItem/RootItem[ComponentSubType='MOBILE' and ComponentType='MAIN'])>0)&#xA;then&#xA;$Parse-XML/OSMOrder/XMLMessage/Order[1]/ListOfRootItem/RootItem[ComponentSubType='MOBILE' and ComponentType='MAIN']&#xA;else&#xA;$Parse-XML/OSMOrder/XMLMessage/Order[1]/ListOfRootItem/RootItem[1]"/>
            <pfx2:SuspendSubscriberRequest>
                <pfx2:Request>
                    <pfx2:ExternalId>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns1:Attributes/ns1:Attribute[ns1:Name = $_globalVariables/ns2:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/OrderId]/ns1:Value"/>
                    </pfx2:ExternalId>
                    <pfx2:ExternalComponentId>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns1:Attributes/ns1:Attribute[ns1:Name = $_globalVariables/ns2:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/Id]/ns1:Value"/>
                    </pfx2:ExternalComponentId>
                    <pfx2:BillingAccountId>
                        <xsl:value-of select="$RootItem/BillAcctCode"/>
                    </pfx2:BillingAccountId>
                    <xsl:if test="$Parse-XML/OSMOrder/CategoryAction">
                        <pfx2:CategoryAction>
                            <xsl:value-of select="$Parse-XML/OSMOrder/CategoryAction"/>
                        </pfx2:CategoryAction>
                    </xsl:if>
                    <pfx2:CustomerId>
                        <xsl:value-of select="$RootItem/CustAcctCode"/>
                    </pfx2:CustomerId>
                    <pfx2:SubscriberIds>
                        <pfx2:MSISDN>
                            <xsl:value-of select="$RootItem/ServiceId"/>
                        </pfx2:MSISDN>
                    </pfx2:SubscriberIds>
                    <pfx2:SubscriberSuspensionData>
                        <xsl:choose>
                            <xsl:when test="upper-case($Parse-XML/OSMOrder/XMLMessage/Order[1]/OrderSourceSystem) = 'SIEBEL'">
                                <pfx2:EndDate>
                                    <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns2:GlobalVariables/Constants/Formats/Siebel/DateTime,$Parse-XML/OSMOrder/XMLMessage/Order[1]/OrderDueDate)"/>
                                </pfx2:EndDate>
                            </xsl:when>
                            <xsl:when test="tib:validate-dateTime($_globalVariables/ns2:GlobalVariables/Constants/Formats/Siebel/DateTime,$Parse-XML/OSMOrder/XMLMessage/Order[1]/OrderDueDate)">
                                <pfx2:EndDate>
                                    <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns2:GlobalVariables/Constants/Formats/Siebel/DateTime,$Parse-XML/OSMOrder/XMLMessage/Order[1]/OrderDueDate)"/>
                                </pfx2:EndDate>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx2:EndDate>
                                    <xsl:value-of select="$Parse-XML/OSMOrder/XMLMessage/Order[1]/OrderDueDate"/>
                                </pfx2:EndDate>
                            </xsl:otherwise>
                        </xsl:choose>
                        <pfx2:ServiceStatus>
                            <xsl:value-of select="$RootItem/ActionReason"/>
                        </pfx2:ServiceStatus>
                    </pfx2:SubscriberSuspensionData>
                </pfx2:Request>
            </pfx2:SuspendSubscriberRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>207</pd:x>
        <pd:y>61</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term ref="pfx4:OSMOrder"/>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Start/Input/pfx:RequestEAI/pfx:Body/*" element="ns:Request"/>
        </pd:coercions>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:XMLMessage/*[1]"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JMS-Queue-Sender">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>462</pd:x>
        <pd:y>62</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/GlobalCommonResources/Connections/JMS/JMS EAI Connection.sharedjmscon</ConnectionReference>
            <InDataxsdString ref="pfx5:ServiceRequest"/>
        </config>
        <pd:inputBindings>
            <ns12:ActivityInput>
                <destinationQueue>
                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ServiceCatalogQueue"/>
                </destinationQueue>
                <replyToQueue>
                    <xsl:value-of select="tib:concat-sequence-format(($_globalVariables/ns2:GlobalVariables/Constants/Company,$_globalVariables/ns2:GlobalVariables/Constants/ProjectName,$_globalVariables/ns2:GlobalVariables/Domains/OrderManagement/Name,$_globalVariables/ns2:GlobalVariables/Domains/OrderManagement/OrderComponent/Name,$_globalVariables/ns2:GlobalVariables/Constants/Layer/Business,$_globalVariables/ns2:GlobalVariables/Constants/QOS/Guarantee,$_globalVariables/ns2:GlobalVariables/Constants/RequestType/Reply),&quot;.&quot;)"/>
                </replyToQueue>
                <JMSPriority>
                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns1:Priority"/>
                </JMSPriority>
                <Body>
                    <pfx5:ServiceRequest>
                        <xsl:for-each select="$Start/Input/pfx:RequestEAI/pfx:Header">
                            <pfx5:Header>
                                <xsl:if test="ns1:RequestId">
                                    <ns1:RequestId>
                                        <xsl:value-of select="ns1:RequestId"/>
                                    </ns1:RequestId>
                                </xsl:if>
                                <ns1:SourceSystem>
                                    <xsl:value-of select="ns1:SourceSystem"/>
                                </ns1:SourceSystem>
                                <ns1:ReplyExpected>
                                    <xsl:value-of select="ns1:ReplyExpected"/>
                                </ns1:ReplyExpected>
                                <xsl:if test="ns1:QoS">
                                    <ns1:QoS>
                                        <xsl:value-of select="ns1:QoS"/>
                                    </ns1:QoS>
                                </xsl:if>
                                <xsl:if test="ns1:Schedule">
                                    <ns1:Schedule>
                                        <xsl:value-of select="ns1:Schedule"/>
                                    </ns1:Schedule>
                                </xsl:if>
                                <xsl:if test="ns1:CorrelationId">
                                    <ns1:CorrelationId>
                                        <xsl:value-of select="ns1:CorrelationId"/>
                                    </ns1:CorrelationId>
                                </xsl:if>
                                <xsl:if test="ns1:Priority">
                                    <ns1:Priority>
                                        <xsl:value-of select="ns1:Priority"/>
                                    </ns1:Priority>
                                </xsl:if>
                                <xsl:for-each select="ns1:Credentials">
                                    <ns1:Credentials>
                                        <ns1:ApplicationId>
                                            <xsl:value-of select="ns1:ApplicationId"/>
                                        </ns1:ApplicationId>
                                        <ns1:User>
                                            <xsl:value-of select="ns1:User"/>
                                        </ns1:User>
                                        <xsl:if test="ns1:Password">
                                            <ns1:Password>
                                                <xsl:value-of select="ns1:Password"/>
                                            </ns1:Password>
                                        </xsl:if>
                                    </ns1:Credentials>
                                </xsl:for-each>
                                <xsl:if test="ns1:ProxySystem">
                                    <ns1:ProxySystem>
                                        <xsl:value-of select="ns1:ProxySystem"/>
                                    </ns1:ProxySystem>
                                </xsl:if>
                                <xsl:if test="ns1:ForceSimulate">
                                    <ns1:ForceSimulate>
                                        <xsl:value-of select="ns1:ForceSimulate"/>
                                    </ns1:ForceSimulate>
                                </xsl:if>
                                <xsl:for-each select="ns1:Attributes">
                                    <ns1:Attributes>
                                        <xsl:for-each select="ns1:Attribute">
                                            <ns1:Attribute>
                                                <ns1:Name>
                                                    <xsl:value-of select="ns1:Name"/>
                                                </ns1:Name>
                                                <ns1:Value>
                                                    <xsl:value-of select="ns1:Value"/>
                                                </ns1:Value>
                                            </ns1:Attribute>
                                        </xsl:for-each>
                                    </ns1:Attributes>
                                </xsl:for-each>
                            </pfx5:Header>
                        </xsl:for-each>
                        <pfx5:Body>
                            <xsl:copy-of select="$Map-Data/pfx2:SuspendSubscriberRequest/pfx2:Request"/>
                        </pfx5:Body>
                    </pfx5:ServiceRequest>
                </Body>
            </ns12:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>JMS-Queue-Sender</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS-Queue-Sender</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>