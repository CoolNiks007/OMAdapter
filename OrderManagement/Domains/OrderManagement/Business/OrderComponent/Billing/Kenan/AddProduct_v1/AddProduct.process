<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentRequestInput/v1" xmlns:pfx10="http://vodafone.com.tr/ServiceCatalog/Business/ProductInquiries/GetOfferPricePlanInfo/v1" xmlns:pfx41="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/OSMOrder.xsd" xmlns:pfx5="http://vodafone.com.tr/ServiceCatalog/ServiceRequest" xmlns:pfx4="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://vodafone.com.tr/ServiceCatalog/Business/Billing/AddProducts/v1" xmlns:pfx2="http://vodafone.com.tr/EAI/Common/ResponseEAI" xmlns:pfx9="http://vodafone.com.tr/ServiceCatalog/Business/CDRManagement/ManageGroup/v1" xmlns:pfx8="http://vodafone.com.tr/ServiceCatalog/ServiceReply" xmlns:pfx7="http://vodafone.com.tr/ServiceCatalog/Business/SubscriberInquiries/GetRemainingBalance/v1" xmlns:pfx6="http://vodafone.com.tr/ServiceCatalog/Business/ProductManagement/AddProducts/v1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns32="urn:com:metasolv:oms:xmlapi:1" xmlns:ns12="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentResponseInput/v1" xmlns:ns5="http://vodafone.com.tr/ServiceCatalog/Business/PenaltyInquiries/GetPenalties/v1" xmlns:ns31="http://vodafone.com.tr/ServiceCatalog/Business/PenaltyInquiries/CalculatePenaltyType/v1" xmlns:pfx="http://vodafone.com.tr/EAI/Common/RequestEAI" xmlns:eai="java://com.telco.eai.EAIFunctions" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://vodafone.com.tr/EAI/Common/ResponseCodes" xmlns:ns3="http://vodafone.com.tr/EAI/Common/Header" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx21="http://vodafone.com.tr/ServiceCatalog/Business/ProductManagement/DeleteProducts/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://vodafone.com.tr/EAI/Common/RequestEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/RequestEAI.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/EAI/Common/ResponseEAI" schemaLocation="/GlobalCommonResources/Schemas/Common/ResponseEAI.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/OrderManagment/Business/OrderComponent/OrderComponentRequestInput/v1" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/OrderComponent/OrderComponentRequestInput.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/ServiceRequest" schemaLocation="/Domains/ServiceCatalog/BusinessResources/Schemas/ServiceRequest.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/Billing/AddProducts/v1" schemaLocation="/Domains/ServiceCatalog/Business/Billing/AddProducts_v1/Schemas/AddProducts.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd" schemaLocation="/Domains/OrderManagement/BusinessResources/Schemas/SiebelOrder.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/ServiceReply" schemaLocation="/Domains/ServiceCatalog/BusinessResources/Schemas/ServiceReply.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/ProductManagement/AddCampaigns/v1" schemaLocation="/Domains/ServiceCatalog/Business/ProductManagement/AddCampaigns_v1/Schemas/AddCampaigns.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/CDRManagement/ManageGroup/v1" schemaLocation="/Domains/ServiceCatalog/Business/CDRManagement/ManageGroup_v1/Schemas/ManageGroup.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/ProductManagement/AddProducts/v1" schemaLocation="/Domains/ServiceCatalog/Business/ProductManagement/AddProducts_v1/Schemas/AddProducts.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/SubscriberInquiries/GetRemainingBalance/v1" schemaLocation="/Domains/ServiceCatalog/Business/SubscriberInquiries/GetRemainingBalance_v1/Schemas/GetRemainingBalance.xsd"/>
    <xsd:import namespace="http://vodafone.com.tr/ServiceCatalog/Business/ProductInquiries/GetOfferPricePlanInfo/v1" schemaLocation="/Domains/ServiceCatalog/Business/ProductInquiries/GetOfferPricePlanInfo_v1/Schemas/GetOfferPricePlanInfo.xsd"/>
    <pd:name>Domains/OrderManagement/Business/OrderComponent/Billing/Kenan/AddProduct_v1/AddProduct.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="Input">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:RequestEAI"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>47</pd:startX>
    <pd:startY>355</pd:startY>
    <pd:returnBindings>
        <Output>
            <pfx2:ResponseEAI>
                <pfx2:Header>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ancestor-or-self::*/namespace::node()"/>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/@*"/>
                    <xsl:copy-of select="$Start/Input/pfx:RequestEAI/pfx:Header/node()"/>
                </pfx2:Header>
                <pfx2:ResponseCodes>
                    <ns4:ResponseCode>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/ErrorCodes/Success"/>
                    </ns4:ResponseCode>
                </pfx2:ResponseCodes>
            </pfx2:ResponseEAI>
        </Output>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="Output">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx2:ResponseEAI"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>1051</pd:endX>
    <pd:endY>349</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://vodafone.com.tr/1407237293059</pd:targetNamespace>
    <pd:activity name="Fail Order Component">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1043</pd:x>
        <pd:y>986</pd:y>
        <config>
            <processName>/Domains/OrderManagement/BusinessResources/Processes/OrderComponent/OrderComponentResponse.process</processName>
        </config>
        <pd:inputBindings>
            <Input>
                <ns12:Request>
                    <ns12:OcDetails>
                        <ns12:Id>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id"/>
                        </ns12:Id>
                        <ns12:Name>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Name"/>
                        </ns12:Name>
                        <ns12:Scenario>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Scenario"/>
                        </ns12:Scenario>
                        <ns12:OrderId>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId"/>
                        </ns12:OrderId>
                        <ns12:CorrelationID>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:CorrelationID"/>
                        </ns12:CorrelationID>
                        <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Cartridge">
                            <ns12:Cartridge>
                                <ns12:Name>
                                    <xsl:value-of select="ns:Name"/>
                                </ns12:Name>
                                <ns12:Version>
                                    <xsl:value-of select="ns:Version"/>
                                </ns12:Version>
                                <ns12:Source>
                                    <xsl:value-of select="ns:Source"/>
                                </ns12:Source>
                            </ns12:Cartridge>
                        </xsl:for-each>
                    </ns12:OcDetails>
                    <ns12:ServiceReply>
                        <xsl:copy-of select="if (string-length ($JMS-Queue-Requestor/ns2:ActivityOutput/Body/pfx8:ServiceReply/pfx8:Header) >0 ) then&#xA;$JMS-Queue-Requestor/ns2:ActivityOutput/Body/pfx8:ServiceReply/pfx8:Header&#xA;else&#xA;$JMS-Queue-Requestor-1/ns2:ActivityOutput/Body/pfx8:ServiceReply/pfx8:Header"/>
                        <pfx8:Body>
                            <ns32:TelcoOperationResponse>
                                <Id>
                                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id"/>
                                </Id>
                                <Name>
                                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Name"/>
                                </Name>
                                <OrderId>
                                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId"/>
                                </OrderId>
                                <StatusCode>
                                    <xsl:value-of select="if (string-length ($JMS-Queue-Requestor/ns2:ActivityOutput/Body/pfx8:ServiceReply/pfx8:Header/ns4:ResponseCode) >0) then&#xA;$JMS-Queue-Requestor/ns2:ActivityOutput/Body/pfx8:ServiceReply/pfx8:Header/ns4:ResponseCode&#xA;else&#xA;$JMS-Queue-Requestor-1/ns2:ActivityOutput/Body/pfx8:ServiceReply/pfx8:Header/ns4:ResponseCode"/>
                                </StatusCode>
                                <StatusMessage>
                                    <xsl:value-of select="if (string-length ($JMS-Queue-Requestor/ns2:ActivityOutput/Body/pfx8:ServiceReply/pfx8:Header/ns4:ResponseMsg) >0) then&#xA;concat($JMS-Queue-Requestor/ns2:ActivityOutput/Body/pfx8:ServiceReply/pfx8:Header/ns4:ResponseMsg, ' - ' , $JMS-Queue-Requestor/ns2:ActivityOutput/Body/pfx8:ServiceReply/pfx8:Header/ns4:ErrorDescription)&#xA;else&#xA;concat($JMS-Queue-Requestor-1/ns2:ActivityOutput/Body/pfx8:ServiceReply/pfx8:Header/ns4:ResponseMsg, ' - ', $JMS-Queue-Requestor-1/ns2:ActivityOutput/Body/pfx8:ServiceReply/pfx8:Header/ns4:ErrorDescription)"/>
                                </StatusMessage>
                            </ns32:TelcoOperationResponse>
                        </pfx8:Body>
                    </ns12:ServiceReply>
                </ns12:Request>
            </Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetAttributesByProductCategory">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>385</pd:x>
        <pd:y>351</pd:y>
        <config>
            <processName>/Domains/OrderManagement/BusinessResources/Processes/ProductManagement/GetAttributesByProductCategory.process</processName>
        </config>
        <pd:inputBindings>
            <Input>
                <xsl:variable name="rootItem" select="$Parse-XML/Order/ListOfRootItem/RootItem[Action = ('New','Existing')]"/>
                <xsl:for-each select="$rootItem/EBUProductCategory">
                    <ProductCategory>
                        <xsl:value-of select="."/>
                    </ProductCategory>
                </xsl:for-each>
                <xsl:for-each select="$rootItem/ListOfChildItem/ChildItem/EBUProductCategory">
                    <ProductCategory>
                        <xsl:value-of select="."/>
                    </ProductCategory>
                </xsl:for-each>
            </Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JMS Queue Requestor">
        <pd:type>com.tibco.plugin.jms.JMSQueueRequestReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueRequestReplyActivity</pd:resourceType>
        <pd:x>631</pd:x>
        <pd:y>982</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%Domains/OrderManagement/OrderComponent/Constants/AuxQueues/GetRemainingBalance%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/GlobalCommonResources/Connections/JMS/JMS EAI Connection.sharedjmscon</ConnectionReference>
            <InDataxsdString ref="pfx5:ServiceRequest"/>
            <OutDataxsdString ref="pfx8:ServiceReply"/>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <JMSExpiration>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/OrderComponent/OCSyncRequestJMSMsgExpiration"/>
                </JMSExpiration>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns3:Priority">
                    <JMSPriority>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns3:Priority"/>
                    </JMSPriority>
                </xsl:if>
                <requestTimeout>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/OrderComponent/OCSyncRequestTimeout"/>
                </requestTimeout>
                <Body>
                    <pfx5:ServiceRequest>
                        <xsl:for-each select="$Start/Input/pfx:RequestEAI/pfx:Header">
                            <pfx5:Header>
                                <xsl:if test="ns3:RequestId">
                                    <ns3:RequestId>
                                        <xsl:value-of select="ns3:RequestId"/>
                                    </ns3:RequestId>
                                </xsl:if>
                                <ns3:SourceSystem>
                                    <xsl:value-of select="ns3:SourceSystem"/>
                                </ns3:SourceSystem>
                                <ns3:ReplyExpected>
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Constants/Reply/Now"/>
                                </ns3:ReplyExpected>
                                <ns3:QoS>
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Constants/QOS/Reliable"/>
                                </ns3:QoS>
                                <xsl:if test="ns3:Schedule">
                                    <ns3:Schedule>
                                        <xsl:value-of select="ns3:Schedule"/>
                                    </ns3:Schedule>
                                </xsl:if>
                                <xsl:if test="ns3:CorrelationId">
                                    <ns3:CorrelationId>
                                        <xsl:value-of select="ns3:CorrelationId"/>
                                    </ns3:CorrelationId>
                                </xsl:if>
                                <xsl:if test="ns3:Priority">
                                    <ns3:Priority>
                                        <xsl:value-of select="ns3:Priority"/>
                                    </ns3:Priority>
                                </xsl:if>
                                <xsl:for-each select="ns3:Credentials">
                                    <ns3:Credentials>
                                        <ns3:ApplicationId>
                                            <xsl:value-of select="ns3:ApplicationId"/>
                                        </ns3:ApplicationId>
                                        <ns3:User>
                                            <xsl:value-of select="ns3:User"/>
                                        </ns3:User>
                                        <xsl:if test="ns3:Password">
                                            <ns3:Password>
                                                <xsl:value-of select="ns3:Password"/>
                                            </ns3:Password>
                                        </xsl:if>
                                    </ns3:Credentials>
                                </xsl:for-each>
                                <xsl:if test="ns3:ProxySystem">
                                    <ns3:ProxySystem>
                                        <xsl:value-of select="ns3:ProxySystem"/>
                                    </ns3:ProxySystem>
                                </xsl:if>
                                <xsl:if test="ns3:ForceSimulate">
                                    <ns3:ForceSimulate>
                                        <xsl:value-of select="ns3:ForceSimulate"/>
                                    </ns3:ForceSimulate>
                                </xsl:if>
                                <xsl:for-each select="ns3:Attributes">
                                    <ns3:Attributes>
                                        <xsl:for-each select="ns3:Attribute">
                                            <ns3:Attribute>
                                                <ns3:Name>
                                                    <xsl:value-of select="ns3:Name"/>
                                                </ns3:Name>
                                                <ns3:Value>
                                                    <xsl:value-of select="ns3:Value"/>
                                                </ns3:Value>
                                            </ns3:Attribute>
                                        </xsl:for-each>
                                    </ns3:Attributes>
                                </xsl:for-each>
                            </pfx5:Header>
                        </xsl:for-each>
                        <pfx5:Body>
                            <xsl:copy-of select="$Map-Data-GetBalance/pfx7:Request"/>
                        </pfx5:Body>
                    </pfx5:ServiceRequest>
                </Body>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JMS Queue Sender">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>904</pd:x>
        <pd:y>351</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/GlobalCommonResources/Connections/JMS/JMS EAI Connection.sharedjmscon</ConnectionReference>
            <InDataxsdString ref="pfx5:ServiceRequest"/>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <destinationQueue>
                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:ServiceCatalogQueue"/>
                </destinationQueue>
                <replyToQueue>
                    <xsl:value-of select="tib:concat-sequence-format(($_globalVariables/ns1:GlobalVariables/Constants/Company,$_globalVariables/ns1:GlobalVariables/Constants/ProjectName,$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/Name,$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/OrderComponent/Name,$_globalVariables/ns1:GlobalVariables/Constants/Layer/Business,$_globalVariables/ns1:GlobalVariables/Constants/QOS/Guarantee,$_globalVariables/ns1:GlobalVariables/Constants/RequestType/Reply),&quot;.&quot;)"/>
                </replyToQueue>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns3:Priority">
                    <JMSPriority>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns3:Priority"/>
                    </JMSPriority>
                </xsl:if>
                <Body>
                    <pfx5:ServiceRequest>
                        <xsl:for-each select="$Start/Input/pfx:RequestEAI/pfx:Header">
                            <pfx5:Header>
                                <xsl:if test="ns3:RequestId">
                                    <ns3:RequestId>
                                        <xsl:value-of select="ns3:RequestId"/>
                                    </ns3:RequestId>
                                </xsl:if>
                                <ns3:SourceSystem>
                                    <xsl:value-of select="ns3:SourceSystem"/>
                                </ns3:SourceSystem>
                                <ns3:ReplyExpected>
                                    <xsl:value-of select="ns3:ReplyExpected"/>
                                </ns3:ReplyExpected>
                                <xsl:if test="ns3:QoS">
                                    <ns3:QoS>
                                        <xsl:value-of select="ns3:QoS"/>
                                    </ns3:QoS>
                                </xsl:if>
                                <xsl:if test="ns3:Schedule">
                                    <ns3:Schedule>
                                        <xsl:value-of select="ns3:Schedule"/>
                                    </ns3:Schedule>
                                </xsl:if>
                                <xsl:if test="ns3:CorrelationId">
                                    <ns3:CorrelationId>
                                        <xsl:value-of select="ns3:CorrelationId"/>
                                    </ns3:CorrelationId>
                                </xsl:if>
                                <xsl:if test="ns3:Priority">
                                    <ns3:Priority>
                                        <xsl:value-of select="ns3:Priority"/>
                                    </ns3:Priority>
                                </xsl:if>
                                <xsl:for-each select="ns3:Credentials">
                                    <ns3:Credentials>
                                        <ns3:ApplicationId>
                                            <xsl:value-of select="ns3:ApplicationId"/>
                                        </ns3:ApplicationId>
                                        <ns3:User>
                                            <xsl:value-of select="ns3:User"/>
                                        </ns3:User>
                                        <xsl:if test="ns3:Password">
                                            <ns3:Password>
                                                <xsl:value-of select="ns3:Password"/>
                                            </ns3:Password>
                                        </xsl:if>
                                    </ns3:Credentials>
                                </xsl:for-each>
                                <xsl:if test="ns3:ProxySystem">
                                    <ns3:ProxySystem>
                                        <xsl:value-of select="ns3:ProxySystem"/>
                                    </ns3:ProxySystem>
                                </xsl:if>
                                <xsl:if test="ns3:ForceSimulate">
                                    <ns3:ForceSimulate>
                                        <xsl:value-of select="ns3:ForceSimulate"/>
                                    </ns3:ForceSimulate>
                                </xsl:if>
                                <xsl:for-each select="ns3:Attributes">
                                    <ns3:Attributes>
                                        <xsl:for-each select="ns3:Attribute">
                                            <ns3:Attribute>
                                                <ns3:Name>
                                                    <xsl:value-of select="ns3:Name"/>
                                                </ns3:Name>
                                                <ns3:Value>
                                                    <xsl:value-of select="ns3:Value"/>
                                                </ns3:Value>
                                            </ns3:Attribute>
                                        </xsl:for-each>
                                    </ns3:Attributes>
                                </xsl:for-each>
                            </pfx5:Header>
                        </xsl:for-each>
                        <pfx5:Body>
                            <xsl:choose>
                                <xsl:when test="string-length($Map-Data-M2M/pfx6:Request/pfx6:ExternalId)!=0">
                                    <xsl:copy-of select="$Map-Data-M2M/pfx6:Request"/>
                                </xsl:when>
                                <xsl:when test="string-length($Map-Data-MPBX/pfx6:Request/pfx6:ExternalId)!=0">
                                    <xsl:copy-of select="$Map-Data-MPBX/pfx6:Request"/>
                                </xsl:when>
                                <xsl:when test="string-length($Map-Data-MTT/pfx6:Request/pfx6:ExternalId)!=0">
                                    <xsl:copy-of select="$Map-Data-MTT/pfx6:Request"/>
                                </xsl:when>
                                <xsl:when test="string-length($Map-Data-VPN/pfx6:Request/pfx6:ExternalId)!=0">
                                    <xsl:copy-of select="$Map-Data-VPN/pfx6:Request"/>
                                </xsl:when>
                                <xsl:when test="string-length($Map-Data-VSMM-Consultancy/pfx6:Request/pfx6:ExternalId)!=0">
                                    <xsl:copy-of select="$Map-Data-VSMM-Consultancy/pfx6:Request"/>
                                </xsl:when>
                                <xsl:when test="string-length($Map-Data-SVB-Data-Discount/pfx6:Request/pfx6:ExternalId)!=0">
                                    <xsl:copy-of select="$Map-Data-SVB-Data-Discount/pfx6:Request"/>
                                </xsl:when>
                                <xsl:when test="string-length($Map-Data-Discount/pfx6:Request/pfx6:ExternalId)!=0">
                                    <xsl:copy-of select="$Map-Data-Discount/pfx6:Request"/>
                                </xsl:when>
                                <xsl:when test="string-length($Map-Data-MAF-Discount/pfx6:Request/pfx6:ExternalId)!=0">
                                    <xsl:copy-of select="$Map-Data-MAF-Discount/pfx6:Request"/>
                                </xsl:when>
                                <xsl:when test="string-length($Map-Data-Fee/pfx6:Request/pfx6:ExternalId)!=0">
                                    <xsl:copy-of select="$Map-Data-Fee/pfx6:Request"/>
                                </xsl:when>
                                <xsl:when test="string-length($Map-Data-EnterpriceIQ/pfx6:Request/pfx6:ExternalId)!=0">
                                    <xsl:copy-of select="$Map-Data-EnterpriceIQ/pfx6:Request"/>
                                </xsl:when>
                                <xsl:when test="string-length($Map-Data-None-Recouring-Change/pfx6:Request/pfx6:ExternalId)!=0">
                                    <xsl:copy-of select="$Map-Data-None-Recouring-Change/pfx6:Request"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:copy-of select="$Map-Data/pfx6:Request"/>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx5:Body>
                    </pfx5:ServiceRequest>
                </Body>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>657</pd:x>
        <pd:y>874</pd:y>
        <config>
            <element ref="pfx6:Request"/>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$JMS-Queue-Requestor/ns2:ActivityOutput/Body/pfx8:ServiceReply/pfx8:Body/*" element="pfx7:Response"/>
        </pd:coercions>
        <pd:inputBindings>
            <xsl:variable name="rootItem" select="$Parse-XML/Order/ListOfRootItem/RootItem[&#xA;&#x9;(Action = ('New','Existing','Resume') or (ActionReason=('217','216') and ActionType ='116'))&#xA;&#x9;and&#xA;&#x9;not(ProductCatalogId=('26108','17000','17100','17200','17300','17400','17500','17600','17700','17800','17900','18000','18100','18200','18300','5000','5005','60007','53002','53007','53008','53001','53003','53000','53006','53005','53004','53009','23000','10900','21400','1600','40000','3000','10900','10013','4013','7013','8013','9013','4014','7027','8018','9014','10017','17006'))&#xA;]"/>
            <xsl:variable name="HdPassport" select="$Parse-XML/Order/ListOfRootItem/RootItem/ListOfChildItem/ChildItem[ProductCatalogId='17006' and Action =('New','Resume')]"/>
            <xsl:variable name="BillingAccount" select="$Parse-XML/Order/ListOfBillingAccount/BillingAccount[BillAcctCode=$rootItem/BillAcctCode]"/>
            <xsl:variable name="customerAccount" select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[CustAcctCode=$rootItem/CustAcctCode]"/>
            <xsl:choose>
                <xsl:when test="$Parse-XML/Order/OrderType='Campaign Management'">
                    <pfx6:Request>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId">
                            <pfx6:ExternalId>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId"/>
                            </pfx6:ExternalId>
                        </xsl:if>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id">
                            <pfx6:ExternalComponentId>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id"/>
                            </pfx6:ExternalComponentId>
                        </xsl:if>
                        <pfx6:ProductList>
                            <pfx6:Product>
                                <pfx6:ActionReason>
                                    <xsl:value-of select="$rootItem/ActionReason"/>
                                </pfx6:ActionReason>
                                <xsl:if test="string-length($Parse-XML/Order/OrderFutureDatedFlag)>0">
                                    <xsl:if test="$Parse-XML/Order/OrderFutureDatedFlag">
                                        <pfx6:isFDOOrder>
                                            <xsl:value-of select="$Parse-XML/Order/OrderFutureDatedFlag"/>
                                        </pfx6:isFDOOrder>
                                    </xsl:if>
                                </xsl:if>
                                <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $Parse-XML/Order/OrderCreationDate)">
                                    <pfx6:OrderCreationDate>
                                        <xsl:value-of select="tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $Parse-XML/Order/OrderCreationDate)"/>
                                    </pfx6:OrderCreationDate>
                                </xsl:if>
                                <pfx6:ProductDuration>
                                    <xsl:if test="string-length($rootItem/EndDate)>0">
                                        <pfx6:EndDate>
                                            <xsl:value-of select="$rootItem/EndDate"/>
                                        </pfx6:EndDate>
                                    </xsl:if>
                                    <xsl:choose>
                                        <xsl:when test="string-length($GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value)>0">
                                            <pfx6:StartDate>
                                                <xsl:value-of select="$GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value"/>
                                            </pfx6:StartDate>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <pfx6:StartDate>
                                                <xsl:value-of select="$rootItem/StartDate"/>
                                            </pfx6:StartDate>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </pfx6:ProductDuration>
                                <pfx6:ListAttributes>
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="'Segment'"/>
                                        </pfx6:Name>
                                        <xsl:choose>
                                            <xsl:when test="$rootItem/CustAcctType = '101'">
                                                <pfx6:Value>
                                                    <xsl:value-of select="'EBU'"/>
                                                </pfx6:Value>
                                            </xsl:when>
                                            <xsl:when test="$rootItem/CustAcctType = '102'">
                                                <pfx6:Value>
                                                    <xsl:value-of select="'CBU'"/>
                                                </pfx6:Value>
                                            </xsl:when>
                                        </xsl:choose>
                                    </pfx6:Atribute>
                                    <xsl:for-each select="$GetAttributesByProductCategory/Output/ProductCategory[Name=$rootItem/EBUProductCategory]/Attribute">
                                        <xsl:variable name="_attributeName" select="."/>
                                        <xsl:variable name="_attribute" select="$rootItem/ListOfRootItemAttribute/RootItemAttribute[Name=$_attributeName][1]"/>
                                        <pfx6:Atribute>
                                            <pfx6:Name>
                                                <xsl:value-of select="$_attribute/Name"/>
                                            </pfx6:Name>
                                            <xsl:if test="$_attribute/Value">
                                                <pfx6:Value>
                                                    <xsl:value-of select="$_attribute/Value"/>
                                                </pfx6:Value>
                                            </xsl:if>
                                            <pfx6:OldValue>
                                                <xsl:value-of select="$_attribute/PreviousValue"/>
                                            </pfx6:OldValue>
                                        </pfx6:Atribute>
                                    </xsl:for-each>
                                </pfx6:ListAttributes>
                                <pfx6:ProductId>
                                    <pfx6:Id>
                                        <xsl:value-of select="$rootItem/ProductCatalogId"/>
                                    </pfx6:Id>
                                    <xsl:if test="$rootItem/IntegrationId">
                                        <pfx6:InstanceId>
                                            <xsl:value-of select="$rootItem/IntegrationId"/>
                                        </pfx6:InstanceId>
                                    </xsl:if>
                                </pfx6:ProductId>
                                <pfx6:ProductCustomerData>
                                    <pfx6:ExternalBillingAccountId>
                                        <xsl:value-of select="$rootItem/BillAcctCode"/>
                                    </pfx6:ExternalBillingAccountId>
                                    <pfx6:MSISDN>
                                        <xsl:value-of select="$rootItem/ServiceId"/>
                                    </pfx6:MSISDN>
                                    <pfx6:ListAttributes>
                                        <pfx6:Atribute>
                                            <pfx6:Name>
                                                <xsl:value-of select="&quot;REFERENCE_ID&quot;"/>
                                            </pfx6:Name>
                                            <pfx6:Value>
                                                <xsl:value-of select="$rootItem/ListOfRootItemAttribute/RootItemAttribute[Name = &quot;REFERENCE_ID&quot;]/Value"/>
                                            </pfx6:Value>
                                        </pfx6:Atribute>
                                    </pfx6:ListAttributes>
                                </pfx6:ProductCustomerData>
                                <xsl:if test="$rootItem/ActionType='Free_Resource'">
                                    <pfx6:UsageRate>
                                        <xsl:if test="$rootItem/ListOfRootItemAttribute/RootItemAttribute[Name= 'Amount']/Value">
                                            <pfx6:AmountFree>
                                                <xsl:value-of select="$rootItem/ListOfRootItemAttribute/RootItemAttribute[Name= 'Amount']/Value"/>
                                            </pfx6:AmountFree>
                                        </xsl:if>
                                    </pfx6:UsageRate>
                                </xsl:if>
                                <xsl:if test="$rootItem/ActionType='Optional_Discount'">
                                    <pfx6:Discount>
                                        <xsl:variable name="_amountType" select="$rootItem/ListOfRootItemAttribute/RootItemAttribute[Name= 'AmountType']/Value"/>
                                        <xsl:variable name="_amount" select="$rootItem/ListOfRootItemAttribute/RootItemAttribute[Name= 'Amount']/Value"/>
                                        <xsl:if test="$_amountType='Unit'">
                                            <xsl:if test="$_amount">
                                                <pfx6:Amount>
                                                    <xsl:value-of select="$_amount"/>
                                                </pfx6:Amount>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="$_amountType='Percentage'">
                                            <xsl:if test="$_amount">
                                                <pfx6:Percentage>
                                                    <xsl:value-of select="$_amount"/>
                                                </pfx6:Percentage>
                                            </xsl:if>
                                        </xsl:if>
                                    </pfx6:Discount>
                                </xsl:if>
                            </pfx6:Product>
                        </pfx6:ProductList>
                    </pfx6:Request>
                </xsl:when>
                <xsl:when test="$Parse-XML/Order/OrderType='Print Copy of Invoice'">
                    <pfx6:Request>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId">
                            <pfx6:ExternalId>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId"/>
                            </pfx6:ExternalId>
                        </xsl:if>
                        <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id">
                            <pfx6:ExternalComponentId>
                                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id"/>
                            </pfx6:ExternalComponentId>
                        </xsl:if>
                        <pfx6:ProductList>
                            <pfx6:Product>
                                <xsl:if test="string-length($Parse-XML/Order/OrderFutureDatedFlag)>0">
                                    <xsl:if test="$Parse-XML/Order/OrderFutureDatedFlag">
                                        <pfx6:isFDOOrder>
                                            <xsl:value-of select="$Parse-XML/Order/OrderFutureDatedFlag"/>
                                        </pfx6:isFDOOrder>
                                    </xsl:if>
                                </xsl:if>
                                <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $Parse-XML/Order/OrderCreationDate)">
                                    <pfx6:OrderCreationDate>
                                        <xsl:value-of select="tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $Parse-XML/Order/OrderCreationDate)"/>
                                    </pfx6:OrderCreationDate>
                                </xsl:if>
                                <pfx6:ProductDuration>
                                    <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns3:CreationTimestamp">
                                        <pfx6:StartDate>
                                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns3:CreationTimestamp"/>
                                        </pfx6:StartDate>
                                    </xsl:if>
                                </pfx6:ProductDuration>
                                <pfx6:ListAttributes>
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="&quot;Segment&quot;"/>
                                        </pfx6:Name>
                                        <pfx6:Value>
                                            <xsl:value-of select="'EBU'"/>
                                        </pfx6:Value>
                                    </pfx6:Atribute>
                                </pfx6:ListAttributes>
                                <pfx6:ProductId>
                                    <pfx6:Id>
                                        <xsl:value-of select="$Parse-XML/Order/ListOfBillingAccount/BillingAccount[1]/ListOfInvoiceProfile/InvoiceProfile[1]/PostingMethod"/>
                                    </pfx6:Id>
                                </pfx6:ProductId>
                                <pfx6:ProductCustomerData>
                                    <pfx6:ExternalBillingAccountId>
                                        <xsl:value-of select="$Parse-XML/Order/ListOfRootItem/RootItem[1]/BillAcctCode"/>
                                    </pfx6:ExternalBillingAccountId>
                                    <pfx6:ListAttributes>
                                        <pfx6:Atribute>
                                            <pfx6:Name>
                                                <xsl:value-of select="'DESCRIPTION'"/>
                                            </pfx6:Name>
                                            <xsl:if test="$Parse-XML/Order/ListOfBillingAccount/BillingAccount[1]/ListOfInvoiceProfile/InvoiceProfile[1]/InvoiceProfileId">
                                                <pfx6:Value>
                                                    <xsl:value-of select="$Parse-XML/Order/ListOfBillingAccount/BillingAccount[1]/ListOfInvoiceProfile/InvoiceProfile[1]/InvoiceProfileId"/>
                                                </pfx6:Value>
                                            </xsl:if>
                                        </pfx6:Atribute>
                                    </pfx6:ListAttributes>
                                </pfx6:ProductCustomerData>
                            </pfx6:Product>
                        </pfx6:ProductList>
                    </pfx6:Request>
                </xsl:when>
                <xsl:otherwise>
                    <pfx6:Request>
                        <xsl:variable name="var" select="$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/OrderId"/>
                        <pfx6:ExternalId>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns3:Attributes/ns3:Attribute[ns3:Name = $var]/ns3:Value"/>
                        </pfx6:ExternalId>
                        <xsl:variable name="var2" select="$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/Id"/>
                        <pfx6:ExternalComponentId>
                            <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns3:Attributes/ns3:Attribute[ns3:Name = $var2]/ns3:Value"/>
                        </pfx6:ExternalComponentId>
                        <pfx6:ProductList>
                            <xsl:for-each select="$rootItem[not(ProductCatalogId = ('10000','30000','4000','7000','8000','9000'))]/ListOfChildItem/ChildItem[(Action = ('New','Resume') or (Action = 'Suspend' and ../../ActionReason=('217','216') and ../../ActionType ='116'))&#xA;and (not(ProductCatalogId =('3001','1113','1103','17006')) or (ProductCatalogId='3001' and ListOfChildItemAttribute/ChildItemAttribute[Name = 'VPN Account Discount']/Value='Y'))&#xA;and (not(ComponentType='GROUP_CHILD') or (ComponentType = 'GROUP_CHILD' and (ListOfChildItemAttribute/ChildItemAttribute[Name = 'Discount Percentage']/Value>0 and string-length(ListOfChildItemAttribute/ChildItemAttribute[Name = 'Discount Percentage']/Value)>0)))&#xA;and (not(ComponentType='HANDSET'))&#xA;and (not(ComponentType='OCC' and ComponentSubType='TRANSF_BALANCE' and ComponentGroup='SRV'))]|&#xA;$rootItem[ProductCatalogId = ('10000','30000','4000','7000','8000','9000') and Action = ('New','Resume') or (Action = 'Suspend' and ActionReason=('217','216') and ActionType ='116')]">
                                <xsl:choose>
                                    <xsl:when test="{--SVB Group--}&#xA;current()/ProductCatalogId = (&quot;10000&quot;,&quot;30000&quot;,&quot;4000&quot;,&quot;7000&quot;,&quot;8000&quot;,&quot;9000&quot;)">
                                        <pfx6:Product>
                                            <xsl:if test="current()/ActionReason">
                                                <pfx6:ActionReason>
                                                    <xsl:value-of select="current()/ActionReason"/>
                                                </pfx6:ActionReason>
                                            </xsl:if>
                                            <pfx6:ProductDuration>
                                                <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $rootItem/EndDate)">
                                                    <pfx6:EndDate>
                                                        <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $rootItem/EndDate)"/>
                                                    </pfx6:EndDate>
                                                </xsl:if>
                                                <xsl:choose>
                                                    <xsl:when test="string-length($GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value)>0">
                                                        <pfx6:StartDate>
                                                            <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,$rootItem/StartDate)"/>
                                                        </pfx6:StartDate>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,$rootItem/StartDate)">
                                                            <pfx6:StartDate>
                                                                <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,$rootItem/StartDate)"/>
                                                            </pfx6:StartDate>
                                                        </xsl:if>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                            </pfx6:ProductDuration>
                                            <pfx6:ListAttributes>
                                                <xsl:choose>
                                                    <xsl:when test="$rootItem/CustAcctType = '101'">
                                                        <pfx6:Atribute>
                                                            <pfx6:Name>
                                                                <xsl:value-of select="&quot;Segment&quot;"/>
                                                            </pfx6:Name>
                                                            <pfx6:Value>
                                                                <xsl:value-of select="'EBU'"/>
                                                            </pfx6:Value>
                                                        </pfx6:Atribute>
                                                    </xsl:when>
                                                    <xsl:when test="$rootItem/CustAcctType = '102'">
                                                        <pfx6:Atribute>
                                                            <pfx6:Name>
                                                                <xsl:value-of select="&quot;Segment&quot;"/>
                                                            </pfx6:Name>
                                                            <pfx6:Value>
                                                                <xsl:value-of select="'CBU'"/>
                                                            </pfx6:Value>
                                                        </pfx6:Atribute>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <pfx6:Atribute>
                                                            <pfx6:Name>
                                                                <xsl:value-of select="&quot;Segment&quot;"/>
                                                            </pfx6:Name>
                                                        </pfx6:Atribute>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                            </pfx6:ListAttributes>
                                            <pfx6:ProductId>
                                                <pfx6:Id>
                                                    <xsl:value-of select="$rootItem/ProductCatalogId"/>
                                                </pfx6:Id>
                                                <xsl:if test="$rootItem/IntegrationId">
                                                    <pfx6:InstanceId>
                                                        <xsl:value-of select="$rootItem/IntegrationId"/>
                                                    </pfx6:InstanceId>
                                                </xsl:if>
                                            </pfx6:ProductId>
                                            <pfx6:ProductCustomerData>
                                                <pfx6:ExternalBillingAccountId>
                                                    <xsl:value-of select="../../BillAcctCode"/>
                                                </pfx6:ExternalBillingAccountId>
                                                <pfx6:ListAttributes>
                                                    <xsl:for-each select="$rootItem/ListOfRootItemAttribute/RootItemAttribute">
                                                        <pfx6:Atribute>
                                                            <pfx6:Name>
                                                                <xsl:value-of select="current()/Name"/>
                                                            </pfx6:Name>
                                                            <pfx6:Value>
                                                                <xsl:value-of select="current()/Value"/>
                                                            </pfx6:Value>
                                                        </pfx6:Atribute>
                                                    </xsl:for-each>
                                                </pfx6:ListAttributes>
                                            </pfx6:ProductCustomerData>
                                            <pfx6:ChildProductList>
                                                <xsl:for-each select="current()/ListOfChildItem/ChildItem">
                                                    <pfx6:Product>
                                                        <pfx6:ProductDuration>
                                                            <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, EndDate)">
                                                                <pfx6:EndDate>
                                                                    <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, EndDate)"/>
                                                                </pfx6:EndDate>
                                                            </xsl:if>
                                                            <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,StartDate)">
                                                                <pfx6:StartDate>
                                                                    <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,StartDate)"/>
                                                                </pfx6:StartDate>
                                                            </xsl:if>
                                                        </pfx6:ProductDuration>
                                                        <pfx6:ListAttributes>
                                                            <xsl:choose>
                                                                <xsl:when test="$rootItem/CustAcctType = '101'">
                                                                    <pfx6:Atribute>
                                                                        <pfx6:Name>
                                                                            <xsl:value-of select="&quot;Segment&quot;"/>
                                                                        </pfx6:Name>
                                                                        <pfx6:Value>
                                                                            <xsl:value-of select="'EBU'"/>
                                                                        </pfx6:Value>
                                                                    </pfx6:Atribute>
                                                                </xsl:when>
                                                                <xsl:when test="$rootItem/CustAcctType = '102'">
                                                                    <pfx6:Atribute>
                                                                        <pfx6:Name>
                                                                            <xsl:value-of select="&quot;Segment&quot;"/>
                                                                        </pfx6:Name>
                                                                        <pfx6:Value>
                                                                            <xsl:value-of select="'CBU'"/>
                                                                        </pfx6:Value>
                                                                    </pfx6:Atribute>
                                                                </xsl:when>
                                                                <xsl:otherwise>
                                                                    <pfx6:Atribute>
                                                                        <pfx6:Name>
                                                                            <xsl:value-of select="&quot;Segment&quot;"/>
                                                                        </pfx6:Name>
                                                                    </pfx6:Atribute>
                                                                </xsl:otherwise>
                                                            </xsl:choose>
                                                        </pfx6:ListAttributes>
                                                        <pfx6:ProductId>
                                                            <pfx6:Id>
                                                                <xsl:value-of select="current()/ProductCatalogId"/>
                                                            </pfx6:Id>
                                                            <xsl:if test="current()/IntegrationId">
                                                                <pfx6:InstanceId>
                                                                    <xsl:value-of select="current()/IntegrationId"/>
                                                                </pfx6:InstanceId>
                                                            </xsl:if>
                                                        </pfx6:ProductId>
                                                        <pfx6:ProductCustomerData>
                                                            <pfx6:ExternalBillingAccountId>
                                                                <xsl:value-of select="current()/BillAcctCode"/>
                                                            </pfx6:ExternalBillingAccountId>
                                                        </pfx6:ProductCustomerData>
                                                    </pfx6:Product>
                                                </xsl:for-each>
                                            </pfx6:ChildProductList>
                                        </pfx6:Product>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <pfx6:Product>
                                            <xsl:variable name="_product" select="."/>
                                            <pfx6:ActionReason>
                                                <xsl:value-of select="$rootItem/ActionReason"/>
                                            </pfx6:ActionReason>
                                            <pfx6:ProductDuration>
                                                <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, EndDate)">
                                                    <pfx6:EndDate>
                                                        <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, EndDate)"/>
                                                    </pfx6:EndDate>
                                                </xsl:if>
                                                <xsl:choose>
                                                    <xsl:when test="string-length($GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value)>0">
                                                        <xsl:if test="$GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value">
                                                            <pfx6:StartDate>
                                                                <xsl:value-of select="$GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value"/>
                                                            </pfx6:StartDate>
                                                        </xsl:if>
                                                    </xsl:when>
                                                    <xsl:when test="$rootItem/ActionType=('127','128','131','137','130')&#xA;or&#xA;($rootItem/ActionReason=('217','216') and $rootItem/ActionType ='116')">
                                                        <xsl:choose>
                                                            <xsl:when test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,DueDate)">
                                                                <pfx6:StartDate>
                                                                    <xsl:value-of select="tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,DueDate)"/>
                                                                </pfx6:StartDate>
                                                            </xsl:when>
                                                            <xsl:otherwise>
                                                                <pfx6:StartDate>
                                                                    <xsl:value-of select="DueDate"/>
                                                                </pfx6:StartDate>
                                                            </xsl:otherwise>
                                                        </xsl:choose>
                                                    </xsl:when>
                                                    <xsl:when test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,../../../../OrderDueDate) and current()/Action='Resume'">
                                                        <xsl:choose>
                                                            <xsl:when test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,../../../../OrderDueDate) and current()/Action='Resume'">
                                                                <pfx6:StartDate>
                                                                    <xsl:value-of select="tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,../../../../OrderDueDate)"/>
                                                                </pfx6:StartDate>
                                                            </xsl:when>
                                                            <xsl:otherwise>
                                                                <pfx6:StartDate>
                                                                    <xsl:value-of select="../../../../OrderDueDate"/>
                                                                </pfx6:StartDate>
                                                            </xsl:otherwise>
                                                        </xsl:choose>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,StartDate)">
                                                            <pfx6:StartDate>
                                                                <xsl:value-of select="tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,StartDate)"/>
                                                            </pfx6:StartDate>
                                                        </xsl:if>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                            </pfx6:ProductDuration>
                                            <pfx6:ListAttributes>
                                                <xsl:choose>
                                                    <xsl:when test="$rootItem/CustAcctType = '101'">
                                                        <pfx6:Atribute>
                                                            <pfx6:Name>
                                                                <xsl:value-of select="&quot;Segment&quot;"/>
                                                            </pfx6:Name>
                                                            <pfx6:Value>
                                                                <xsl:value-of select="'EBU'"/>
                                                            </pfx6:Value>
                                                        </pfx6:Atribute>
                                                    </xsl:when>
                                                    <xsl:when test="$rootItem/CustAcctType = '102'">
                                                        <pfx6:Atribute>
                                                            <pfx6:Name>
                                                                <xsl:value-of select="&quot;Segment&quot;"/>
                                                            </pfx6:Name>
                                                            <pfx6:Value>
                                                                <xsl:value-of select="'CBU'"/>
                                                            </pfx6:Value>
                                                        </pfx6:Atribute>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <pfx6:Atribute>
                                                            <pfx6:Name>
                                                                <xsl:value-of select="&quot;Segment&quot;"/>
                                                            </pfx6:Name>
                                                        </pfx6:Atribute>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                                <xsl:for-each select="$GetAttributesByProductCategory/Output/ProductCategory[Name=$_product/EBUProductCategory]/Attribute">
                                                    <xsl:variable name="_attributeName" select="."/>
                                                    <xsl:variable name="_attribute" select="$_product/ListOfChildItemAttribute/ChildItemAttribute[Name=$_attributeName][1]"/>
                                                    <pfx6:Atribute>
                                                        <pfx6:Name>
                                                            <xsl:value-of select="$_attribute/Name"/>
                                                        </pfx6:Name>
                                                        <xsl:if test="$_attribute/Value">
                                                            <pfx6:Value>
                                                                <xsl:value-of select="$_attribute/Value"/>
                                                            </pfx6:Value>
                                                        </xsl:if>
                                                        <pfx6:OldValue>
                                                            <xsl:value-of select="$_attribute/PreviousValue"/>
                                                        </pfx6:OldValue>
                                                    </pfx6:Atribute>
                                                </xsl:for-each>
                                            </pfx6:ListAttributes>
                                            <pfx6:ProductId>
                                                <pfx6:Id>
                                                    <xsl:value-of select="current()/ProductCatalogId"/>
                                                </pfx6:Id>
                                                <xsl:if test="current()/IntegrationId">
                                                    <pfx6:InstanceId>
                                                        <xsl:value-of select="current()/IntegrationId"/>
                                                    </pfx6:InstanceId>
                                                </xsl:if>
                                            </pfx6:ProductId>
                                            <pfx6:ProductCustomerData>
                                                <xsl:choose>
                                                    <xsl:when test="current()/ProductCatalogId = ($_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/ProductCatalogId/MTT_Account)">
                                                        <pfx6:ExternalBillingAccountId>
                                                            <xsl:value-of select="current()/ListOfChildItemAttribute/ChildItemAttribute[Name='Billing Account']/Value"/>
                                                        </pfx6:ExternalBillingAccountId>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <pfx6:ExternalBillingAccountId>
                                                            <xsl:value-of select="../../BillAcctCode"/>
                                                        </pfx6:ExternalBillingAccountId>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                                <xsl:choose>
                                                    <xsl:when test="current()/ProductCatalogId = ($_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/ProductCatalogId/MTT_Account)">
                                                        <pfx6:MSISDN>
                                                            <xsl:value-of select="current()/ListOfChildItemAttribute/ChildItemAttribute[Name='Billing Account']/Value"/>
                                                        </pfx6:MSISDN>
                                                    </xsl:when>
                                                    <xsl:when test="string-length(tib:trim($rootItem/MSISDN)) > 0">
                                                        <pfx6:MSISDN>
                                                            <xsl:value-of select="$rootItem/MSISDN"/>
                                                        </pfx6:MSISDN>
                                                    </xsl:when>
                                                    <xsl:otherwise/>
                                                </xsl:choose>
                                                <pfx6:ListAttributes>
                                                    <xsl:for-each select="current()/ListOfChildItemAttribute/ChildItemAttribute">
                                                        <pfx6:Atribute>
                                                            <xsl:if test="current()/Name">
                                                                <pfx6:Name>
                                                                    <xsl:value-of select="current()/Name"/>
                                                                </pfx6:Name>
                                                            </xsl:if>
                                                            <xsl:choose>
                                                                <xsl:when test="$rootItem/ListOfChildItem/ChildItem/ProductClass = 'GROUP_CHILD_CLASS'&#xA;and&#xA;current()/Name = 'Discount End Date'&#xA;and&#xA;tib:validate-dateTime('dd/MM/yyyy', current()/Value)">
                                                                    <pfx6:Value>
                                                                        <xsl:value-of select="tib:parse-dateTime('dd/MM/yyyy', current()/Value)"/>
                                                                    </pfx6:Value>
                                                                </xsl:when>
                                                                <xsl:when test="tib:validate-dateTime($_globalVariables/ns1:GlobalVariables/Domains/CustomerCare/Siebel/Formats/DateTime, current()/Value)">
                                                                    <pfx6:Value>
                                                                        <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Domains/CustomerCare/Siebel/Formats/DateTime, current()/Value)"/>
                                                                    </pfx6:Value>
                                                                </xsl:when>
                                                                <xsl:when test="tib:validate-dateTime($_globalVariables/ns1:GlobalVariables/Domains/CustomerCare/Siebel/Formats/Date, current()/Value)">
                                                                    <pfx6:Value>
                                                                        <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Domains/CustomerCare/Siebel/Formats/Date, current()/Value)"/>
                                                                    </pfx6:Value>
                                                                </xsl:when>
                                                                <xsl:otherwise>
                                                                    <xsl:if test="current()/Value">
                                                                        <pfx6:Value>
                                                                            <xsl:value-of select="current()/Value"/>
                                                                        </pfx6:Value>
                                                                    </xsl:if>
                                                                </xsl:otherwise>
                                                            </xsl:choose>
                                                        </pfx6:Atribute>
                                                    </xsl:for-each>
                                                </pfx6:ListAttributes>
                                            </pfx6:ProductCustomerData>
                                            <xsl:choose>
                                                <xsl:when test="$rootItem/ListOfChildItem/ChildItem/ListOfChildItemAttribute/ChildItemAttribute/Name='Fee Price'">
                                                    <pfx6:CurrencyRate>
                                                        <pfx6:Amount>
                                                            <xsl:value-of select="$rootItem/ListOfChildItem/ChildItem/ListOfChildItemAttribute/ChildItemAttribute[Name='Fee Price']/Value"/>
                                                        </pfx6:Amount>
                                                        <pfx6:Currency>
                                                            <xsl:value-of select="$BillingAccount/BillAcctCurrencyCode"/>
                                                        </pfx6:Currency>
                                                    </pfx6:CurrencyRate>
                                                </xsl:when>
                                                <xsl:otherwise/>
                                            </xsl:choose>
                                        </pfx6:Product>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:for-each>
                            <xsl:if test="string-length($JMS-Queue-Requestor/ns2:ActivityOutput/Body/pfx8:ServiceReply/pfx8:Body/pfx7:Response/pfx7:RemainingBalance)>0">
                                <xsl:for-each select="$rootItem[ComponentSubType= 'MOBILE' and Action = 'New' and ActionType ='137' and ActionReason = ('2013','2014')]/ListOfChildItem/ChildItem[ComponentGroup = 'SRV' and ComponentType = 'OCC' and ComponentSubType = 'TRANSF_BALANCE']">
                                    <pfx6:Product>
                                        <xsl:variable name="_product" select="."/>
                                        <pfx6:ActionReason>
                                            <xsl:value-of select="$rootItem/ActionReason"/>
                                        </pfx6:ActionReason>
                                        <pfx6:ProductDuration>
                                            <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, EndDate)">
                                                <pfx6:EndDate>
                                                    <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, EndDate)"/>
                                                </pfx6:EndDate>
                                            </xsl:if>
                                            <xsl:choose>
                                                <xsl:when test="string-length($GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value)>0">
                                                    <xsl:if test="$GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value">
                                                        <pfx6:StartDate>
                                                            <xsl:value-of select="$GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value"/>
                                                        </pfx6:StartDate>
                                                    </xsl:if>
                                                </xsl:when>
                                                <xsl:when test="$rootItem/ActionType=('127','128','131','137','130')&#xA;or&#xA;($rootItem/ActionReason=('217','216') and $rootItem/ActionType ='116')">
                                                    <xsl:choose>
                                                        <xsl:when test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,DueDate)">
                                                            <pfx6:StartDate>
                                                                <xsl:value-of select="tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,DueDate)"/>
                                                            </pfx6:StartDate>
                                                        </xsl:when>
                                                        <xsl:otherwise>
                                                            <pfx6:StartDate>
                                                                <xsl:value-of select="DueDate"/>
                                                            </pfx6:StartDate>
                                                        </xsl:otherwise>
                                                    </xsl:choose>
                                                </xsl:when>
                                                <xsl:when test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,../../../../OrderDueDate) and current()/Action='Resume'">
                                                    <xsl:choose>
                                                        <xsl:when test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,../../../../OrderDueDate) and current()/Action='Resume'">
                                                            <pfx6:StartDate>
                                                                <xsl:value-of select="tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,../../../../OrderDueDate)"/>
                                                            </pfx6:StartDate>
                                                        </xsl:when>
                                                        <xsl:otherwise>
                                                            <pfx6:StartDate>
                                                                <xsl:value-of select="../../../../OrderDueDate"/>
                                                            </pfx6:StartDate>
                                                        </xsl:otherwise>
                                                    </xsl:choose>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,StartDate)">
                                                        <pfx6:StartDate>
                                                            <xsl:value-of select="tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,StartDate)"/>
                                                        </pfx6:StartDate>
                                                    </xsl:if>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                        </pfx6:ProductDuration>
                                        <pfx6:ListAttributes>
                                            <xsl:choose>
                                                <xsl:when test="$rootItem/CustAcctType = '101'">
                                                    <pfx6:Atribute>
                                                        <pfx6:Name>
                                                            <xsl:value-of select="&quot;Segment&quot;"/>
                                                        </pfx6:Name>
                                                        <pfx6:Value>
                                                            <xsl:value-of select="'EBU'"/>
                                                        </pfx6:Value>
                                                    </pfx6:Atribute>
                                                </xsl:when>
                                                <xsl:when test="$rootItem/CustAcctType = '102'">
                                                    <pfx6:Atribute>
                                                        <pfx6:Name>
                                                            <xsl:value-of select="&quot;Segment&quot;"/>
                                                        </pfx6:Name>
                                                        <pfx6:Value>
                                                            <xsl:value-of select="'CBU'"/>
                                                        </pfx6:Value>
                                                    </pfx6:Atribute>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <pfx6:Atribute>
                                                        <pfx6:Name>
                                                            <xsl:value-of select="&quot;Segment&quot;"/>
                                                        </pfx6:Name>
                                                    </pfx6:Atribute>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                            <xsl:for-each select="$GetAttributesByProductCategory/Output/ProductCategory[Name=$_product/EBUProductCategory]/Attribute">
                                                <xsl:variable name="_attributeName" select="."/>
                                                <xsl:variable name="_attribute" select="$_product/ListOfChildItemAttribute/ChildItemAttribute[Name=$_attributeName][1]"/>
                                                <pfx6:Atribute>
                                                    <pfx6:Name>
                                                        <xsl:value-of select="$_attribute/Name"/>
                                                    </pfx6:Name>
                                                    <xsl:if test="$_attribute/Value">
                                                        <pfx6:Value>
                                                            <xsl:value-of select="$_attribute/Value"/>
                                                        </pfx6:Value>
                                                    </xsl:if>
                                                    <pfx6:OldValue>
                                                        <xsl:value-of select="$_attribute/PreviousValue"/>
                                                    </pfx6:OldValue>
                                                </pfx6:Atribute>
                                            </xsl:for-each>
                                        </pfx6:ListAttributes>
                                        <pfx6:ProductId>
                                            <pfx6:Id>
                                                <xsl:value-of select="current()/ProductCatalogId"/>
                                            </pfx6:Id>
                                            <xsl:if test="current()/IntegrationId">
                                                <pfx6:InstanceId>
                                                    <xsl:value-of select="current()/IntegrationId"/>
                                                </pfx6:InstanceId>
                                            </xsl:if>
                                        </pfx6:ProductId>
                                        <pfx6:ProductCustomerData>
                                            <xsl:choose>
                                                <xsl:when test="current()/ProductCatalogId = ($_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/ProductCatalogId/MTT_Account)">
                                                    <pfx6:ExternalBillingAccountId>
                                                        <xsl:value-of select="current()/ListOfChildItemAttribute/ChildItemAttribute[Name='Billing Account']/Value"/>
                                                    </pfx6:ExternalBillingAccountId>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <pfx6:ExternalBillingAccountId>
                                                        <xsl:value-of select="../../BillAcctCode"/>
                                                    </pfx6:ExternalBillingAccountId>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                            <xsl:choose>
                                                <xsl:when test="current()/ProductCatalogId = ($_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/ProductCatalogId/MTT_Account)">
                                                    <pfx6:MSISDN>
                                                        <xsl:value-of select="current()/ListOfChildItemAttribute/ChildItemAttribute[Name='Billing Account']/Value"/>
                                                    </pfx6:MSISDN>
                                                </xsl:when>
                                                <xsl:when test="string-length(tib:trim($rootItem/MSISDN)) > 0">
                                                    <pfx6:MSISDN>
                                                        <xsl:value-of select="$rootItem/MSISDN"/>
                                                    </pfx6:MSISDN>
                                                </xsl:when>
                                                <xsl:otherwise/>
                                            </xsl:choose>
                                            <pfx6:ListAttributes>
                                                <xsl:for-each select="current()/ListOfChildItemAttribute/ChildItemAttribute">
                                                    <pfx6:Atribute>
                                                        <xsl:if test="current()/Name">
                                                            <pfx6:Name>
                                                                <xsl:value-of select="current()/Name"/>
                                                            </pfx6:Name>
                                                        </xsl:if>
                                                        <xsl:choose>
                                                            <xsl:when test="$rootItem/ListOfChildItem/ChildItem/ProductClass = 'GROUP_CHILD_CLASS'&#xA;and&#xA;current()/Name = 'Discount End Date'&#xA;and&#xA;tib:validate-dateTime('dd/MM/yyyy', current()/Value)">
                                                                <pfx6:Value>
                                                                    <xsl:value-of select="tib:parse-dateTime('dd/MM/yyyy', current()/Value)"/>
                                                                </pfx6:Value>
                                                            </xsl:when>
                                                            <xsl:when test="tib:validate-dateTime($_globalVariables/ns1:GlobalVariables/Domains/CustomerCare/Siebel/Formats/DateTime, current()/Value)">
                                                                <pfx6:Value>
                                                                    <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Domains/CustomerCare/Siebel/Formats/DateTime, current()/Value)"/>
                                                                </pfx6:Value>
                                                            </xsl:when>
                                                            <xsl:when test="tib:validate-dateTime($_globalVariables/ns1:GlobalVariables/Domains/CustomerCare/Siebel/Formats/Date, current()/Value)">
                                                                <pfx6:Value>
                                                                    <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Domains/CustomerCare/Siebel/Formats/Date, current()/Value)"/>
                                                                </pfx6:Value>
                                                            </xsl:when>
                                                            <xsl:otherwise>
                                                                <xsl:if test="current()/Value">
                                                                    <pfx6:Value>
                                                                        <xsl:value-of select="current()/Value"/>
                                                                    </pfx6:Value>
                                                                </xsl:if>
                                                            </xsl:otherwise>
                                                        </xsl:choose>
                                                    </pfx6:Atribute>
                                                </xsl:for-each>
                                            </pfx6:ListAttributes>
                                        </pfx6:ProductCustomerData>
                                        <pfx6:CurrencyRate>
                                            <pfx6:Amount>
                                                <xsl:value-of select="number(($JMS-Queue-Requestor/ns2:ActivityOutput/Body/pfx8:ServiceReply/pfx8:Body/pfx7:Response/pfx7:RemainingBalance div 100))"/>
                                            </pfx6:Amount>
                                            <pfx6:Currency>
                                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Constants/Types/Siebel/CurrencyTL"/>
                                            </pfx6:Currency>
                                        </pfx6:CurrencyRate>
                                    </pfx6:Product>
                                </xsl:for-each>
                            </xsl:if>
                            <xsl:for-each select="$Parse-XML/Order/ListOfAdjustment/Adjustment">
                                <pfx6:Product>
                                    <xsl:if test="$rootItem/ActionReason">
                                        <pfx6:ActionReason>
                                            <xsl:value-of select="$rootItem/ActionReason"/>
                                        </pfx6:ActionReason>
                                    </xsl:if>
                                    <pfx6:ListAttributes>
                                        <xsl:choose>
                                            <xsl:when test="$rootItem/CustAcctType = '101'">
                                                <pfx6:Atribute>
                                                    <pfx6:Name>
                                                        <xsl:value-of select="&quot;Segment&quot;"/>
                                                    </pfx6:Name>
                                                    <pfx6:Value>
                                                        <xsl:value-of select="'EBU'"/>
                                                    </pfx6:Value>
                                                </pfx6:Atribute>
                                            </xsl:when>
                                            <xsl:when test="$rootItem/CustAcctType = '102'">
                                                <pfx6:Atribute>
                                                    <pfx6:Name>
                                                        <xsl:value-of select="&quot;Segment&quot;"/>
                                                    </pfx6:Name>
                                                    <pfx6:Value>
                                                        <xsl:value-of select="'CBU'"/>
                                                    </pfx6:Value>
                                                </pfx6:Atribute>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <pfx6:Atribute>
                                                    <pfx6:Name>
                                                        <xsl:value-of select="&quot;Segment&quot;"/>
                                                    </pfx6:Name>
                                                </pfx6:Atribute>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                    </pfx6:ListAttributes>
                                    <pfx6:ProductId>
                                        <pfx6:Id>
                                            <xsl:value-of select="ProductCatalogId"/>
                                        </pfx6:Id>
                                        <xsl:if test="AdjustmentId">
                                            <pfx6:InstanceId>
                                                <xsl:value-of select="AdjustmentId"/>
                                            </pfx6:InstanceId>
                                        </xsl:if>
                                    </pfx6:ProductId>
                                    <pfx6:ProductCustomerData>
                                        <pfx6:ExternalBillingAccountId>
                                            <xsl:value-of select="$rootItem/BillAcctCode"/>
                                        </pfx6:ExternalBillingAccountId>
                                    </pfx6:ProductCustomerData>
                                    <pfx6:CurrencyRate>
                                        <pfx6:Amount>
                                            <xsl:value-of select="RequestAmt"/>
                                        </pfx6:Amount>
                                        <pfx6:Currency>
                                            <xsl:value-of select="$BillingAccount/BillAcctCurrencyCode"/>
                                        </pfx6:Currency>
                                    </pfx6:CurrencyRate>
                                </pfx6:Product>
                            </xsl:for-each>
                            <xsl:for-each select="$HdPassport">
                                <pfx6:Product>
                                    <xsl:variable name="_product" select="."/>
                                    <xsl:if test="$Parse-XML/Order/ListOfRootItem/RootItem[1]/ActionReason">
                                        <pfx6:ActionReason>
                                            <xsl:value-of select="$Parse-XML/Order/ListOfRootItem/RootItem[1]/ActionReason"/>
                                        </pfx6:ActionReason>
                                    </xsl:if>
                                    <pfx6:ProductDuration>
                                        <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, EndDate)">
                                            <pfx6:EndDate>
                                                <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, EndDate)"/>
                                            </pfx6:EndDate>
                                        </xsl:if>
                                        <xsl:choose>
                                            <xsl:when test="string-length($GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value)>0">
                                                <xsl:if test="$GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value">
                                                    <pfx6:StartDate>
                                                        <xsl:value-of select="$GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value"/>
                                                    </pfx6:StartDate>
                                                </xsl:if>
                                            </xsl:when>
                                            <xsl:when test="$rootItem/ActionType=('127','128','131','137','130')&#xA;or&#xA;($rootItem/ActionReason=('217','216') and $rootItem/ActionType ='116')">
                                                <xsl:choose>
                                                    <xsl:when test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,DueDate)">
                                                        <pfx6:StartDate>
                                                            <xsl:value-of select="tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,DueDate)"/>
                                                        </pfx6:StartDate>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <pfx6:StartDate>
                                                            <xsl:value-of select="DueDate"/>
                                                        </pfx6:StartDate>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                            </xsl:when>
                                            <xsl:when test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,../../../../OrderDueDate) and current()/Action='Resume'">
                                                <xsl:choose>
                                                    <xsl:when test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,../../../../OrderDueDate) and current()/Action='Resume'">
                                                        <pfx6:StartDate>
                                                            <xsl:value-of select="tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,../../../../OrderDueDate)"/>
                                                        </pfx6:StartDate>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <pfx6:StartDate>
                                                            <xsl:value-of select="../../../../OrderDueDate"/>
                                                        </pfx6:StartDate>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,StartDate)">
                                                    <pfx6:StartDate>
                                                        <xsl:value-of select="tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,StartDate)"/>
                                                    </pfx6:StartDate>
                                                </xsl:if>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                    </pfx6:ProductDuration>
                                    <pfx6:ListAttributes>
                                        <pfx6:Atribute>
                                            <pfx6:Name>
                                                <xsl:value-of select="&quot;Segment&quot;"/>
                                            </pfx6:Name>
                                            <pfx6:Value>
                                                <xsl:value-of select="if($customerAccount/CustAcctType = '102')&#xA;then 'CBU'&#xA;else 'EBU'"/>
                                            </pfx6:Value>
                                        </pfx6:Atribute>
                                        <xsl:for-each select="$GetAttributesByProductCategory/Output/ProductCategory[Name=$_product/EBUProductCategory]/Attribute">
                                            <xsl:variable name="_attributeName" select="."/>
                                            <xsl:variable name="_attribute" select="$_product/ListOfChildItemAttribute/ChildItemAttribute[Name=$_attributeName][1]"/>
                                            <pfx6:Atribute>
                                                <pfx6:Name>
                                                    <xsl:value-of select="$_attribute/Name"/>
                                                </pfx6:Name>
                                                <xsl:if test="$_attribute/Value">
                                                    <pfx6:Value>
                                                        <xsl:value-of select="$_attribute/Value"/>
                                                    </pfx6:Value>
                                                </xsl:if>
                                                <pfx6:OldValue>
                                                    <xsl:value-of select="$_attribute/PreviousValue"/>
                                                </pfx6:OldValue>
                                            </pfx6:Atribute>
                                        </xsl:for-each>
                                    </pfx6:ListAttributes>
                                    <pfx6:ProductId>
                                        <pfx6:Id>
                                            <xsl:value-of select="current()/ProductCatalogId"/>
                                        </pfx6:Id>
                                        <xsl:if test="current()/IntegrationId">
                                            <pfx6:InstanceId>
                                                <xsl:value-of select="current()/IntegrationId"/>
                                            </pfx6:InstanceId>
                                        </xsl:if>
                                    </pfx6:ProductId>
                                    <pfx6:ProductCustomerData>
                                        <xsl:choose>
                                            <xsl:when test="current()/ProductCatalogId = ($_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/ProductCatalogId/MTT_Account)">
                                                <pfx6:ExternalBillingAccountId>
                                                    <xsl:value-of select="current()/ListOfChildItemAttribute/ChildItemAttribute[Name='Billing Account']/Value"/>
                                                </pfx6:ExternalBillingAccountId>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <pfx6:ExternalBillingAccountId>
                                                    <xsl:value-of select="../../BillAcctCode"/>
                                                </pfx6:ExternalBillingAccountId>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                        <xsl:choose>
                                            <xsl:when test="current()/ProductCatalogId = ($_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/ProductCatalogId/MTT_Account)">
                                                <pfx6:MSISDN>
                                                    <xsl:value-of select="current()/ListOfChildItemAttribute/ChildItemAttribute[Name='Billing Account']/Value"/>
                                                </pfx6:MSISDN>
                                            </xsl:when>
                                            <xsl:when test="string-length(tib:trim($rootItem/MSISDN)) > 0">
                                                <pfx6:MSISDN>
                                                    <xsl:value-of select="$rootItem/MSISDN"/>
                                                </pfx6:MSISDN>
                                            </xsl:when>
                                            <xsl:otherwise/>
                                        </xsl:choose>
                                        <pfx6:ListAttributes>
                                            <xsl:for-each select="current()/ListOfChildItemAttribute/ChildItemAttribute">
                                                <pfx6:Atribute>
                                                    <xsl:if test="current()/Name">
                                                        <pfx6:Name>
                                                            <xsl:value-of select="current()/Name"/>
                                                        </pfx6:Name>
                                                    </xsl:if>
                                                    <xsl:choose>
                                                        <xsl:when test="$rootItem/ListOfChildItem/ChildItem/ProductClass = 'GROUP_CHILD_CLASS'&#xA;and&#xA;current()/Name = 'Discount End Date'&#xA;and&#xA;tib:validate-dateTime('dd/MM/yyyy', current()/Value)">
                                                            <pfx6:Value>
                                                                <xsl:value-of select="tib:parse-dateTime('dd/MM/yyyy', current()/Value)"/>
                                                            </pfx6:Value>
                                                        </xsl:when>
                                                        <xsl:when test="tib:validate-dateTime($_globalVariables/ns1:GlobalVariables/Domains/CustomerCare/Siebel/Formats/DateTime, current()/Value)">
                                                            <pfx6:Value>
                                                                <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Domains/CustomerCare/Siebel/Formats/DateTime, current()/Value)"/>
                                                            </pfx6:Value>
                                                        </xsl:when>
                                                        <xsl:when test="tib:validate-dateTime($_globalVariables/ns1:GlobalVariables/Domains/CustomerCare/Siebel/Formats/Date, current()/Value)">
                                                            <pfx6:Value>
                                                                <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Domains/CustomerCare/Siebel/Formats/Date, current()/Value)"/>
                                                            </pfx6:Value>
                                                        </xsl:when>
                                                        <xsl:otherwise>
                                                            <xsl:if test="current()/Value">
                                                                <pfx6:Value>
                                                                    <xsl:value-of select="current()/Value"/>
                                                                </pfx6:Value>
                                                            </xsl:if>
                                                        </xsl:otherwise>
                                                    </xsl:choose>
                                                </pfx6:Atribute>
                                            </xsl:for-each>
                                        </pfx6:ListAttributes>
                                    </pfx6:ProductCustomerData>
                                </pfx6:Product>
                            </xsl:for-each>
                        </pfx6:ProductList>
                    </pfx6:Request>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Data-Discount">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>655</pd:x>
        <pd:y>214</pd:y>
        <config>
            <element ref="pfx6:Request"/>
        </config>
        <pd:inputBindings>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="rootItem" select="$Parse-XML/Order/ListOfRootItem/RootItem[Action = ('New','Existing') and (ProductCatalogId = ('17000','17100','17200','17300','17400','17500','17600','17700','17800','17900','18000','18100','18200','18300','5000','5005','60007','53002','53007','53008','53001','53003','53000','53006','53005','53004','53009','23000','10900','53039') or (ComponentGroup='CAMP' and ComponentType='DISCOUNT' and ComponentSubType='M2M DISCOUNT'))]"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="var" select="$rootItem/BillAcctCode"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="BillingAccount" select="$Parse-XML/Order/ListOfBillingAccount/BillingAccount[BillAcctCode=$var]"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="var2" select="$rootItem/CustAcctCode"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="customerAccount" select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[CustAcctCode=$var2]"/>
            <pfx6:Request>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId">
                    <pfx6:ExternalId>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId"/>
                    </pfx6:ExternalId>
                </xsl:if>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id">
                    <pfx6:ExternalComponentId>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id"/>
                    </pfx6:ExternalComponentId>
                </xsl:if>
                <pfx6:ProductList>
                    <pfx6:Product>
                        <pfx6:ActionReason>
                            <xsl:value-of select="$rootItem/ActionReason"/>
                        </pfx6:ActionReason>
                        <xsl:if test="string-length($Parse-XML/Order/OrderFutureDatedFlag)>0">
                            <xsl:if test="$Parse-XML/Order/OrderFutureDatedFlag">
                                <pfx6:isFDOOrder>
                                    <xsl:value-of select="$Parse-XML/Order/OrderFutureDatedFlag"/>
                                </pfx6:isFDOOrder>
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $Parse-XML/Order/OrderCreationDate)">
                            <pfx6:OrderCreationDate>
                                <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $Parse-XML/Order/OrderCreationDate)"/>
                            </pfx6:OrderCreationDate>
                        </xsl:if>
                        <pfx6:ProductDuration>
                            <xsl:if xmlns:xsl="http://www.w3.org/1999/XSL/Transform" test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $rootItem/EndDate)">
                                <pfx6:EndDate>
                                    <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $rootItem/EndDate)"/>
                                </pfx6:EndDate>
                            </xsl:if>
                            <xsl:choose>
                                <xsl:when test="string-length($GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value)>0">
                                    <pfx6:StartDate>
                                        <xsl:value-of select="$GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value"/>
                                    </pfx6:StartDate>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:if xmlns:xsl="http://www.w3.org/1999/XSL/Transform" test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,$rootItem/StartDate)">
                                        <pfx6:StartDate>
                                            <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,$rootItem/StartDate)"/>
                                        </pfx6:StartDate>
                                    </xsl:if>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx6:ProductDuration>
                        <pfx6:ListAttributes>
                            <xsl:choose>
                                <xsl:when test="$rootItem/CustAcctType = '101'">
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="'Segment'"/>
                                        </pfx6:Name>
                                        <pfx6:Value>
                                            <xsl:value-of select="'EBU'"/>
                                        </pfx6:Value>
                                    </pfx6:Atribute>
                                </xsl:when>
                                <xsl:when test="$rootItem/CustAcctType = '102'">
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="'Segment'"/>
                                        </pfx6:Name>
                                        <pfx6:Value>
                                            <xsl:value-of select="'CBU'"/>
                                        </pfx6:Value>
                                    </pfx6:Atribute>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="'Segment'"/>
                                        </pfx6:Name>
                                    </pfx6:Atribute>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:for-each select="$GetAttributesByProductCategory/Output/ProductCategory[Name=$rootItem/EBUProductCategory]/Attribute">
                                <xsl:variable name="_attributeName" select="."/>
                                <xsl:variable name="_attribute" select="$rootItem/ListOfRootItemAttribute/RootItemAttribute[Name=$_attributeName][1]"/>
                                <pfx6:Atribute>
                                    <pfx6:Name>
                                        <xsl:value-of select="$_attribute/Name"/>
                                    </pfx6:Name>
                                    <xsl:if test="$_attribute/Value">
                                        <pfx6:Value>
                                            <xsl:value-of select="$_attribute/Value"/>
                                        </pfx6:Value>
                                    </xsl:if>
                                    <pfx6:OldValue>
                                        <xsl:value-of select="$_attribute/PreviousValue"/>
                                    </pfx6:OldValue>
                                </pfx6:Atribute>
                            </xsl:for-each>
                        </pfx6:ListAttributes>
                        <pfx6:ProductId>
                            <pfx6:Id>
                                <xsl:value-of select="$rootItem/ProductCatalogId"/>
                            </pfx6:Id>
                            <xsl:if test="$rootItem/IntegrationId">
                                <pfx6:InstanceId>
                                    <xsl:value-of select="$rootItem/IntegrationId"/>
                                </pfx6:InstanceId>
                            </xsl:if>
                        </pfx6:ProductId>
                        <pfx6:ProductCustomerData>
                            <pfx6:ExternalBillingAccountId>
                                <xsl:value-of select="$rootItem/BillAcctCode"/>
                            </pfx6:ExternalBillingAccountId>
                            <xsl:if xmlns:xsl="http://www.w3.org/1999/XSL/Transform" test="string-length(tib:trim($rootItem/MSISDN))">
                                <pfx6:MSISDN>
                                    <xsl:value-of select="$rootItem/MSISDN"/>
                                </pfx6:MSISDN>
                            </xsl:if>
                            <pfx6:ListAttributes>
                                <xsl:for-each select="$rootItem/ListOfRootItemAttribute/RootItemAttribute[exists(Value)]">
                                    <pfx6:Atribute>
                                        <xsl:if test="current()/Name">
                                            <pfx6:Name>
                                                <xsl:value-of select="current()/Name"/>
                                            </pfx6:Name>
                                        </xsl:if>
                                        <xsl:if test="current()/Value">
                                            <pfx6:Value>
                                                <xsl:value-of select="current()/Value"/>
                                            </pfx6:Value>
                                        </xsl:if>
                                    </pfx6:Atribute>
                                </xsl:for-each>
                            </pfx6:ListAttributes>
                        </pfx6:ProductCustomerData>
                    </pfx6:Product>
                </pfx6:ProductList>
            </pfx6:Request>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Data-GetBalance">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>520</pd:x>
        <pd:y>972</pd:y>
        <config>
            <element ref="pfx7:Request"/>
        </config>
        <pd:inputBindings>
            <pfx7:Request>
                <pfx7:MSISDN>
                    <xsl:value-of select="$Parse-XML/Order/ListOfRootItem/RootItem[Action = 'New']/ServiceId"/>
                </pfx7:MSISDN>
            </pfx7:Request>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Data-M2M">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>653</pd:x>
        <pd:y>434</pd:y>
        <config>
            <element ref="pfx6:Request"/>
        </config>
        <pd:inputBindings>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="rootItem" select="$Parse-XML/Order/ListOfRootItem/RootItem[Action = ('New','Existing')]"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="var" select="$rootItem/BillAcctCode"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="BillingAccount" select="$Parse-XML/Order/ListOfBillingAccount/BillingAccount[BillAcctCode=$var]"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="var2" select="$rootItem/CustAcctCode"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="customerAccount" select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[CustAcctCode=$var2]"/>
            <pfx6:Request>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId">
                    <pfx6:ExternalId>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId"/>
                    </pfx6:ExternalId>
                </xsl:if>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id">
                    <pfx6:ExternalComponentId>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id"/>
                    </pfx6:ExternalComponentId>
                </xsl:if>
                <pfx6:ProductList>
                    <pfx6:Product>
                        <pfx6:ActionReason>
                            <xsl:value-of select="$rootItem/ActionReason"/>
                        </pfx6:ActionReason>
                        <xsl:if test="string-length($Parse-XML/Order/OrderFutureDatedFlag)>0">
                            <xsl:if test="$Parse-XML/Order/OrderFutureDatedFlag">
                                <pfx6:isFDOOrder>
                                    <xsl:value-of select="$Parse-XML/Order/OrderFutureDatedFlag"/>
                                </pfx6:isFDOOrder>
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $Parse-XML/Order/OrderCreationDate)">
                            <pfx6:OrderCreationDate>
                                <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $Parse-XML/Order/OrderCreationDate)"/>
                            </pfx6:OrderCreationDate>
                        </xsl:if>
                        <pfx6:ProductDuration>
                            <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $rootItem/EndDate)">
                                <pfx6:EndDate>
                                    <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $rootItem/EndDate)"/>
                                </pfx6:EndDate>
                            </xsl:if>
                            <xsl:choose>
                                <xsl:when test="string-length($GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value)>0">
                                    <pfx6:StartDate>
                                        <xsl:value-of select="$GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value"/>
                                    </pfx6:StartDate>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,$rootItem/StartDate)">
                                        <pfx6:StartDate>
                                            <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,$rootItem/StartDate)"/>
                                        </pfx6:StartDate>
                                    </xsl:if>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx6:ProductDuration>
                        <pfx6:ListAttributes>
                            <xsl:choose>
                                <xsl:when test="$rootItem/CustAcctType = '101'">
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="'Segment'"/>
                                        </pfx6:Name>
                                        <pfx6:Value>
                                            <xsl:value-of select="'EBU'"/>
                                        </pfx6:Value>
                                    </pfx6:Atribute>
                                </xsl:when>
                                <xsl:when test="$rootItem/CustAcctType = '102'">
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="'Segment'"/>
                                        </pfx6:Name>
                                        <pfx6:Value>
                                            <xsl:value-of select="'CBU'"/>
                                        </pfx6:Value>
                                    </pfx6:Atribute>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="'Segment'"/>
                                        </pfx6:Name>
                                    </pfx6:Atribute>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:for-each select="$GetAttributesByProductCategory/Output/ProductCategory[Name=$rootItem/EBUProductCategory]/Attribute">
                                <xsl:variable name="_attributeName" select="."/>
                                <xsl:variable name="_attribute" select="$rootItem/ListOfRootItemAttribute/RootItemAttribute[Name=$_attributeName][1]"/>
                                <pfx6:Atribute>
                                    <pfx6:Name>
                                        <xsl:value-of select="$_attribute/Name"/>
                                    </pfx6:Name>
                                    <xsl:if test="$_attribute/Value">
                                        <pfx6:Value>
                                            <xsl:value-of select="$_attribute/Value"/>
                                        </pfx6:Value>
                                    </xsl:if>
                                    <pfx6:OldValue>
                                        <xsl:value-of select="$_attribute/PreviousValue"/>
                                    </pfx6:OldValue>
                                </pfx6:Atribute>
                            </xsl:for-each>
                        </pfx6:ListAttributes>
                        <pfx6:ProductId>
                            <pfx6:Id>
                                <xsl:value-of select="$rootItem/ProductCatalogId"/>
                            </pfx6:Id>
                            <xsl:if test="$rootItem/IntegrationId">
                                <pfx6:InstanceId>
                                    <xsl:value-of select="$rootItem/IntegrationId"/>
                                </pfx6:InstanceId>
                            </xsl:if>
                        </pfx6:ProductId>
                        <pfx6:ProductCustomerData>
                            <pfx6:ExternalBillingAccountId>
                                <xsl:value-of select="$rootItem/BillAcctCode"/>
                            </pfx6:ExternalBillingAccountId>
                            <pfx6:ListAttributes>
                                <xsl:for-each select="$rootItem/ListOfRootItemAttribute/RootItemAttribute[exists(Value)]">
                                    <pfx6:Atribute>
                                        <xsl:if test="current()/Name">
                                            <pfx6:Name>
                                                <xsl:value-of select="current()/Name"/>
                                            </pfx6:Name>
                                        </xsl:if>
                                        <xsl:if test="current()/Value">
                                            <pfx6:Value>
                                                <xsl:value-of select="current()/Value"/>
                                            </pfx6:Value>
                                        </xsl:if>
                                    </pfx6:Atribute>
                                </xsl:for-each>
                            </pfx6:ListAttributes>
                        </pfx6:ProductCustomerData>
                    </pfx6:Product>
                    <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$rootItem/ListOfChildItem/ChildItem[Action = 'New']">
                        <pfx6:Product>
                            <xsl:variable name="_product" select="."/>
                            <xsl:if test="$rootItem/ActionReason">
                                <pfx6:ActionReason>
                                    <xsl:value-of select="$rootItem/ActionReason"/>
                                </pfx6:ActionReason>
                            </xsl:if>
                            <pfx6:ProductDuration>
                                <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, current()/EndDate)">
                                    <pfx6:EndDate>
                                        <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, current()/EndDate)"/>
                                    </pfx6:EndDate>
                                </xsl:if>
                                <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,current()/StartDate)">
                                    <pfx6:StartDate>
                                        <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,current()/StartDate)"/>
                                    </pfx6:StartDate>
                                </xsl:if>
                            </pfx6:ProductDuration>
                            <pfx6:ListAttributes>
                                <xsl:choose>
                                    <xsl:when test="$rootItem/CustAcctType = '101'">
                                        <pfx6:Atribute>
                                            <pfx6:Name>
                                                <xsl:value-of select="'Segment'"/>
                                            </pfx6:Name>
                                            <pfx6:Value>
                                                <xsl:value-of select="'EBU'"/>
                                            </pfx6:Value>
                                        </pfx6:Atribute>
                                    </xsl:when>
                                    <xsl:when test="$rootItem/CustAcctType = '102'">
                                        <pfx6:Atribute>
                                            <pfx6:Name>
                                                <xsl:value-of select="'Segment'"/>
                                            </pfx6:Name>
                                            <pfx6:Value>
                                                <xsl:value-of select="'CBU'"/>
                                            </pfx6:Value>
                                        </pfx6:Atribute>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <pfx6:Atribute>
                                            <pfx6:Name>
                                                <xsl:value-of select="'Segment'"/>
                                            </pfx6:Name>
                                        </pfx6:Atribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:for-each select="$GetAttributesByProductCategory/Output/ProductCategory[Name=$_product/EBUProductCategory]/Attribute">
                                    <xsl:variable name="_attributeName" select="."/>
                                    <xsl:variable name="_attribute" select="$_product/ListOfChildItemAttribute/ChildItemAttribute[Name=$_attributeName][1]"/>
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="$_attribute/Name"/>
                                        </pfx6:Name>
                                        <xsl:if test="$_attribute/Value">
                                            <pfx6:Value>
                                                <xsl:value-of select="$_attribute/Value"/>
                                            </pfx6:Value>
                                        </xsl:if>
                                        <pfx6:OldValue>
                                            <xsl:value-of select="$_attribute/PreviousValue"/>
                                        </pfx6:OldValue>
                                    </pfx6:Atribute>
                                </xsl:for-each>
                            </pfx6:ListAttributes>
                            <pfx6:ProductId>
                                <pfx6:Id>
                                    <xsl:value-of select="current()/ProductCatalogId"/>
                                </pfx6:Id>
                                <xsl:if test="current()/IntegrationId">
                                    <pfx6:InstanceId>
                                        <xsl:value-of select="current()/IntegrationId"/>
                                    </pfx6:InstanceId>
                                </xsl:if>
                            </pfx6:ProductId>
                            <pfx6:ProductCustomerData>
                                <pfx6:ExternalBillingAccountId>
                                    <xsl:value-of select="$rootItem/BillAcctCode"/>
                                </pfx6:ExternalBillingAccountId>
                            </pfx6:ProductCustomerData>
                        </pfx6:Product>
                    </xsl:for-each>
                </pfx6:ProductList>
            </pfx6:Request>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Data-MPBX">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>652</pd:x>
        <pd:y>365</pd:y>
        <config>
            <element ref="pfx6:Request"/>
        </config>
        <pd:inputBindings>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="rootItem" select="$Parse-XML/Order/ListOfRootItem/RootItem[Action = ('New','Existing')]"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="var" select="$rootItem/BillAcctCode"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="BillingAccount" select="$Parse-XML/Order/ListOfBillingAccount/BillingAccount[BillAcctCode=$var]"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="var2" select="$rootItem/CustAcctCode"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="customerAccount" select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[CustAcctCode=$var2]"/>
            <pfx6:Request>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId">
                    <pfx6:ExternalId>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId"/>
                    </pfx6:ExternalId>
                </xsl:if>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id">
                    <pfx6:ExternalComponentId>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id"/>
                    </pfx6:ExternalComponentId>
                </xsl:if>
                <pfx6:ProductList>
                    <pfx6:Product>
                        <pfx6:ActionReason>
                            <xsl:value-of select="$rootItem/ActionReason"/>
                        </pfx6:ActionReason>
                        <xsl:if test="string-length($Parse-XML/Order/OrderFutureDatedFlag)>0">
                            <xsl:if test="$Parse-XML/Order/OrderFutureDatedFlag">
                                <pfx6:isFDOOrder>
                                    <xsl:value-of select="$Parse-XML/Order/OrderFutureDatedFlag"/>
                                </pfx6:isFDOOrder>
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $Parse-XML/Order/OrderCreationDate)">
                            <pfx6:OrderCreationDate>
                                <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $Parse-XML/Order/OrderCreationDate)"/>
                            </pfx6:OrderCreationDate>
                        </xsl:if>
                        <pfx6:ProductDuration>
                            <xsl:if xmlns:xsl="http://www.w3.org/1999/XSL/Transform" test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $rootItem/EndDate)">
                                <pfx6:EndDate>
                                    <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $rootItem/EndDate)"/>
                                </pfx6:EndDate>
                            </xsl:if>
                            <xsl:choose>
                                <xsl:when test="string-length($GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value)>0">
                                    <pfx6:StartDate>
                                        <xsl:value-of select="$GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value"/>
                                    </pfx6:StartDate>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:if xmlns:xsl="http://www.w3.org/1999/XSL/Transform" test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,$rootItem/StartDate)">
                                        <pfx6:StartDate>
                                            <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,$rootItem/StartDate)"/>
                                        </pfx6:StartDate>
                                    </xsl:if>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx6:ProductDuration>
                        <pfx6:ListAttributes>
                            <xsl:choose>
                                <xsl:when test="$rootItem/CustAcctType = '101'">
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="'Segment'"/>
                                        </pfx6:Name>
                                        <pfx6:Value>
                                            <xsl:value-of select="'EBU'"/>
                                        </pfx6:Value>
                                    </pfx6:Atribute>
                                </xsl:when>
                                <xsl:when test="$rootItem/CustAcctType = '102'">
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="'Segment'"/>
                                        </pfx6:Name>
                                        <pfx6:Value>
                                            <xsl:value-of select="'CBU'"/>
                                        </pfx6:Value>
                                    </pfx6:Atribute>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="'Segment'"/>
                                        </pfx6:Name>
                                    </pfx6:Atribute>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:for-each select="$GetAttributesByProductCategory/Output/ProductCategory[Name=$rootItem/EBUProductCategory]/Attribute">
                                <xsl:variable name="_attributeName" select="."/>
                                <xsl:variable name="_attribute" select="$rootItem/ListOfRootItemAttribute/RootItemAttribute[Name=$_attributeName][1]"/>
                                <pfx6:Atribute>
                                    <pfx6:Name>
                                        <xsl:value-of select="$_attribute/Name"/>
                                    </pfx6:Name>
                                    <xsl:if test="$_attribute/Value">
                                        <pfx6:Value>
                                            <xsl:value-of select="$_attribute/Value"/>
                                        </pfx6:Value>
                                    </xsl:if>
                                    <pfx6:OldValue>
                                        <xsl:value-of select="$_attribute/PreviousValue"/>
                                    </pfx6:OldValue>
                                </pfx6:Atribute>
                            </xsl:for-each>
                        </pfx6:ListAttributes>
                        <pfx6:ProductId>
                            <pfx6:Id>
                                <xsl:value-of select="$rootItem/ProductCatalogId"/>
                            </pfx6:Id>
                            <xsl:if test="$rootItem/IntegrationId">
                                <pfx6:InstanceId>
                                    <xsl:value-of select="$rootItem/IntegrationId"/>
                                </pfx6:InstanceId>
                            </xsl:if>
                        </pfx6:ProductId>
                        <pfx6:ProductCustomerData>
                            <pfx6:ExternalBillingAccountId>
                                <xsl:value-of select="$rootItem/BillAcctCode"/>
                            </pfx6:ExternalBillingAccountId>
                            <pfx6:ListAttributes>
                                <xsl:for-each select="$rootItem/ListOfRootItemAttribute/RootItemAttribute[exists(Value)]">
                                    <pfx6:Atribute>
                                        <xsl:if test="current()/Name">
                                            <pfx6:Name>
                                                <xsl:value-of select="current()/Name"/>
                                            </pfx6:Name>
                                        </xsl:if>
                                        <xsl:if test="current()/Value">
                                            <pfx6:Value>
                                                <xsl:value-of select="current()/Value"/>
                                            </pfx6:Value>
                                        </xsl:if>
                                    </pfx6:Atribute>
                                </xsl:for-each>
                            </pfx6:ListAttributes>
                        </pfx6:ProductCustomerData>
                    </pfx6:Product>
                </pfx6:ProductList>
            </pfx6:Request>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Data-MTT">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>655</pd:x>
        <pd:y>290</pd:y>
        <config>
            <element ref="pfx6:Request"/>
        </config>
        <pd:inputBindings>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="rootItem" select="$Parse-XML/Order/ListOfRootItem/RootItem[Action = ('New','Existing')]"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="var" select="$rootItem/BillAcctCode"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="BillingAccount" select="$Parse-XML/Order/ListOfBillingAccount/BillingAccount[BillAcctCode=$var]"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="var2" select="$rootItem/CustAcctCode"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="customerAccount" select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[CustAcctCode=$var2]"/>
            <pfx6:Request>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId">
                    <pfx6:ExternalId>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId"/>
                    </pfx6:ExternalId>
                </xsl:if>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id">
                    <pfx6:ExternalComponentId>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id"/>
                    </pfx6:ExternalComponentId>
                </xsl:if>
                <pfx6:ProductList>
                    <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$rootItem/ListOfChildItem/ChildItem[Action = 'New']">
                        <pfx6:Product>
                            <xsl:variable name="_product" select="."/>
                            <pfx6:ActionReason>
                                <xsl:value-of select="$rootItem/ActionReason"/>
                            </pfx6:ActionReason>
                            <xsl:if test="string-length(../../../../OrderFutureDatedFlag)>0">
                                <xsl:if test="../../../../OrderFutureDatedFlag">
                                    <pfx6:isFDOOrder>
                                        <xsl:value-of select="../../../../OrderFutureDatedFlag"/>
                                    </pfx6:isFDOOrder>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, ../../../../OrderCreationDate)">
                                <pfx6:OrderCreationDate>
                                    <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,../../../../OrderCreationDate)"/>
                                </pfx6:OrderCreationDate>
                            </xsl:if>
                            <pfx6:ProductDuration>
                                <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, current()/EndDate)">
                                    <pfx6:EndDate>
                                        <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, current()/EndDate)"/>
                                    </pfx6:EndDate>
                                </xsl:if>
                                <xsl:choose>
                                    <xsl:when test="string-length($GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value)>0">
                                        <pfx6:StartDate>
                                            <xsl:value-of select="$GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value"/>
                                        </pfx6:StartDate>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,current()/StartDate)">
                                            <pfx6:StartDate>
                                                <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,current()/StartDate)"/>
                                            </pfx6:StartDate>
                                        </xsl:if>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </pfx6:ProductDuration>
                            <pfx6:ListAttributes>
                                <xsl:choose>
                                    <xsl:when test="$rootItem/CustAcctType = '101'">
                                        <pfx6:Atribute>
                                            <pfx6:Name>
                                                <xsl:value-of select="'Segment'"/>
                                            </pfx6:Name>
                                            <pfx6:Value>
                                                <xsl:value-of select="'EBU'"/>
                                            </pfx6:Value>
                                        </pfx6:Atribute>
                                    </xsl:when>
                                    <xsl:when test="$rootItem/CustAcctType = '102'">
                                        <pfx6:Atribute>
                                            <pfx6:Name>
                                                <xsl:value-of select="'Segment'"/>
                                            </pfx6:Name>
                                            <pfx6:Value>
                                                <xsl:value-of select="'CBU'"/>
                                            </pfx6:Value>
                                        </pfx6:Atribute>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <pfx6:Atribute>
                                            <pfx6:Name>
                                                <xsl:value-of select="'Segment'"/>
                                            </pfx6:Name>
                                        </pfx6:Atribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:for-each select="$GetAttributesByProductCategory/Output/ProductCategory[Name=$_product/EBUProductCategory]/Attribute">
                                    <xsl:variable name="_attributeName" select="."/>
                                    <xsl:variable name="_attribute" select="$_product/ListOfChildItemAttribute/ChildItemAttribute[Name=$_attributeName][1]"/>
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="$_attribute/Name"/>
                                        </pfx6:Name>
                                        <xsl:if test="$_attribute/Value">
                                            <pfx6:Value>
                                                <xsl:value-of select="$_attribute/Value"/>
                                            </pfx6:Value>
                                        </xsl:if>
                                        <pfx6:OldValue>
                                            <xsl:value-of select="$_attribute/PreviousValue"/>
                                        </pfx6:OldValue>
                                    </pfx6:Atribute>
                                </xsl:for-each>
                            </pfx6:ListAttributes>
                            <pfx6:ProductId>
                                <pfx6:Id>
                                    <xsl:value-of select="current()/ProductCatalogId"/>
                                </pfx6:Id>
                                <xsl:if test="current()/IntegrationId">
                                    <pfx6:InstanceId>
                                        <xsl:value-of select="current()/IntegrationId"/>
                                    </pfx6:InstanceId>
                                </xsl:if>
                            </pfx6:ProductId>
                            <pfx6:ProductCustomerData>
                                <pfx6:ExternalBillingAccountId>
                                    <xsl:value-of select="$rootItem/BillAcctCode"/>
                                </pfx6:ExternalBillingAccountId>
                                <pfx6:ListAttributes>
                                    <xsl:for-each select="$rootItem/ListOfRootItemAttribute/RootItemAttribute[exists(Value)]">
                                        <pfx6:Atribute>
                                            <xsl:if test="current()/Name">
                                                <pfx6:Name>
                                                    <xsl:value-of select="current()/Name"/>
                                                </pfx6:Name>
                                            </xsl:if>
                                            <xsl:if test="current()/Value">
                                                <pfx6:Value>
                                                    <xsl:value-of select="current()/Value"/>
                                                </pfx6:Value>
                                            </xsl:if>
                                        </pfx6:Atribute>
                                    </xsl:for-each>
                                    <xsl:for-each select="$_product/ListOfChildItemAttribute/ChildItemAttribute[exists(Value)]">
                                        <pfx6:Atribute>
                                            <xsl:if test="current()/Name">
                                                <pfx6:Name>
                                                    <xsl:value-of select="current()/Name"/>
                                                </pfx6:Name>
                                            </xsl:if>
                                            <xsl:if test="current()/Value">
                                                <pfx6:Value>
                                                    <xsl:value-of select="current()/Value"/>
                                                </pfx6:Value>
                                            </xsl:if>
                                        </pfx6:Atribute>
                                    </xsl:for-each>
                                </pfx6:ListAttributes>
                            </pfx6:ProductCustomerData>
                        </pfx6:Product>
                    </xsl:for-each>
                </pfx6:ProductList>
            </pfx6:Request>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Data-SVB Data Discount">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>658</pd:x>
        <pd:y>686</pd:y>
        <config>
            <element ref="pfx6:Request"/>
        </config>
        <pd:inputBindings>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="rootItem" select="$Parse-XML/Order/ListOfRootItem/RootItem[Action = ('New','Existing') and ProductCatalogId=('10013','4013','7013','8013','9013','4014','7027','8018','9014','10017')]"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="var" select="$rootItem/BillAcctCode"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="BillingAccount" select="$Parse-XML/Order/ListOfBillingAccount/BillingAccount[BillAcctCode=$var]"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="var2" select="$rootItem/CustAcctCode"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="customerAccount" select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[CustAcctCode=$var2]"/>
            <pfx6:Request>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId">
                    <pfx6:ExternalId>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId"/>
                    </pfx6:ExternalId>
                </xsl:if>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id">
                    <pfx6:ExternalComponentId>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id"/>
                    </pfx6:ExternalComponentId>
                </xsl:if>
                <pfx6:ProductList>
                    <pfx6:Product>
                        <pfx6:ActionReason>
                            <xsl:value-of select="$rootItem/ActionReason"/>
                        </pfx6:ActionReason>
                        <xsl:if test="string-length($Parse-XML/Order/OrderFutureDatedFlag)>0">
                            <xsl:if test="$Parse-XML/Order/OrderFutureDatedFlag">
                                <pfx6:isFDOOrder>
                                    <xsl:value-of select="$Parse-XML/Order/OrderFutureDatedFlag"/>
                                </pfx6:isFDOOrder>
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $Parse-XML/Order/OrderCreationDate)">
                            <pfx6:OrderCreationDate>
                                <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $Parse-XML/Order/OrderCreationDate)"/>
                            </pfx6:OrderCreationDate>
                        </xsl:if>
                        <pfx6:ProductDuration>
                            <xsl:if xmlns:xsl="http://www.w3.org/1999/XSL/Transform" test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $rootItem/EndDate)">
                                <pfx6:EndDate>
                                    <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $rootItem/EndDate)"/>
                                </pfx6:EndDate>
                            </xsl:if>
                            <xsl:choose>
                                <xsl:when test="string-length($GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value)>0">
                                    <pfx6:StartDate>
                                        <xsl:value-of select="$GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value"/>
                                    </pfx6:StartDate>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:if xmlns:xsl="http://www.w3.org/1999/XSL/Transform" test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,$rootItem/StartDate)">
                                        <pfx6:StartDate>
                                            <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,$rootItem/StartDate)"/>
                                        </pfx6:StartDate>
                                    </xsl:if>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx6:ProductDuration>
                        <pfx6:ListAttributes>
                            <xsl:choose>
                                <xsl:when test="$rootItem/CustAcctType = '101'">
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="'Segment'"/>
                                        </pfx6:Name>
                                        <pfx6:Value>
                                            <xsl:value-of select="'EBU'"/>
                                        </pfx6:Value>
                                    </pfx6:Atribute>
                                </xsl:when>
                                <xsl:when test="$rootItem/CustAcctType = '102'">
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="'Segment'"/>
                                        </pfx6:Name>
                                        <pfx6:Value>
                                            <xsl:value-of select="'CBU'"/>
                                        </pfx6:Value>
                                    </pfx6:Atribute>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="'Segment'"/>
                                        </pfx6:Name>
                                    </pfx6:Atribute>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:for-each select="$GetAttributesByProductCategory/Output/ProductCategory[Name=$rootItem/EBUProductCategory]/Attribute">
                                <xsl:variable name="_attributeName" select="."/>
                                <xsl:variable name="_attribute" select="$rootItem/ListOfRootItemAttribute/RootItemAttribute[Name=$_attributeName][1]"/>
                                <pfx6:Atribute>
                                    <pfx6:Name>
                                        <xsl:value-of select="$_attribute/Name"/>
                                    </pfx6:Name>
                                    <xsl:if test="$_attribute/Value">
                                        <pfx6:Value>
                                            <xsl:value-of select="$_attribute/Value"/>
                                        </pfx6:Value>
                                    </xsl:if>
                                    <pfx6:OldValue>
                                        <xsl:value-of select="$_attribute/PreviousValue"/>
                                    </pfx6:OldValue>
                                </pfx6:Atribute>
                            </xsl:for-each>
                        </pfx6:ListAttributes>
                        <pfx6:ProductId>
                            <pfx6:Id>
                                <xsl:value-of select="$rootItem/ProductCatalogId"/>
                            </pfx6:Id>
                            <xsl:if test="$rootItem/IntegrationId">
                                <pfx6:InstanceId>
                                    <xsl:value-of select="$rootItem/IntegrationId"/>
                                </pfx6:InstanceId>
                            </xsl:if>
                        </pfx6:ProductId>
                        <pfx6:ProductCustomerData>
                            <pfx6:ExternalBillingAccountId>
                                <xsl:value-of select="$rootItem/BillAcctCode"/>
                            </pfx6:ExternalBillingAccountId>
                            <xsl:if xmlns:xsl="http://www.w3.org/1999/XSL/Transform" test="string-length(tib:trim($rootItem/MSISDN))">
                                <pfx6:MSISDN>
                                    <xsl:value-of select="$rootItem/MSISDN"/>
                                </pfx6:MSISDN>
                            </xsl:if>
                            <pfx6:ListAttributes>
                                <xsl:for-each select="$rootItem/ListOfRootItemAttribute/RootItemAttribute[exists(Value)]">
                                    <pfx6:Atribute>
                                        <xsl:if test="current()/Name">
                                            <pfx6:Name>
                                                <xsl:value-of select="current()/Name"/>
                                            </pfx6:Name>
                                        </xsl:if>
                                        <xsl:if test="current()/Value">
                                            <pfx6:Value>
                                                <xsl:value-of select="current()/Value"/>
                                            </pfx6:Value>
                                        </xsl:if>
                                    </pfx6:Atribute>
                                </xsl:for-each>
                            </pfx6:ListAttributes>
                        </pfx6:ProductCustomerData>
                    </pfx6:Product>
                </pfx6:ProductList>
            </pfx6:Request>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Data-VPN">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>656</pd:x>
        <pd:y>517</pd:y>
        <config>
            <element ref="pfx6:Request"/>
        </config>
        <pd:inputBindings>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="rootItem" select="$Parse-XML/Order/ListOfRootItem/RootItem[Action = ('New','Existing')]"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="var" select="$rootItem/BillAcctCode"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="BillingAccount" select="$Parse-XML/Order/ListOfBillingAccount/BillingAccount[BillAcctCode=$var]"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="var2" select="$rootItem/CustAcctCode"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="customerAccount" select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[CustAcctCode=$var2]"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="Segment" select="if($customerAccount/CustAcctType = '102')&#xA;then 'CBU'&#xA;else 'EBU'"/>
            <pfx6:Request>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId">
                    <pfx6:ExternalId>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId"/>
                    </pfx6:ExternalId>
                </xsl:if>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id">
                    <pfx6:ExternalComponentId>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id"/>
                    </pfx6:ExternalComponentId>
                </xsl:if>
                <pfx6:ProductList>
                    <pfx6:Product>
                        <pfx6:ActionReason>
                            <xsl:value-of select="$rootItem/ActionReason"/>
                        </pfx6:ActionReason>
                        <xsl:if test="string-length($Parse-XML/Order/OrderFutureDatedFlag)>0">
                            <xsl:if test="$Parse-XML/Order/OrderFutureDatedFlag">
                                <pfx6:isFDOOrder>
                                    <xsl:value-of select="$Parse-XML/Order/OrderFutureDatedFlag"/>
                                </pfx6:isFDOOrder>
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $Parse-XML/Order/OrderCreationDate)">
                            <pfx6:OrderCreationDate>
                                <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $Parse-XML/Order/OrderCreationDate)"/>
                            </pfx6:OrderCreationDate>
                        </xsl:if>
                        <pfx6:ProductDuration>
                            <xsl:if xmlns:xsl="http://www.w3.org/1999/XSL/Transform" test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $rootItem/EndDate)">
                                <pfx6:EndDate>
                                    <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $rootItem/EndDate)"/>
                                </pfx6:EndDate>
                            </xsl:if>
                            <xsl:choose>
                                <xsl:when test="string-length($GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value)>0">
                                    <pfx6:StartDate>
                                        <xsl:value-of select="$GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value"/>
                                    </pfx6:StartDate>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:if xmlns:xsl="http://www.w3.org/1999/XSL/Transform" test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,$rootItem/StartDate)">
                                        <pfx6:StartDate>
                                            <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,$rootItem/StartDate)"/>
                                        </pfx6:StartDate>
                                    </xsl:if>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx6:ProductDuration>
                        <pfx6:ListAttributes>
                            <xsl:choose>
                                <xsl:when test="$rootItem/CustAcctType = '101'">
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="'Segment'"/>
                                        </pfx6:Name>
                                        <pfx6:Value>
                                            <xsl:value-of select="'EBU'"/>
                                        </pfx6:Value>
                                    </pfx6:Atribute>
                                </xsl:when>
                                <xsl:when test="$rootItem/CustAcctType = '102'">
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="'Segment'"/>
                                        </pfx6:Name>
                                        <pfx6:Value>
                                            <xsl:value-of select="'CBU'"/>
                                        </pfx6:Value>
                                    </pfx6:Atribute>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="'Segment'"/>
                                        </pfx6:Name>
                                    </pfx6:Atribute>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:for-each select="$GetAttributesByProductCategory/Output/ProductCategory[Name=$rootItem/EBUProductCategory]/Attribute">
                                <xsl:variable name="_attributeName" select="."/>
                                <xsl:variable name="_attribute" select="$rootItem/ListOfRootItemAttribute/RootItemAttribute[Name=$_attributeName][1]"/>
                                <pfx6:Atribute>
                                    <pfx6:Name>
                                        <xsl:value-of select="$_attribute/Name"/>
                                    </pfx6:Name>
                                    <xsl:if test="$_attribute/Value">
                                        <pfx6:Value>
                                            <xsl:value-of select="$_attribute/Value"/>
                                        </pfx6:Value>
                                    </xsl:if>
                                    <pfx6:OldValue>
                                        <xsl:value-of select="$_attribute/PreviousValue"/>
                                    </pfx6:OldValue>
                                </pfx6:Atribute>
                            </xsl:for-each>
                        </pfx6:ListAttributes>
                        <pfx6:ProductId>
                            <pfx6:Id>
                                <xsl:value-of select="$rootItem/ProductCatalogId"/>
                            </pfx6:Id>
                            <xsl:if test="$rootItem/IntegrationId">
                                <pfx6:InstanceId>
                                    <xsl:value-of select="$rootItem/IntegrationId"/>
                                </pfx6:InstanceId>
                            </xsl:if>
                        </pfx6:ProductId>
                        <pfx6:ProductCustomerData>
                            <pfx6:ExternalBillingAccountId>
                                <xsl:value-of select="$rootItem/BillAcctCode"/>
                            </pfx6:ExternalBillingAccountId>
                            <xsl:if xmlns:xsl="http://www.w3.org/1999/XSL/Transform" test="string-length(tib:trim($rootItem/MSISDN))">
                                <pfx6:MSISDN>
                                    <xsl:value-of select="$rootItem/MSISDN"/>
                                </pfx6:MSISDN>
                            </xsl:if>
                            <pfx6:ListAttributes>
                                <xsl:for-each select="$rootItem/ListOfRootItemAttribute/RootItemAttribute[exists(Value)]">
                                    <pfx6:Atribute>
                                        <xsl:if test="current()/Name">
                                            <pfx6:Name>
                                                <xsl:value-of select="current()/Name"/>
                                            </pfx6:Name>
                                        </xsl:if>
                                        <xsl:if test="current()/Value">
                                            <pfx6:Value>
                                                <xsl:value-of select="current()/Value"/>
                                            </pfx6:Value>
                                        </xsl:if>
                                    </pfx6:Atribute>
                                </xsl:for-each>
                            </pfx6:ListAttributes>
                        </pfx6:ProductCustomerData>
                    </pfx6:Product>
                </pfx6:ProductList>
            </pfx6:Request>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Data-VSMM Consultancy">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>657</pd:x>
        <pd:y>600</pd:y>
        <config>
            <element ref="pfx6:Request"/>
        </config>
        <pd:inputBindings>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="rootItem" select="$Parse-XML/Order/ListOfRootItem/RootItem[Action = ('New','Existing')]"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="var" select="$rootItem/BillAcctCode"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="BillingAccount" select="$Parse-XML/Order/ListOfBillingAccount/BillingAccount[BillAcctCode=$var]"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="var2" select="$rootItem/CustAcctCode"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="customerAccount" select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[CustAcctCode=$var2]"/>
            <pfx6:Request>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId">
                    <pfx6:ExternalId>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId"/>
                    </pfx6:ExternalId>
                </xsl:if>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id">
                    <pfx6:ExternalComponentId>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id"/>
                    </pfx6:ExternalComponentId>
                </xsl:if>
                <pfx6:ProductList>
                    <pfx6:Product>
                        <pfx6:ActionReason>
                            <xsl:value-of select="$rootItem/ActionReason"/>
                        </pfx6:ActionReason>
                        <xsl:if test="string-length($Parse-XML/Order/OrderFutureDatedFlag)>0">
                            <xsl:if test="$Parse-XML/Order/OrderFutureDatedFlag">
                                <pfx6:isFDOOrder>
                                    <xsl:value-of select="$Parse-XML/Order/OrderFutureDatedFlag"/>
                                </pfx6:isFDOOrder>
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $Parse-XML/Order/OrderCreationDate)">
                            <pfx6:OrderCreationDate>
                                <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $Parse-XML/Order/OrderCreationDate)"/>
                            </pfx6:OrderCreationDate>
                        </xsl:if>
                        <pfx6:ProductDuration>
                            <xsl:if xmlns:xsl="http://www.w3.org/1999/XSL/Transform" test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $rootItem/EndDate)">
                                <pfx6:EndDate>
                                    <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $rootItem/EndDate)"/>
                                </pfx6:EndDate>
                            </xsl:if>
                            <xsl:choose>
                                <xsl:when test="string-length($GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value)>0">
                                    <pfx6:StartDate>
                                        <xsl:value-of select="$GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value"/>
                                    </pfx6:StartDate>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:if xmlns:xsl="http://www.w3.org/1999/XSL/Transform" test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,$rootItem/StartDate)">
                                        <pfx6:StartDate>
                                            <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,$rootItem/StartDate)"/>
                                        </pfx6:StartDate>
                                    </xsl:if>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx6:ProductDuration>
                        <pfx6:ListAttributes>
                            <xsl:choose>
                                <xsl:when test="$rootItem/CustAcctType = '101'">
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="'Segment'"/>
                                        </pfx6:Name>
                                        <pfx6:Value>
                                            <xsl:value-of select="'EBU'"/>
                                        </pfx6:Value>
                                    </pfx6:Atribute>
                                </xsl:when>
                                <xsl:when test="$rootItem/CustAcctType = '102'">
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="'Segment'"/>
                                        </pfx6:Name>
                                        <pfx6:Value>
                                            <xsl:value-of select="'CBU'"/>
                                        </pfx6:Value>
                                    </pfx6:Atribute>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="'Segment'"/>
                                        </pfx6:Name>
                                    </pfx6:Atribute>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:for-each select="$GetAttributesByProductCategory/Output/ProductCategory[Name=$rootItem/EBUProductCategory]/Attribute">
                                <xsl:variable name="_attributeName" select="."/>
                                <xsl:variable name="_attribute" select="$rootItem/ListOfRootItemAttribute/RootItemAttribute[Name=$_attributeName][1]"/>
                                <pfx6:Atribute>
                                    <pfx6:Name>
                                        <xsl:value-of select="$_attribute/Name"/>
                                    </pfx6:Name>
                                    <xsl:if test="$_attribute/Value">
                                        <pfx6:Value>
                                            <xsl:value-of select="$_attribute/Value"/>
                                        </pfx6:Value>
                                    </xsl:if>
                                    <pfx6:OldValue>
                                        <xsl:value-of select="$_attribute/PreviousValue"/>
                                    </pfx6:OldValue>
                                </pfx6:Atribute>
                            </xsl:for-each>
                        </pfx6:ListAttributes>
                        <pfx6:ProductId>
                            <pfx6:Id>
                                <xsl:value-of select="$rootItem/ProductCatalogId"/>
                            </pfx6:Id>
                            <xsl:if test="$rootItem/IntegrationId">
                                <pfx6:InstanceId>
                                    <xsl:value-of select="$rootItem/IntegrationId"/>
                                </pfx6:InstanceId>
                            </xsl:if>
                        </pfx6:ProductId>
                        <pfx6:ProductCustomerData>
                            <pfx6:ExternalBillingAccountId>
                                <xsl:value-of select="$rootItem/BillAcctCode"/>
                            </pfx6:ExternalBillingAccountId>
                            <xsl:if xmlns:xsl="http://www.w3.org/1999/XSL/Transform" test="string-length(tib:trim($rootItem/MSISDN))">
                                <pfx6:MSISDN>
                                    <xsl:value-of select="$rootItem/MSISDN"/>
                                </pfx6:MSISDN>
                            </xsl:if>
                            <pfx6:ListAttributes>
                                <xsl:for-each select="$rootItem/ListOfRootItemAttribute/RootItemAttribute[exists(Value)]">
                                    <pfx6:Atribute>
                                        <xsl:if test="current()/Name">
                                            <pfx6:Name>
                                                <xsl:value-of select="current()/Name"/>
                                            </pfx6:Name>
                                        </xsl:if>
                                        <xsl:if test="current()/Value">
                                            <pfx6:Value>
                                                <xsl:value-of select="current()/Value"/>
                                            </pfx6:Value>
                                        </xsl:if>
                                    </pfx6:Atribute>
                                </xsl:for-each>
                            </pfx6:ListAttributes>
                        </pfx6:ProductCustomerData>
                    </pfx6:Product>
                </pfx6:ProductList>
            </pfx6:Request>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>148</pd:x>
        <pd:y>353</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term>
                <xsd:element name="Order" type="pfx4:Order"/>
            </term>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Start/Input/pfx:RequestEAI/pfx:Body/*" element="ns:Request"/>
        </pd:coercions>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:XMLMessage/*[1]"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Data-MAF-Discount">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>657</pd:x>
        <pd:y>130</pd:y>
        <config>
            <element ref="pfx6:Request"/>
        </config>
        <pd:inputBindings>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="rootItem" select="$Parse-XML/Order/ListOfRootItem/RootItem[Action = ('New','Existing') and ProductCatalogId =('26108','26100')]"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="BillingAccount" select="$Parse-XML/Order/ListOfBillingAccount/BillingAccount[BillAcctCode=$rootItem/BillAcctCode]"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="customerAccount" select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[CustAcctCode=$rootItem/CustAcctCode]"/>
            <pfx6:Request>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId">
                    <pfx6:ExternalId>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId"/>
                    </pfx6:ExternalId>
                </xsl:if>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id">
                    <pfx6:ExternalComponentId>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id"/>
                    </pfx6:ExternalComponentId>
                </xsl:if>
                <pfx6:ProductList>
                    <xsl:for-each select="$rootItem/ListOfChildItem/ChildItem">
                        <xsl:variable name="_currChild" select="."/>
                        <pfx6:Product>
                            <pfx6:ActionReason>
                                <xsl:value-of select="$rootItem/ActionReason"/>
                            </pfx6:ActionReason>
                            <xsl:if test="string-length(../../../../OrderFutureDatedFlag)>0">
                                <xsl:if test="../../../../OrderFutureDatedFlag">
                                    <pfx6:isFDOOrder>
                                        <xsl:value-of select="../../../../OrderFutureDatedFlag"/>
                                    </pfx6:isFDOOrder>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, ../../../../OrderCreationDate)">
                                <pfx6:OrderCreationDate>
                                    <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, ../../../../OrderCreationDate)"/>
                                </pfx6:OrderCreationDate>
                            </xsl:if>
                            <pfx6:ProductDuration>
                                <xsl:if xmlns:xsl="http://www.w3.org/1999/XSL/Transform" test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $_currChild/EndDate)">
                                    <pfx6:EndDate>
                                        <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $_currChild/EndDate)"/>
                                    </pfx6:EndDate>
                                </xsl:if>
                                <xsl:choose>
                                    <xsl:when test="string-length($GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value)>0">
                                        <pfx6:StartDate>
                                            <xsl:value-of select="$GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value"/>
                                        </pfx6:StartDate>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:if xmlns:xsl="http://www.w3.org/1999/XSL/Transform" test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,$rootItem/ListOfChildItem/ChildItem/StartDate)">
                                            <pfx6:StartDate>
                                                <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,$rootItem/ListOfChildItem/ChildItem/StartDate)"/>
                                            </pfx6:StartDate>
                                        </xsl:if>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </pfx6:ProductDuration>
                            <pfx6:ListAttributes>
                                <xsl:choose>
                                    <xsl:when test="$rootItem/CustAcctType = '101'">
                                        <pfx6:Atribute>
                                            <pfx6:Name>
                                                <xsl:value-of select="'Segment'"/>
                                            </pfx6:Name>
                                            <pfx6:Value>
                                                <xsl:value-of select="'EBU'"/>
                                            </pfx6:Value>
                                        </pfx6:Atribute>
                                    </xsl:when>
                                    <xsl:when test="$rootItem/CustAcctType = '102'">
                                        <pfx6:Atribute>
                                            <pfx6:Name>
                                                <xsl:value-of select="'Segment'"/>
                                            </pfx6:Name>
                                            <pfx6:Value>
                                                <xsl:value-of select="'CBU'"/>
                                            </pfx6:Value>
                                        </pfx6:Atribute>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <pfx6:Atribute>
                                            <pfx6:Name>
                                                <xsl:value-of select="'Segment'"/>
                                            </pfx6:Name>
                                        </pfx6:Atribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$GetAttributesByProductCategory/Output/ProductCategory[Name=$_currChild/EBUProductCategory]/Attribute">
                                    <xsl:variable name="_attributeName" select="."/>
                                    <xsl:variable name="_attribute" select="$_currChild/ListOfChildItemAttribute/ChildItemAttribute[Name=$_attributeName][1]"/>
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="$_attribute/Name"/>
                                        </pfx6:Name>
                                        <xsl:if test="$_attribute/Value">
                                            <pfx6:Value>
                                                <xsl:value-of select="$_attribute/Value"/>
                                            </pfx6:Value>
                                        </xsl:if>
                                        <pfx6:OldValue>
                                            <xsl:value-of select="$_attribute/PreviousValue"/>
                                        </pfx6:OldValue>
                                    </pfx6:Atribute>
                                </xsl:for-each>
                            </pfx6:ListAttributes>
                            <pfx6:ProductId>
                                <pfx6:Id>
                                    <xsl:value-of select="$_currChild/ProductCatalogId"/>
                                </pfx6:Id>
                                <pfx6:InstanceId>
                                    <xsl:value-of select="$_currChild/IntegrationId"/>
                                </pfx6:InstanceId>
                            </pfx6:ProductId>
                            <pfx6:ProductCustomerData>
                                <pfx6:ExternalBillingAccountId>
                                    <xsl:value-of select="$rootItem/BillAcctCode"/>
                                </pfx6:ExternalBillingAccountId>
                                <xsl:if xmlns:xsl="http://www.w3.org/1999/XSL/Transform" test="string-length(tib:trim($rootItem/MSISDN))">
                                    <pfx6:MSISDN>
                                        <xsl:value-of select="$rootItem/MSISDN"/>
                                    </pfx6:MSISDN>
                                </xsl:if>
                                <pfx6:ListAttributes>
                                    <xsl:for-each select="$_currChild/ListOfChildItemAttribute/ChildItemAttribute">
                                        <pfx6:Atribute>
                                            <xsl:if test="Name">
                                                <pfx6:Name>
                                                    <xsl:value-of select="Name"/>
                                                </pfx6:Name>
                                            </xsl:if>
                                            <xsl:if test="Value">
                                                <pfx6:Value>
                                                    <xsl:value-of select="Value"/>
                                                </pfx6:Value>
                                            </xsl:if>
                                        </pfx6:Atribute>
                                    </xsl:for-each>
                                </pfx6:ListAttributes>
                            </pfx6:ProductCustomerData>
                        </pfx6:Product>
                    </xsl:for-each>
                </pfx6:ProductList>
            </pfx6:Request>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetGlobalData">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>260</pd:x>
        <pd:y>353</pd:y>
        <config>
            <processName>/Domains/OrderManagement/BusinessResources/Processes/TO2FGlobalData/GetGlobalData.process</processName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Start/Input/pfx:RequestEAI/pfx:Body/*" element="ns:Request"/>
        </pd:coercions>
        <pd:inputBindings>
            <Input>
                <OrderId>
                    <xsl:value-of xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId"/>
                </OrderId>
            </Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Data-Fee">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>658</pd:x>
        <pd:y>764</pd:y>
        <config>
            <element ref="pfx6:Request"/>
        </config>
        <pd:inputBindings>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="rootItem" select="$Parse-XML/Order/ListOfRootItem/RootItem[&#xA;&#x9;(Action = ('New','Existing','Resume') or (ActionReason=('217','216') and ActionType ='116'))&#xA;&#x9;and&#xA;&#x9;not(ProductCatalogId=('26108','17000','17100','17200','17300','17400','17500','17600','17700','17800','17900','18000','18100','18200','18300','5000','5005','60007','53002','53007','53008','53001','53003','53000','53006','53005','53004','53009','23000','10900','21400','1600','40000','3000','10900','10013','4013','7013','8013','9013','4014','7027','8018','9014','10017'))&#xA;]"/>
            <xsl:variable name="var3" select="$rootItem/BillAcctCode"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="BillingAccount" select="$Parse-XML/Order/ListOfBillingAccount/BillingAccount[BillAcctCode=$var3]"/>
            <xsl:variable name="var4" select="$rootItem/CustAcctCode"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="customerAccount" select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[CustAcctCode=$var4]"/>
            <pfx6:Request>
                <xsl:variable name="var" select="$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/OrderId"/>
                <pfx6:ExternalId>
                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns3:Attributes/ns3:Attribute[ns3:Name = $var]/ns3:Value"/>
                </pfx6:ExternalId>
                <xsl:variable name="var2" select="$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/Id"/>
                <pfx6:ExternalComponentId>
                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns3:Attributes/ns3:Attribute[ns3:Name = $var2]/ns3:Value"/>
                </pfx6:ExternalComponentId>
                <pfx6:ProductList>
                    <xsl:for-each select="$Parse-XML/Order/ListOfRootItem/RootItem[Action='Resume']/ListOfChildItem/ChildItem[Action='New' and not(ProductCatalogId = ('1103','1113'))]">
                        <pfx6:Product>
                            <xsl:variable name="_product" select="."/>
                            <xsl:if test="$Parse-XML/Order/ListOfRootItem/RootItem[1]/ActionReason">
                                <pfx6:ActionReason>
                                    <xsl:value-of select="$Parse-XML/Order/ListOfRootItem/RootItem[1]/ActionReason"/>
                                </pfx6:ActionReason>
                            </xsl:if>
                            <xsl:if test="string-length(../../../../OrderFutureDatedFlag)>0">
                                <xsl:if test="../../../../OrderFutureDatedFlag">
                                    <pfx6:isFDOOrder>
                                        <xsl:value-of select="../../../../OrderFutureDatedFlag"/>
                                    </pfx6:isFDOOrder>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, ../../../../OrderCreationDate)">
                                <pfx6:OrderCreationDate>
                                    <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, ../../../../OrderCreationDate)"/>
                                </pfx6:OrderCreationDate>
                            </xsl:if>
                            <pfx6:ProductDuration>
                                <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, EndDate)">
                                    <pfx6:EndDate>
                                        <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, EndDate)"/>
                                    </pfx6:EndDate>
                                </xsl:if>
                                <xsl:choose>
                                    <xsl:when test="string-length($GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value)>0">
                                        <pfx6:StartDate>
                                            <xsl:value-of select="$GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value"/>
                                        </pfx6:StartDate>
                                    </xsl:when>
                                    <xsl:when test="$rootItem/ActionType=('127','128','131','137','130')&#xA;or&#xA;($rootItem/ActionReason=('217','216') and $rootItem/ActionType ='116')">
                                        <xsl:choose>
                                            <xsl:when test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,DueDate)">
                                                <pfx6:StartDate>
                                                    <xsl:value-of select="tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,DueDate)"/>
                                                </pfx6:StartDate>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <pfx6:StartDate>
                                                    <xsl:value-of select="DueDate"/>
                                                </pfx6:StartDate>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                    </xsl:when>
                                    <xsl:when test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,../../../../OrderDueDate) and current()/Action='Resume'">
                                        <xsl:choose>
                                            <xsl:when test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,../../../../OrderDueDate) and current()/Action='Resume'">
                                                <pfx6:StartDate>
                                                    <xsl:value-of select="tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,../../../../OrderDueDate)"/>
                                                </pfx6:StartDate>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <pfx6:StartDate>
                                                    <xsl:value-of select="../../../../OrderDueDate"/>
                                                </pfx6:StartDate>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,StartDate)">
                                            <pfx6:StartDate>
                                                <xsl:value-of select="tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,StartDate)"/>
                                            </pfx6:StartDate>
                                        </xsl:if>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </pfx6:ProductDuration>
                            <pfx6:ListAttributes>
                                <xsl:choose>
                                    <xsl:when test="$rootItem/CustAcctType = '101'">
                                        <pfx6:Atribute>
                                            <pfx6:Name>
                                                <xsl:value-of select="&quot;Segment&quot;"/>
                                            </pfx6:Name>
                                            <pfx6:Value>
                                                <xsl:value-of select="'EBU'"/>
                                            </pfx6:Value>
                                        </pfx6:Atribute>
                                    </xsl:when>
                                    <xsl:when test="$rootItem/CustAcctType = '102'">
                                        <pfx6:Atribute>
                                            <pfx6:Name>
                                                <xsl:value-of select="&quot;Segment&quot;"/>
                                            </pfx6:Name>
                                            <pfx6:Value>
                                                <xsl:value-of select="'CBU'"/>
                                            </pfx6:Value>
                                        </pfx6:Atribute>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <pfx6:Atribute>
                                            <pfx6:Name>
                                                <xsl:value-of select="&quot;Segment&quot;"/>
                                            </pfx6:Name>
                                        </pfx6:Atribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:for-each select="$GetAttributesByProductCategory/Output/ProductCategory[Name=$_product/EBUProductCategory]/Attribute">
                                    <xsl:variable name="_attributeName" select="."/>
                                    <xsl:variable name="_attribute" select="$_product/ListOfChildItemAttribute/ChildItemAttribute[Name=$_attributeName][1]"/>
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="$_attribute/Name"/>
                                        </pfx6:Name>
                                        <xsl:if test="$_attribute/Value">
                                            <pfx6:Value>
                                                <xsl:value-of select="$_attribute/Value"/>
                                            </pfx6:Value>
                                        </xsl:if>
                                        <pfx6:OldValue>
                                            <xsl:value-of select="$_attribute/PreviousValue"/>
                                        </pfx6:OldValue>
                                    </pfx6:Atribute>
                                </xsl:for-each>
                            </pfx6:ListAttributes>
                            <pfx6:ProductId>
                                <pfx6:Id>
                                    <xsl:value-of select="current()/ProductCatalogId"/>
                                </pfx6:Id>
                                <xsl:if test="current()/IntegrationId">
                                    <pfx6:InstanceId>
                                        <xsl:value-of select="current()/IntegrationId"/>
                                    </pfx6:InstanceId>
                                </xsl:if>
                            </pfx6:ProductId>
                            <pfx6:ProductCustomerData>
                                <xsl:choose>
                                    <xsl:when test="current()/ProductCatalogId = ($_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/ProductCatalogId/MTT_Account)">
                                        <pfx6:ExternalBillingAccountId>
                                            <xsl:value-of select="current()/ListOfChildItemAttribute/ChildItemAttribute[Name='Billing Account']/Value"/>
                                        </pfx6:ExternalBillingAccountId>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <pfx6:ExternalBillingAccountId>
                                            <xsl:value-of select="../../BillAcctCode"/>
                                        </pfx6:ExternalBillingAccountId>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:choose>
                                    <xsl:when test="current()/ProductCatalogId = ($_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/ProductCatalogId/MTT_Account)">
                                        <pfx6:MSISDN>
                                            <xsl:value-of select="current()/ListOfChildItemAttribute/ChildItemAttribute[Name='Billing Account']/Value"/>
                                        </pfx6:MSISDN>
                                    </xsl:when>
                                    <xsl:when test="string-length(tib:trim($rootItem/MSISDN)) > 0">
                                        <pfx6:MSISDN>
                                            <xsl:value-of select="$rootItem/MSISDN"/>
                                        </pfx6:MSISDN>
                                    </xsl:when>
                                    <xsl:otherwise/>
                                </xsl:choose>
                                <pfx6:ListAttributes>
                                    <xsl:for-each select="current()/ListOfChildItemAttribute/ChildItemAttribute">
                                        <pfx6:Atribute>
                                            <xsl:if test="current()/Name">
                                                <pfx6:Name>
                                                    <xsl:value-of select="current()/Name"/>
                                                </pfx6:Name>
                                            </xsl:if>
                                            <xsl:choose>
                                                <xsl:when test="$rootItem/ListOfChildItem/ChildItem/ProductClass = 'GROUP_CHILD_CLASS'&#xA;and&#xA;current()/Name = 'Discount End Date'&#xA;and&#xA;tib:validate-dateTime('dd/MM/yyyy', current()/Value)">
                                                    <pfx6:Value>
                                                        <xsl:value-of select="tib:parse-dateTime('dd/MM/yyyy', current()/Value)"/>
                                                    </pfx6:Value>
                                                </xsl:when>
                                                <xsl:when test="tib:validate-dateTime($_globalVariables/ns1:GlobalVariables/Domains/CustomerCare/Siebel/Formats/DateTime, current()/Value)">
                                                    <pfx6:Value>
                                                        <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Domains/CustomerCare/Siebel/Formats/DateTime, current()/Value)"/>
                                                    </pfx6:Value>
                                                </xsl:when>
                                                <xsl:when test="tib:validate-dateTime($_globalVariables/ns1:GlobalVariables/Domains/CustomerCare/Siebel/Formats/Date, current()/Value)">
                                                    <pfx6:Value>
                                                        <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Domains/CustomerCare/Siebel/Formats/Date, current()/Value)"/>
                                                    </pfx6:Value>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <xsl:if test="current()/Value">
                                                        <pfx6:Value>
                                                            <xsl:value-of select="current()/Value"/>
                                                        </pfx6:Value>
                                                    </xsl:if>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                        </pfx6:Atribute>
                                    </xsl:for-each>
                                </pfx6:ListAttributes>
                            </pfx6:ProductCustomerData>
                        </pfx6:Product>
                    </xsl:for-each>
                </pfx6:ProductList>
            </pfx6:Request>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Data None Recouring Change">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>730</pd:x>
        <pd:y>1026</pd:y>
        <config>
            <element ref="pfx6:Request"/>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$JMS-Queue-Requestor-1/ns2:ActivityOutput/Body/pfx8:ServiceReply/pfx8:Body/*" element="pfx10:Response"/>
        </pd:coercions>
        <pd:inputBindings>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="rootItem" select="$Parse-XML/Order/ListOfRootItem/RootItem[Action = 'Modified' and ActionReason = ('607','608') and ActionType = ('102','103')]"/>
            <pfx6:Request>
                <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="var" select="$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/OrderId"/>
                <pfx6:ExternalId>
                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns3:Attributes/ns3:Attribute[ns3:Name = $var]/ns3:Value"/>
                </pfx6:ExternalId>
                <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="var2" select="$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/Id"/>
                <pfx6:ExternalComponentId>
                    <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns3:Attributes/ns3:Attribute[ns3:Name = $var2]/ns3:Value"/>
                </pfx6:ExternalComponentId>
                <pfx6:ProductList>
                    <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$Parse-XML/Order/ListOfRootItem/RootItem[Action = 'Modified' and ActionReason = ('607','608') and ActionType = ('102','103')]/ListOfChildItem/ChildItem[ComponentType = 'FEE' and Action = 'New']">
                        <pfx6:Product>
                            <xsl:variable name="_product" select="."/>
                            <xsl:if test="$Parse-XML/Order/ListOfRootItem/RootItem[1]/ActionReason">
                                <pfx6:ActionReason>
                                    <xsl:value-of select="$Parse-XML/Order/ListOfRootItem/RootItem[1]/ActionReason"/>
                                </pfx6:ActionReason>
                            </xsl:if>
                            <pfx6:ProductDuration>
                                <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, EndDate)">
                                    <pfx6:EndDate>
                                        <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, EndDate)"/>
                                    </pfx6:EndDate>
                                </xsl:if>
                                <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, StartDate)">
                                    <pfx6:StartDate>
                                        <xsl:value-of select="tib:parse-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,StartDate)"/>
                                    </pfx6:StartDate>
                                </xsl:if>
                            </pfx6:ProductDuration>
                            <pfx6:ListAttributes>
                                <xsl:choose>
                                    <xsl:when test="$rootItem/CustAcctType = '101'">
                                        <pfx6:Atribute>
                                            <pfx6:Name>
                                                <xsl:value-of select="&quot;Segment&quot;"/>
                                            </pfx6:Name>
                                            <pfx6:Value>
                                                <xsl:value-of select="'EBU'"/>
                                            </pfx6:Value>
                                        </pfx6:Atribute>
                                    </xsl:when>
                                    <xsl:when test="$rootItem/CustAcctType = '102'">
                                        <pfx6:Atribute>
                                            <pfx6:Name>
                                                <xsl:value-of select="&quot;Segment&quot;"/>
                                            </pfx6:Name>
                                            <pfx6:Value>
                                                <xsl:value-of select="'CBU'"/>
                                            </pfx6:Value>
                                        </pfx6:Atribute>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <pfx6:Atribute>
                                            <pfx6:Name>
                                                <xsl:value-of select="&quot;Segment&quot;"/>
                                            </pfx6:Name>
                                        </pfx6:Atribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:for-each select="$GetAttributesByProductCategory/Output/ProductCategory[Name=$_product/EBUProductCategory]/Attribute">
                                    <xsl:variable name="_attributeName" select="."/>
                                    <xsl:variable name="_attribute" select="$_product/ListOfChildItemAttribute/ChildItemAttribute[Name=$_attributeName][1]"/>
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="$_attribute/Name"/>
                                        </pfx6:Name>
                                        <xsl:if test="$_attribute/Value">
                                            <pfx6:Value>
                                                <xsl:value-of select="$_attribute/Value"/>
                                            </pfx6:Value>
                                        </xsl:if>
                                        <pfx6:OldValue>
                                            <xsl:value-of select="$_attribute/PreviousValue"/>
                                        </pfx6:OldValue>
                                    </pfx6:Atribute>
                                </xsl:for-each>
                            </pfx6:ListAttributes>
                            <pfx6:ProductId>
                                <pfx6:Id>
                                    <xsl:value-of select="current()/ProductCatalogId"/>
                                </pfx6:Id>
                                <xsl:if test="current()/IntegrationId">
                                    <pfx6:InstanceId>
                                        <xsl:value-of select="current()/IntegrationId"/>
                                    </pfx6:InstanceId>
                                </xsl:if>
                            </pfx6:ProductId>
                            <pfx6:ProductCustomerData>
                                <xsl:choose>
                                    <xsl:when test="current()/ProductCatalogId = ($_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/ProductCatalogId/MTT_Account)">
                                        <pfx6:ExternalBillingAccountId>
                                            <xsl:value-of select="current()/ListOfChildItemAttribute/ChildItemAttribute[Name='Billing Account']/Value"/>
                                        </pfx6:ExternalBillingAccountId>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <pfx6:ExternalBillingAccountId>
                                            <xsl:value-of select="../../BillAcctCode"/>
                                        </pfx6:ExternalBillingAccountId>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:choose>
                                    <xsl:when test="current()/ProductCatalogId = ($_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/OrderComponent/Constants/ProductCatalogId/MTT_Account)">
                                        <pfx6:MSISDN>
                                            <xsl:value-of select="current()/ListOfChildItemAttribute/ChildItemAttribute[Name='Billing Account']/Value"/>
                                        </pfx6:MSISDN>
                                    </xsl:when>
                                    <xsl:when test="string-length(tib:trim($rootItem/MSISDN)) > 0">
                                        <pfx6:MSISDN>
                                            <xsl:value-of select="$rootItem/MSISDN"/>
                                        </pfx6:MSISDN>
                                    </xsl:when>
                                    <xsl:otherwise/>
                                </xsl:choose>
                                <pfx6:ListAttributes>
                                    <xsl:for-each select="current()/ListOfChildItemAttribute/ChildItemAttribute">
                                        <pfx6:Atribute>
                                            <xsl:if test="current()/Name">
                                                <pfx6:Name>
                                                    <xsl:value-of select="current()/Name"/>
                                                </pfx6:Name>
                                            </xsl:if>
                                            <xsl:choose>
                                                <xsl:when test="$rootItem/ListOfChildItem/ChildItem/ProductClass = 'GROUP_CHILD_CLASS'&#xA;and&#xA;current()/Name = 'Discount End Date'&#xA;and&#xA;tib:validate-dateTime('dd/MM/yyyy', current()/Value)">
                                                    <pfx6:Value>
                                                        <xsl:value-of select="tib:parse-dateTime('dd/MM/yyyy', current()/Value)"/>
                                                    </pfx6:Value>
                                                </xsl:when>
                                                <xsl:when test="tib:validate-dateTime($_globalVariables/ns1:GlobalVariables/Domains/CustomerCare/Siebel/Formats/DateTime, current()/Value)">
                                                    <pfx6:Value>
                                                        <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Domains/CustomerCare/Siebel/Formats/DateTime, current()/Value)"/>
                                                    </pfx6:Value>
                                                </xsl:when>
                                                <xsl:when test="tib:validate-dateTime($_globalVariables/ns1:GlobalVariables/Domains/CustomerCare/Siebel/Formats/Date, current()/Value)">
                                                    <pfx6:Value>
                                                        <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Domains/CustomerCare/Siebel/Formats/Date, current()/Value)"/>
                                                    </pfx6:Value>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <xsl:if test="current()/Value">
                                                        <pfx6:Value>
                                                            <xsl:value-of select="current()/Value"/>
                                                        </pfx6:Value>
                                                    </xsl:if>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                        </pfx6:Atribute>
                                    </xsl:for-each>
                                </pfx6:ListAttributes>
                            </pfx6:ProductCustomerData>
                            <pfx6:CurrencyRate>
                                <pfx6:Amount>
                                    <xsl:value-of select="$JMS-Queue-Requestor-1/ns2:ActivityOutput/Body/pfx8:ServiceReply/pfx8:Body/pfx10:Response/pfx10:SimpleProperty[pfx10:Id = &quot;MafDesp&quot;]/pfx10:Value"/>
                                </pfx6:Amount>
                                <pfx6:Currency>
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Constants/Types/Siebel/CurrencyTL"/>
                                </pfx6:Currency>
                            </pfx6:CurrencyRate>
                        </pfx6:Product>
                    </xsl:for-each>
                </pfx6:ProductList>
            </pfx6:Request>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JMS-Queue-Requestor-1">
        <pd:type>com.tibco.plugin.jms.JMSQueueRequestReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueRequestReplyActivity</pd:resourceType>
        <pd:x>601</pd:x>
        <pd:y>1108</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>VFTR.Billing.ServiceCatalog.CCS.Business.R.Request.GetOfferPricePlanInfo_v1</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/GlobalCommonResources/Connections/JMS/JMS EAI Connection.sharedjmscon</ConnectionReference>
            <InDataxsdString ref="pfx5:ServiceRequest"/>
            <OutDataxsdString ref="pfx8:ServiceReply"/>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <JMSExpiration>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/OrderComponent/OCSyncRequestJMSMsgExpiration"/>
                </JMSExpiration>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Header/ns3:Priority">
                    <JMSPriority>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Header/ns3:Priority"/>
                    </JMSPriority>
                </xsl:if>
                <requestTimeout>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/OrderComponent/OCSyncRequestTimeout"/>
                </requestTimeout>
                <Body>
                    <pfx5:ServiceRequest>
                        <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$Start/Input/pfx:RequestEAI/pfx:Header">
                            <pfx5:Header>
                                <xsl:if test="ns3:RequestId">
                                    <ns3:RequestId>
                                        <xsl:value-of select="ns3:RequestId"/>
                                    </ns3:RequestId>
                                </xsl:if>
                                <ns3:SourceSystem>
                                    <xsl:value-of select="ns3:SourceSystem"/>
                                </ns3:SourceSystem>
                                <ns3:ReplyExpected>
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Constants/Reply/Now"/>
                                </ns3:ReplyExpected>
                                <ns3:QoS>
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Constants/QOS/Reliable"/>
                                </ns3:QoS>
                                <xsl:if test="ns3:Schedule">
                                    <ns3:Schedule>
                                        <xsl:value-of select="ns3:Schedule"/>
                                    </ns3:Schedule>
                                </xsl:if>
                                <xsl:if test="ns3:CorrelationId">
                                    <ns3:CorrelationId>
                                        <xsl:value-of select="ns3:CorrelationId"/>
                                    </ns3:CorrelationId>
                                </xsl:if>
                                <xsl:if test="ns3:Priority">
                                    <ns3:Priority>
                                        <xsl:value-of select="ns3:Priority"/>
                                    </ns3:Priority>
                                </xsl:if>
                                <xsl:for-each select="ns3:Credentials">
                                    <ns3:Credentials>
                                        <ns3:ApplicationId>
                                            <xsl:value-of select="ns3:ApplicationId"/>
                                        </ns3:ApplicationId>
                                        <ns3:User>
                                            <xsl:value-of select="ns3:User"/>
                                        </ns3:User>
                                        <xsl:if test="ns3:Password">
                                            <ns3:Password>
                                                <xsl:value-of select="ns3:Password"/>
                                            </ns3:Password>
                                        </xsl:if>
                                    </ns3:Credentials>
                                </xsl:for-each>
                                <xsl:if test="ns3:ProxySystem">
                                    <ns3:ProxySystem>
                                        <xsl:value-of select="ns3:ProxySystem"/>
                                    </ns3:ProxySystem>
                                </xsl:if>
                                <xsl:if test="ns3:ForceSimulate">
                                    <ns3:ForceSimulate>
                                        <xsl:value-of select="ns3:ForceSimulate"/>
                                    </ns3:ForceSimulate>
                                </xsl:if>
                                <xsl:for-each select="ns3:Attributes">
                                    <ns3:Attributes>
                                        <xsl:for-each select="ns3:Attribute">
                                            <ns3:Attribute>
                                                <ns3:Name>
                                                    <xsl:value-of select="ns3:Name"/>
                                                </ns3:Name>
                                                <ns3:Value>
                                                    <xsl:value-of select="ns3:Value"/>
                                                </ns3:Value>
                                            </ns3:Attribute>
                                        </xsl:for-each>
                                    </ns3:Attributes>
                                </xsl:for-each>
                            </pfx5:Header>
                        </xsl:for-each>
                        <pfx5:Body>
                            <xsl:copy-of select="$Map-Data-GetOfferPricePlanInfo/pfx10:Request"/>
                        </pfx5:Body>
                    </pfx5:ServiceRequest>
                </Body>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Data-GetOfferPricePlanInfo">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>395</pd:x>
        <pd:y>1105</pd:y>
        <config>
            <element ref="pfx10:Request"/>
        </config>
        <pd:inputBindings>
            <pfx10:Request>
                <pfx10:OfferId>
                    <xsl:value-of select="$Parse-XML/Order/ListOfRootItem/RootItem[Action = 'Modified' and ActionReason = ('607','608') and ActionType = ('102','103')]/ListOfChildItem/ChildItem[ComponentType = 'FEE' and Action = 'New']/ProductCatalogId"/>
                </pfx10:OfferId>
            </pfx10:Request>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Data-EnterpriceIQ">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>659</pd:x>
        <pd:y>41</pd:y>
        <config>
            <element ref="pfx6:Request"/>
        </config>
        <pd:inputBindings>
            <xsl:variable name="rootItem" select="$Parse-XML/Order/ListOfRootItem/RootItem[Action = ('New','Existing') and ProductCatalogId =('5500')]"/>
            <xsl:variable name="BillingAccount" select="$Parse-XML/Order/ListOfBillingAccount/BillingAccount[BillAcctCode=$rootItem/BillAcctCode]"/>
            <xsl:variable name="customerAccount" select="$Parse-XML/Order/ListOfCustomerAccount/CustomerAccount[CustAcctCode=$rootItem/CustAcctCode]"/>
            <pfx6:Request>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId">
                    <pfx6:ExternalId>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:OrderId"/>
                    </pfx6:ExternalId>
                </xsl:if>
                <xsl:if test="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id">
                    <pfx6:ExternalComponentId>
                        <xsl:value-of select="$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Id"/>
                    </pfx6:ExternalComponentId>
                </xsl:if>
                <pfx6:ProductList>
                    <pfx6:Product>
                        <pfx6:ActionReason>
                            <xsl:value-of select="$rootItem/ActionReason"/>
                        </pfx6:ActionReason>
                        <xsl:if test="string-length($Parse-XML/Order/OrderFutureDatedFlag)>0">
                            <xsl:if test="$Parse-XML/Order/OrderFutureDatedFlag">
                                <pfx6:isFDOOrder>
                                    <xsl:value-of select="$Parse-XML/Order/OrderFutureDatedFlag"/>
                                </pfx6:isFDOOrder>
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $Parse-XML/Order/OrderCreationDate)">
                            <pfx6:OrderCreationDate>
                                <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $Parse-XML/Order/OrderCreationDate)"/>
                            </pfx6:OrderCreationDate>
                        </xsl:if>
                        <pfx6:ProductDuration>
                            <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $rootItem/EndDate)">
                                <pfx6:EndDate>
                                    <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime, $rootItem/EndDate)"/>
                                </pfx6:EndDate>
                            </xsl:if>
                            <xsl:choose>
                                <xsl:when test="string-length($GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value)>0">
                                    <pfx6:StartDate>
                                        <xsl:value-of select="$GetGlobalData/Output/ListOfGlobalData/GlobalData[Key =$_globalVariables/ns1:GlobalVariables/Domains/OrderManagement/GlobalDataNames/ProvisioningDateTime]/Value"/>
                                    </pfx6:StartDate>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:if test="tib:validate-dateTime( $_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,$rootItem/StartDate)">
                                        <pfx6:StartDate>
                                            <xsl:value-of select="tib:parse-dateTime($_globalVariables/ns1:GlobalVariables/Constants/Formats/Siebel/DateTime,$rootItem/StartDate)"/>
                                        </pfx6:StartDate>
                                    </xsl:if>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx6:ProductDuration>
                        <pfx6:ListAttributes>
                            <xsl:choose>
                                <xsl:when test="$rootItem/CustAcctType = '101'">
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="'Segment'"/>
                                        </pfx6:Name>
                                        <pfx6:Value>
                                            <xsl:value-of select="'EBU'"/>
                                        </pfx6:Value>
                                    </pfx6:Atribute>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx6:Atribute>
                                        <pfx6:Name>
                                            <xsl:value-of select="'Segment'"/>
                                        </pfx6:Name>
                                    </pfx6:Atribute>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:for-each select="$GetAttributesByProductCategory/Output/ProductCategory[Name=$rootItem/EBUProductCategory]/Attribute">
                                <xsl:variable name="_attributeName" select="."/>
                                <xsl:variable name="_attribute" select="$rootItem/ListOfRootItemAttribute/RootItemAttribute[Name=$_attributeName][1]"/>
                                <pfx6:Atribute>
                                    <pfx6:Name>
                                        <xsl:value-of select="$_attribute/Name"/>
                                    </pfx6:Name>
                                    <xsl:if test="$_attribute/Value">
                                        <pfx6:Value>
                                            <xsl:value-of select="$_attribute/Value"/>
                                        </pfx6:Value>
                                    </xsl:if>
                                    <pfx6:OldValue>
                                        <xsl:value-of select="$_attribute/PreviousValue"/>
                                    </pfx6:OldValue>
                                </pfx6:Atribute>
                            </xsl:for-each>
                        </pfx6:ListAttributes>
                        <pfx6:ProductId>
                            <pfx6:Id>
                                <xsl:value-of select="$rootItem/ProductCatalogId"/>
                            </pfx6:Id>
                            <xsl:if test="$rootItem/IntegrationId">
                                <pfx6:InstanceId>
                                    <xsl:value-of select="$rootItem/IntegrationId"/>
                                </pfx6:InstanceId>
                            </xsl:if>
                        </pfx6:ProductId>
                        <pfx6:ProductCustomerData>
                            <pfx6:ExternalBillingAccountId>
                                <xsl:value-of select="$rootItem/BillAcctCode"/>
                            </pfx6:ExternalBillingAccountId>
                            <xsl:if test="string-length(tib:trim($rootItem/MSISDN))">
                                <pfx6:MSISDN>
                                    <xsl:value-of select="$rootItem/MSISDN"/>
                                </pfx6:MSISDN>
                            </xsl:if>
                            <pfx6:ListAttributes>
                                <xsl:for-each select="$rootItem/ListOfRootItemAttribute/RootItemAttribute[exists(Value)]">
                                    <pfx6:Atribute>
                                        <xsl:if test="current()/Name">
                                            <pfx6:Name>
                                                <xsl:value-of select="current()/Name"/>
                                            </pfx6:Name>
                                        </xsl:if>
                                        <xsl:if test="current()/Value">
                                            <pfx6:Value>
                                                <xsl:value-of select="current()/Value"/>
                                            </pfx6:Value>
                                        </xsl:if>
                                    </pfx6:Atribute>
                                </xsl:for-each>
                            </pfx6:ListAttributes>
                        </pfx6:ProductCustomerData>
                    </pfx6:Product>
                </pfx6:ProductList>
            </pfx6:Request>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetAttributesByProductCategory</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>JMS Queue Sender</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS Queue Sender</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetAttributesByProductCategory</pd:from>
        <pd:to>Map-Data-GetBalance</pd:to>
        <pd:xpathDescription>TransferPRE-POS</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/Order/ListOfRootItem/RootItem[ComponentSubType= 'MOBILE' and Action = 'New' and ActionType ='137']/ActionReason = ('2013','2014')</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Data-GetBalance</pd:from>
        <pd:to>JMS Queue Requestor</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS Queue Requestor</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:xpathDescription>Remaining Balance Found</pd:xpathDescription>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$JMS-Queue-Requestor/ns2:ActivityOutput/Body/pfx8:ServiceReply/pfx8:Header/ns4:ResponseCode = $_globalVariables/ns1:GlobalVariables/ErrorCodes/Success
or
$JMS-Queue-Requestor/ns2:ActivityOutput/Body/pfx8:ServiceReply/pfx8:Header/ns4:ResponseCode = $_globalVariables/ns1:GlobalVariables/ErrorCodes/NoDataFound</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS Queue Requestor</pd:from>
        <pd:to>Fail Order Component</pd:to>
        <pd:xpathDescription>Remaining Balance not Found</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Fail Order Component</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetAttributesByProductCategory</pd:from>
        <pd:to>Map-Data-VPN</pd:to>
        <pd:xpathDescription>VPN</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/Order/ListOfRootItem/RootItem/ProductCatalogId='3000'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Data-VPN</pd:from>
        <pd:to>JMS Queue Sender</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetAttributesByProductCategory</pd:from>
        <pd:to>Map-Data-MPBX</pd:to>
        <pd:xpathDescription>MPBX</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/Order/ListOfRootItem/RootItem/ProductCatalogId='1600'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Data-MPBX</pd:from>
        <pd:to>JMS Queue Sender</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetAttributesByProductCategory</pd:from>
        <pd:to>Map-Data-MTT</pd:to>
        <pd:xpathDescription>MTT</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/Order/ListOfRootItem/RootItem/ProductCatalogId='21400'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Data-MTT</pd:from>
        <pd:to>JMS Queue Sender</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetAttributesByProductCategory</pd:from>
        <pd:to>Map-Data-VSMM Consultancy</pd:to>
        <pd:xpathDescription>VSMM Consultancy</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/Order/ListOfRootItem/RootItem/ProductCatalogId='10900'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Data-VSMM Consultancy</pd:from>
        <pd:to>JMS Queue Sender</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetAttributesByProductCategory</pd:from>
        <pd:to>Map-Data-M2M</pd:to>
        <pd:xpathDescription>M2M</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/Order/ListOfRootItem/RootItem/ProductCatalogId='40000'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Data-M2M</pd:from>
        <pd:to>JMS Queue Sender</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetAttributesByProductCategory</pd:from>
        <pd:to>Map-Data-SVB Data Discount</pd:to>
        <pd:xpathDescription>SVB * Discount</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/Order/ListOfRootItem/RootItem/ProductCatalogId=('10013','4013','7013','8013','9013','4014','7027','8018','9014','10017')</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Data-SVB Data Discount</pd:from>
        <pd:to>JMS Queue Sender</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetAttributesByProductCategory</pd:from>
        <pd:to>Map-Data-Discount</pd:to>
        <pd:xpathDescription>Discount</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>(
$Parse-XML/Order/ListOfRootItem/RootItem/ProductCatalogId=('17000','17100','17200','17300','17400','17500','17600','17700','17800','17900','18000','18100','18200','18300','5000','5005','60007','53002','53007','53008','53001','53003','53000','53006','53005','53004','53009','23000','10900','53039')
or
(
$Parse-XML/Order/ListOfRootItem/RootItem/ComponentGroup='CAMP'
and $Parse-XML/Order/ListOfRootItem/RootItem/ComponentType='DISCOUNT'
and $Parse-XML/Order/ListOfRootItem/RootItem/ComponentSubType='M2M DISCOUNT'
)
)
and
contains($Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Scenario, 'ManageVodaparaProducts')</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Data-Discount</pd:from>
        <pd:to>JMS Queue Sender</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>GetGlobalData</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetAttributesByProductCategory</pd:from>
        <pd:to>Map-Data-MAF-Discount</pd:to>
        <pd:xpathDescription>MAF Discount</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/Order/ListOfRootItem/RootItem/ProductCatalogId=('26108','26100') and $Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Scenario='Billing.Kenan.AddProduct.Service.Mobile.ActivateMAF.Service.Mobile.ActivateMAF.Base'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Data-MAF-Discount</pd:from>
        <pd:to>JMS Queue Sender</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetGlobalData</pd:from>
        <pd:to>GetAttributesByProductCategory</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetAttributesByProductCategory</pd:from>
        <pd:to>Map-Data-Fee</pd:to>
        <pd:xpathDescription>FEE</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/Order/ListOfRootItem/RootItem[Action='Resume']/ListOfChildItem/ChildItem[ProductCatalogId='51024']/Action='New'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Data-Fee</pd:from>
        <pd:to>JMS Queue Sender</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data None Recouring Change</pd:from>
        <pd:to>JMS Queue Sender</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS-Queue-Requestor-1</pd:from>
        <pd:to>Map Data None Recouring Change</pd:to>
        <pd:xpathDescription>Success</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$JMS-Queue-Requestor-1/ns2:ActivityOutput/Body/pfx8:ServiceReply/pfx8:Header/ns4:ResponseCode = $_globalVariables/ns1:GlobalVariables/ErrorCodes/Success</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS-Queue-Requestor-1</pd:from>
        <pd:to>Fail Order Component</pd:to>
        <pd:xpathDescription>Error</pd:xpathDescription>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetAttributesByProductCategory</pd:from>
        <pd:to>Map-Data-GetOfferPricePlanInfo</pd:to>
        <pd:xpathDescription>NRC</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/Order/ListOfRootItem/RootItem[Action= 'Modified' and ActionReason = ('607','608') and ActionType = ('102','103')]/ListOfChildItem/ChildItem[ComponentType = 'FEE']/Action = 'New'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Data-GetOfferPricePlanInfo</pd:from>
        <pd:to>JMS-Queue-Requestor-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetAttributesByProductCategory</pd:from>
        <pd:to>Map-Data-EnterpriceIQ</pd:to>
        <pd:xpathDescription>EnterpriceIQ</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Start/Input/pfx:RequestEAI/pfx:Body/ns:Request/ns:OrderComponentDetails/ns:Scenario='Billing.Kenan.AddProduct.Service.Mobile.ActivateEnterpriseIQ.Service.Mobile.ActivateEnterpriseIQ.Base'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Data-EnterpriceIQ</pd:from>
        <pd:to>JMS Queue Sender</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:label>
        <pd:name>Label</pd:name>
        <pd:description>Path for Transfers (PRE-&gt;POS) Orders, sends remaining Balance to Kenan, by retrieving it from EAI database, filled by PRF</pd:description>
        <pd:x>478</pd:x>
        <pd:y>765</pd:y>
        <pd:width>134</pd:width>
        <pd:height>116</pd:height>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-10027162</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>false</pd:fade>
    </pd:label>
</pd:ProcessDefinition>